###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         24/Oct/2014  02:25:56 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\NomDuProjet.cpp                                #
#    Command line       =  "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\NomDuProjet.cpp" -lC                           #
#                          "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\Debug\List\" -lA "C:\Synchro\Dropbox\Travaux\A #
#                          utomne 2014\Fonctions\Projet Accumulatif           #
#                          IAR\Debug\List\" -o "C:\Synchro\Dropbox\Travaux\Au #
#                          tomne 2014\Fonctions\Projet Accumulatif            #
#                          IAR\Debug\Obj\" -e --no_cse --no_unroll            #
#                          --no_inline --no_code_motion --no_tbaa --debug     #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=near --calling_convention=xdata_reent #
#                          rant --place_constants=data --nr_virtual_regs 8    #
#                          --dlib_config "C:\Program Files (x86)\IAR          #
#                          Systems\Embedded Workbench                         #
#                          6.0\8051\LIB\DLIB\dl8051Normal.h" -Ol --ec++       #
#    List file          =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\Debug\List\NomDuProjet.lst                     #
#    Object file        =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\Debug\Obj\NomDuProjet.r51                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\NomDuProjet.cpp
      1          // **************************Main.c
      2          // Auteur:      Vincent Chouinard
      3          // Date:        29 septembre 2014
      4          // Version :    1.0
      5          //
      6          // Compilateur: IAR 8.10
      7          //
      8          // Description: Fichier principal
      9          //
     10          // *****************************************************************************
     11          // **** LES INCLUDES ****************//
     12          #include "CLI2CPort.h"               // Pour utiliser le bus I2C Software
     13          #include "CLI2CHard.h"               // Pour utiliser le bus I2C Hardware
     14          #include "CLSPI.h"                   // Pour utiliser le bus SPI
     15          #include "CLClavier.h"               // Pour utiliser le clavier
     16          #include "CLEcran.h"                 // Pour utiliser l'écran
     17          #include "Timer0.h"                  // Pour utiliser le timer 0
     18          #include "CLSortieLatch.h"           // Pour faire des conversion DAC <===> ADC
     19          #include "CLCommunicUpsdPort1.h"     // Pour utiliser le port série
     20          #include "_DeclarationGenerale.h"    // Raccourcis Linguistiques utiles
     21          #include "ConversionKeilToIAR.h"     // Compatbilité avec Keil
     22          #include "NomDuProjet.h"             //
     23          // **** LES DEFINES *****************//
     24          #define PCF8574Adress 0x40           // Adresse I2C du PCD8574
     25          // **** LES CLASSES *****************//
     26          class CLCommunic Serial  ;           // Initialise la communication série  
     27          class CLI2CPort  I2CSoft ;           // Initialise le communication I2C Software
     28          class CLI2CHARD  I2CHard ;           // Initialise le communication I2C Hardware
     29          class CLEcran    LCD     ;           // Initialise l' ecran LCD
     30          class CLClavier  Keyboard;           // Initialise le clavier
     31          class DAC_ADC    Convert ;           // Initialise la conversion DAC <===> ADC
     32          class Timer0     Timer   ;           // Pour utiliser le timer 0 (Default = 1ms)
     33          class CLSPI      SPI     ;           // Initialise la communication SPI
     34          // **** LES FONCTIONS DU MAIN *******//
     35          
     36          // **** PROGRAMME PRINCIPAL *********//
     37          void main(void)
     38          {
     39          EA    = 0   ;  // Disable interrupt.
                 ^
Error[Pe020]: identifier "EA" is undefined
     40          WDKEY = 0x55;  // Disable WatchDog.
                 ^
Error[Pe020]: identifier "WDKEY" is undefined
     41          EA    = 1   ;  // Enable Interrupt
     42          
     43          
     44          LCD.Lettre('A')          ;
     45          Serial.SendString("Test");
     46          LCD.vLCDCursor(0,1)      ;  
     47          LCD.String("Class.CAN")  ;
     48          LCD.vLCDCursor(0,2)      ;
     49          LCD.String("Class.SPI")  ;
     50          LCD.vLCDCursor(0,3)      ;
     51          LCD.String("Class.LCD")  ;
     52          LCD.vLCDCursor(0,3)      ;
     53          LCD.String("Class.I2C")  ;
     54          
     55          while(1)
     56            {
     57          
     58            }
     59          }
     60          //LinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxTUX

Errors: 2
Warnings: none
