###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         24/Oct/2014  02:25:57 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\CLSortieLatch.cpp                              #
#    Command line       =  "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\CLSortieLatch.cpp" -lC                         #
#                          "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\Debug\List\" -lA "C:\Synchro\Dropbox\Travaux\A #
#                          utomne 2014\Fonctions\Projet Accumulatif           #
#                          IAR\Debug\List\" -o "C:\Synchro\Dropbox\Travaux\Au #
#                          tomne 2014\Fonctions\Projet Accumulatif            #
#                          IAR\Debug\Obj\" -e --no_cse --no_unroll            #
#                          --no_inline --no_code_motion --no_tbaa --debug     #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=near --calling_convention=xdata_reent #
#                          rant --place_constants=data --nr_virtual_regs 8    #
#                          --dlib_config "C:\Program Files (x86)\IAR          #
#                          Systems\Embedded Workbench                         #
#                          6.0\8051\LIB\DLIB\dl8051Normal.h" -Ol --ec++       #
#    List file          =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\Debug\List\CLSortieLatch.lst                   #
#    Object file        =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\Fonctions\Projet Accumulatif                  #
#                          IAR\Debug\Obj\CLSortieLatch.r51                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\CLSortieLatch.cpp
      1          // **************************CLSortieLatch.cpp
      2          // Auteur:       Vincent Chouinard
      3          // Date:         20 juillet 2014
      4          // Version:      1.0
      5          // Modification: Aucune
      6          //
      7          // Compilateur:  IAR 8.1
      8          //
      9          // Description:
     10          // *****************************************************************************
     11          // Le channel du convertisseur ADC va de 0xFA08 a 0xFA0F
     12          // Le channel du convertisseur DAC va de...
     13          // *****************************************************************************
     14          #include "_DeclarationGenerale.h"  // Raccourcis de programmation & variables
     15          #include "CLSortieLatch.h"              // Fichier de definitions du clavier
     16          #include "CLInOutBase.h"
     17          
     18          
     19          //******************************************************************************
     20          //                            LE CONSTRUCTEUR PAR DEFAUT
     21          // *****************************************************************************
     22          DAC_ADC :: DAC_ADC(void)
     23          {
     24          
     25          }
     26          
     27          //******************************************************************************
     28          //                            LE CONSTRUCTEUR PAR DEFAUT
     29          // *****************************************************************************
     30          DAC_ADC :: DAC_ADC(UC ucParametre)
     31          {
     32          
     33          }
     34          
     35          // *****************************************************************************
     36          //                            LE DESTRUCTEUR
     37          // *****************************************************************************
     38          DAC_ADC :: ~DAC_ADC(void)
     39          {
     40          
     41          }
     42          
     43          void DAC_ADC :: DAC(UC ucChannel, UC ucData)
     44          {
     45          unsigned int uiAdresseDA;
     46          uiAdresseDA = 0xFA28 + ucChannel;
     47          
     48          vOut (0xFA20, ucData);            // Écriture de la donnée sur le latch (activation via chip select)
     49          vOut (uiAdresseDA, ucData);       // Transfert de la donnée du latch au convertisseur (via chip select)
     50          }
     51          
     52          
     53          
     54          
     55          
     56          
     57          
     58          UC DAC_ADC :: ADC(UC ucChannel)
     59          {
     60          UC ucEssai;
     61          unsigned int uiAdresseAD;
     62          
     63          uiAdresseAD = 0xFA08 + ucChannel; //Ajoute l'adresse au canal      
     64          ucEssai     = ucIn(uiAdresseAD);  //Chip select du ADC7829
     65          P3_3        = 0;                  //Demande de conversion
                 ^
Error[Pe020]: identifier "P3_3" is undefined
     66          P3_3        = 1;                  //Demande de conversion
     67          while (P3_2 == 0);                //Attente de fin de conversion
                        ^
Error[Pe020]: identifier "P3_2" is undefined
     68            {
     69             ucEssai = ucIn(uiAdresseAD);   //Lecture du convertisseur
     70            }
     71          //Version de programme pour la carte IO BUG ver2 ou il n'y a pas de buffer sur le bus de donnees
     72          //   ucEssai = ucInput(0xFA10);         //Lecture du buffer du convertisseur AD
     73             return (ucEssai);
     74          }
     75          
     76          
     77          
     78          //LinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxTUX

Errors: 2
Warnings: none
