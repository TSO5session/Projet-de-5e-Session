///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.40194/W32 for 8051        26/Aug/2014  17:08:26 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Dukto\ProjetDepart\_Session3Main.cpp           /
//    Command line       =  C:\Dukto\ProjetDepart\_Session3Main.cpp -D        /
//                          UPSD3254A --preprocess=cl                         /
//                          C:\Dukto\ProjetDepart\UPSD\List\ -lC              /
//                          C:\Dukto\ProjetDepart\UPSD\List\ -lA              /
//                          C:\Dukto\ProjetDepart\UPSD\List\ -o               /
//                          C:\Dukto\ProjetDepart\UPSD\Obj\ -e --no_cse       /
//                          --no_unroll --no_inline --no_code_motion          /
//                          --no_tbaa --debug --core=plain --dptr=16,1        /
//                          --data_model=large --code_model=near              /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data --nr_virtual_regs 8        /
//                          --dlib_config "C:\Program Files (x86)\IAR         /
//                          Systems\Embedded Workbench                        /
//                          6.0\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++     /
//    List file          =  C:\Dukto\ProjetDepart\UPSD\List\_Session3Main.s51 /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME _Session3Main

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "near"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??vInit_CPU
        FUNCTION ??vInit_CPU,0203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK _A_IE
        PUBLIC main
        FUNCTION main,021a03H
        ARGFRAME XSTACK, 0, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:16, ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
// C:\Dukto\ProjetDepart\_Session3Main.cpp
//    1 
//    2 
//    3 // ************************** FICHIER: ProjetSessionCinqMain.CPP  ****
//    4 //  Application realisee avec IAR C++ 8.10
//    5 //  LABORATOIRE PROJET FIN SESSION
//    6 //
//    7 //  VITESSE DE COMMUNICATION 19200
//    8 //
//    9 //  LIMITATION DU COMPILATEUR:
//   10 //    Impossible de faire de l'heritage multiple.
//   11 //
//   12 //  Programme principal.
//   13 //
//   14 //  Note on peut utiliser XAR pour creer des librairies.
//   15 //  On peut mettre les librairies dans le projets et Exclure de la compilation
//   16 //  les modules qui sont contenus dans la librairie.
//   17 //
//   18 //  Pour Windows 7 on utilise la VMware pour programmer le upsd 3254A avec CAPS.
//   19 //
//   20 //  AUTEUR : DANIEL BRETON
//   21 //  DATE CREATION :    2012-12-20       VERSION: 1.0
//   22 //  DATE MODIFICATION: ****-**-**
//   23 //
//   24 // ************************************************************************
//   25 #include "_DeclarationGenerale.h"

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IE
_A_IE:
        DATA8
        DS 1
//   26 
//   27 #include "_Session3Main.h"
//   28 
//   29 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   30 void main (void)
main:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function main
        CODE
//   31 {
        FUNCALL main, ??vInit_CPU
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        ; Auto size: 0
//   32 
//   33 
//   34 
//   35 EA = 0;                            // Disable interrupt.
        CLR     0xa8.7
//   36 vInit_CPU();                       // Disable WatchDog.
        ; Setup parameters for call to function vInit_CPU()
        LCALL   ??vInit_CPU
//   37 
//   38 
//   39 
//   40 
//   41 
//   42 EA = 1;                            // Enable interrupt.
        SETB    0xa8.7
//   43 while (VRAI)
??main_0:
        SJMP    ??main_0
        CFI EndBlock cfiBlock0
        REQUIRE _A_IE
//   44   {
//   45 
//   46 
//   47 
//   48   }// while (VRAI)
//   49 }// void main (void)
//   50 
//   51 
//   52 //************************ TITRE : vInit_CPU    ***************************
//   53 //
//   54 //  DESCRIPTION :Initialisation du microcontroleur
//   55 //
//   56 //  NOM: void vInit_CPU (void)
//   57 //
//   58 //  PARAMETRE D'ENTREE:  AUCUN
//   59 //
//   60 //  PARAMETRE DE SORTIE: AUCUN
//   61 //
//   62 //  MEMBRES UTILISES:
//   63 //       Fonctions       : AUCUNE
//   64 //       Donnees         : AUCUNE
//   65 //                      :
//   66 //  AUTEUR : DANIEL BRETON
//   67 //  DATE CREATION :    2012-12-20       VERSION: 1.0
//   68 //  DATE MODIFICATION: ****-**-**
//   69 //
//   70 // ****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   71 void vInit_CPU (void)
??vInit_CPU:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function ??vInit_CPU
        CODE
//   72 {
        ; Saved register size: 0
        ; Auto size: 0
//   73 
//   74 
//   75 } // void vInit_CPU (void)
        RET
        CFI EndBlock cfiBlock1

        END
//   76 
//   77 
//   78 
//   79 // ****************************************************************************
//   80 
//   81 
//   82 
//   83 
//   84 
//   85 
//   86 
// 
// 10 bytes in segment NEAR_CODE
//  1 byte  in segment SFR_AN
// 
// 10 bytes of CODE memory
//  0 bytes of DATA memory (+ 1 byte shared)
//
//Errors: none
//Warnings: 1
