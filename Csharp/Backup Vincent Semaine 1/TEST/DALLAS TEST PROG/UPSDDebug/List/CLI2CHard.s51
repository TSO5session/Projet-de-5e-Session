///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.40194/W32 for 8051        08/Sep/2014  18:14:28 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Synchro\Dropbox\Travaux\Automne                /
//                          2014\Prog\Labo1\Programme\CLI2CHard.cpp           /
//    Command line       =  "C:\Synchro\Dropbox\Travaux\Automne               /
//                          2014\Prog\Labo1\Programme\CLI2CHard.cpp" -D       /
//                          UPSD3254A --preprocess=cl                         /
//                          "C:\Synchro\Dropbox\Travaux\Automne               /
//                          2014\Prog\Labo1\Programme\UPSDDebug\List\" -lC    /
//                          "C:\Synchro\Dropbox\Travaux\Automne               /
//                          2014\Prog\Labo1\Programme\UPSDDebug\List\" -lA    /
//                          "C:\Synchro\Dropbox\Travaux\Automne               /
//                          2014\Prog\Labo1\Programme\UPSDDebug\List\" -o     /
//                          "C:\Synchro\Dropbox\Travaux\Automne               /
//                          2014\Prog\Labo1\Programme\UPSDDebug\Obj\" -e      /
//                          --no_cse --no_unroll --no_inline                  /
//                          --no_code_motion --no_tbaa --debug --core=plain   /
//                          --dptr=16,1 --data_model=large --code_model=near  /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data --nr_virtual_regs 8        /
//                          --dlib_config "C:\Program Files (x86)\IAR         /
//                          Systems\Embedded Workbench                        /
//                          6.0\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++     /
//    List file          =  C:\Synchro\Dropbox\Travaux\Automne                /
//                          2014\Prog\Labo1\Programme\UPSDDebug\List\CLI2CHar /
//                          d.s51                                             /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME CLI2CHard

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "near"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?FUNC_ENTER_XDATA
        EXTERN ?FUNC_LEAVE_XDATA
        EXTERN ?V0

        PUBLIC ??CLI2CHardware
        FUNCTION ??CLI2CHardware,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC `??delete ~CLI2CHardware`
        FUNCTION `??delete ~CLI2CHardware`,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        PUBLIC `??new CLI2CHardware`
        FUNCTION `??new CLI2CHardware`,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ??vInitUpsd
        FUNCTION ??vInitUpsd,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC `?~CLI2CHardware`
        FUNCTION `?~CLI2CHardware`,0203H
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK _A_IEA
        PUBWEAK _A_IPA
        PUBWEAK _A_P3SFS
        PUBWEAK _A_S2CON
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:16, ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        EXTERN `??operator new`
        FUNCTION `??operator new`,010202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??vInitUpsd_1
        FUNCTION ??vInitUpsd_1,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// C:\Synchro\Dropbox\Travaux\Automne 2014\Prog\Labo1\Programme\CLI2CHard.cpp
//    1 // ************************** FICHIER: CLI2CPORT.CPP ************************
//    2 #include "CLI2CHard.h"

        ASEGN SFR_AN:DATA:NOROOT,0a7H
// union <unnamed> volatile __sfr _A_IEA
_A_IEA:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b7H
// union <unnamed> volatile __sfr _A_IPA
_A_IPA:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0dcH
// union <unnamed> volatile __sfr _A_S2CON
_A_S2CON:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,093H
// union <unnamed> volatile __sfr _A_P3SFS
_A_P3SFS:
        DATA8
        DS 1

        RSEG NEAR_CODE:CODE:NOROOT(0)
// __near_func __xdata_reentrant CLI2CHardware &CLI2CHardware::new CLI2CHardware()
`??new CLI2CHardware`:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function `??new CLI2CHardware`
        CODE
        FUNCALL `??new CLI2CHardware`, `??operator new`
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL `??new CLI2CHardware`, ??CLI2CHardware
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    ?V0 + 0
        CFI V0 Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        PUSH    ?V0 + 1
        CFI V1 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function operator new(unsigned int)
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   `??operator new`
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,R0
        ORL     A,R1
        JZ      `??new CLI2CHardware_1`
        ; Setup parameters for call to function CLI2CHardware::CLI2CHardware()
        LCALL   ??CLI2CHardware
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    `??new CLI2CHardware_2`
`??new CLI2CHardware_1`:
        MOV     R2,#0x0
        MOV     R3,#0x0
`??new CLI2CHardware_2`:
        POP     ?V0 + 1
        CFI V1 SameValue
        CFI CFA_SP SP+-3
        POP     ?V0 + 0
        CFI V0 SameValue
        CFI CFA_SP SP+-2
        RET
        CFI EndBlock cfiBlock0

        RSEG NEAR_CODE:CODE:NOROOT(0)
// __near_func __xdata_reentrant void CLI2CHardware::delete ~CLI2CHardware(CLI2CHardware *)
`??delete ~CLI2CHardware`:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function `??delete ~CLI2CHardware`
        CODE
        FUNCALL `??delete ~CLI2CHardware`, `?~CLI2CHardware`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL `??delete ~CLI2CHardware`, `??operator delete`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 8)
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JZ      `??delete ~CLI2CHardware_1`
        ; Setup parameters for call to function CLI2CHardware::~CLI2CHardware()
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `?~CLI2CHardware`
        ; Setup parameters for call to function operator delete(void *)
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??operator delete`
`??delete ~CLI2CHardware_1`:
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//    3 #include "_DeclarationGenerale.h"
//    4 #include "ConversionKeilToIAR.h"     // Conversion KEIL <--> IAR
//    5 
//    6 // *****************************************************************************
//    7 //                            LES CONSTRUCTEURS
//    8 // *****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//    9 CLI2CHardware :: CLI2CHardware(void)
??CLI2CHardware:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function ??CLI2CHardware
        CODE
//   10 {
        FUNCALL ??CLI2CHardware, ??vInitUpsd_1
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        ; Saved register size: 2
        ; Auto size: 0
        MOV     DPL,R2
        MOV     DPH,R3
//   11 vInitUpsd();
        ; Setup parameters for call to function CLI2CHardware::vInitUpsd()
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??vInitUpsd_1
//   12 }
        MOV     R2,DPL
        MOV     R3,DPH
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-3
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-2
        RET
        CFI EndBlock cfiBlock2
//   13 
//   14 // *****************************************************************************
//   15 //                            LE DESTRUCTEUR
//   16 // *****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   17 CLI2CHardware :: ~CLI2CHardware(void)
`?~CLI2CHardware`:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function `?~CLI2CHardware`
        CODE
//   18 {
        ; Saved register size: 0
        ; Auto size: 0
//   19 
//   20 }
        RET
        CFI EndBlock cfiBlock3
//   21 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   22 void vInitUpsd(void)
??vInitUpsd:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function ??vInitUpsd
        CODE
//   23 {
        ; Saved register size: 0
        ; Auto size: 0
//   24 P3SFS           |= 0xC0;  // Enable P3.7 for SCL, P3.6 for SDA
        ORL     0x93,#0xc0
//   25 //S2CON         |= 0x81;  // Setup I2C-2 for 50KHz (24MHz XTAL)
//   26 S2CON           |= 0x01;  // Setup I2C-2 for 500KHz (24MHz XTAL)
        ORL     0xdc,#0x1
//   27 //i2c_init_flag    = 1;     // set init done flag
//   28 //i2c_timeout_flag = 0;     // clear timeout error flag
//   29 //PX1            = 0;     // set low priority for INT1
//   30 IPA             |= 0x02;  // set high priority for EI2C
        ORL     0xb7,#0x2
//   31 IEA             |= 0x02;  // set EI2C I2C Int. Enable bit
        ORL     0xa7,#0x2
//   32 //EX1            = 1;     // set EX1 Int. Enable bit (INT1)
//   33 }
        RET
        CFI EndBlock cfiBlock4
        REQUIRE _A_P3SFS
        REQUIRE _A_S2CON
        REQUIRE _A_IPA
        REQUIRE _A_IEA

        END
// 
// 119 bytes in segment NEAR_CODE
//   4 bytes in segment SFR_AN
// 
// 119 bytes of CODE memory
//   0 bytes of DATA memory (+ 4 bytes shared)
//
//Errors: none
//Warnings: none
