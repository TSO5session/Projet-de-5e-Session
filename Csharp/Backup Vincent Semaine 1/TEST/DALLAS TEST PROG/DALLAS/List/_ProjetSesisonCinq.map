                              - Cross-reference -                      Page    1

################################################################################
#                                                                              #
#      IAR Universal Linker V5.0.2.5/W32                                       #
#                                                                              #
#           Link time     =  14/Nov/2014  22:00:59                             #
#           Target CPU    =  x51                                               #
#           List file     =  "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\List\_ #
#                            ProjetSesisonCinq.map"                            #
#           Output file 1 =  "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Exe\_P #
#                            rojetSesisonCinq.HEX"                             #
#                            Format: intel-standard                            #
#           Command line  =  -D_NR_OF_BANKS=0 -D_CODEBANK_END=0                #
#                            -D_CODEBANK_START=0                               #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.0\8051\CONFIG\"                         #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CA #
#                            NBUS.r51"                                         #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CL #
#                            Clavier.r51"                                      #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CL #
#                            Communic.r51"                                     #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CL #
#                            Ecran.r51"                                        #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CL #
#                            I2CBase.r51"                                      #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CL #
#                            I2CPort.r51"                                      #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CL #
#                            SPI.r51"                                          #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CL #
#                            SortieLatch.r51"                                  #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CL #
#                            inOutBase.r51"                                    #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\No #
#                            mDuProjet.r51"                                    #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\Op #
#                            tik.r51"                                          #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\Ti #
#                            mer0.r51"                                         #
#                            -e_PrintfLarge=_Printf -e_ScanfSmall=_Scanf -o    #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Exe\_P #
#                            rojetSesisonCinq.HEX"                             #
#                            -Fintel-standard -B -l                            #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSe #
#                            ssion5\Csharp\TEST\DALLAS TEST PROG\DALLAS\List\_ #
#                            ProjetSesisonCinq.map"                            #
#                            -xmsnio -p80                                      #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.0\8051\LIB\"                            #
#                            "-IC:\Synchro\Dropbox\Travaux\Automne 2014\Projet #
#                            Session5\Csharp\TEST\DALLAS TEST PROG\"           #
#                            -f                                                #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Prog\Lab #
#                            o6\Programme\_Ver810_lnk51ew_DS89C450.xcl"        #
#                            (-D_IDATA0_START=0x00 -D_IDATA0_END=0xFF          #
#                            -D_PDATA0_START=0x0F01 -D_PDATA0_END=0x0FFF       #
#                            -D_IXDATA0_START=0x0001 -D_IXDATA0_END=0x0FFF     #
#                            -D_XDATA0_START=0x8100 -D_XDATA0_END=0xFFFF       #
#                            -D_CODE0_START=0x0000 -D_CODE0_END=0xFFFF         #
#                            -D?REGISTER_BANK=0x0 -D_REGISTER_BANK_START=0x0   #
#                            -D?PBANK_NUMBER=0x00 -D_BREG_START=0x00           #
#                            -D?VB=0x20 -D?ESP=0x9B -Z(BIT)BREG=_BREG_START    #
#                            -Z(BIT)BIT_N=0-7F                                 #
                              - Cross-reference -                      Page    2

#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA0_END   #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA0_END  #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE0_START-_CODE0_END            #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE0_START-_CODE0_END       #
#                            -Z(CODE)HUGE_ID=_CODE0_START-_CODE0_END           #
#                            -Z(CODE)RCODE,DIFUNCT=_CODE0_START-_CODE0_END     #
#                            -P(CODE)CODE_C,CODE_N,NEAR_CODE=_CODE0_START-_COD #
#                            E0_END                                            #
#                            -Z(CODE)CHECKSUM#_CODE0_END                       #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA0_START-_PDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)PDATA_N=_PDATA0_START-_PDATA0_END        #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA0_START-_ #
#                            PDATA0_END                                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA0_START-_ #
#                            XDATA0_END                                        #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA0_START-_IXDATA #
#                            0_END                                             #
#                            -P(XDATA)IXDATA_N=_IXDATA0_START-_IXDATA0_END     #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA0_START-_XDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)XDATA_N=_XDATA0_START-_XDATA0_END        #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA0_STAR #
#                            T-_XDATA0_END                                     #
#                            -Z(CONST)XDATA_ROM_C=_XDATA0_START-_XDATA0_END    #
#                            -Z(CODE)FAR22_ID=[_CODE0_START-_CODE0_END]/10000  #
#                            -Z(CODE)FAR_ID=[_CODE0_START-_CODE0_END]/10000    #
#                            -cx51) -D_NR_OF_VIRTUAL_REGISTERS=8               #
#                            -D?PBANK=0xA0 -s __program_start                  #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\8051\LIB\DLIB\dl-pli-nlxd-1e16x01.r51"  #
#                            -D_IDATA_STACK_SIZE=0x40                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0xEFF                         #
#                            -D_XDATA_HEAP_SIZE=0x3FF -D_FAR_HEAP_SIZE=0xFFF   #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                            -D_FAR22_HEAP_SIZE=0xFFF                          #
#                                                                              #
#                           Copyright (C) 1987-2010 IAR Systems AB.            #
################################################################################

                              - Cross-reference -                      Page    3



                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000005F  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary          = DLib
  __calling_convention     = xdata_reentrant
  __code_model             = near
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FAR22_HEAP_SIZE        00000FFF 
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000003FF 
           _XDATA_STACK_SIZE       00000EFF 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       00000040 
           ?PBANK                  000000A0 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           ?ESP                    0000009B 
           ?VB                     00000020        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
           _BREG_START             00000000 
           ?PBANK_NUMBER           00000000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _CODE0_END              0000FFFF 
           _CODE0_START            00000000 
           _XDATA0_END             0000FFFF 
           _XDATA0_START           00008100 
           _IXDATA0_END            00000FFF 
           _IXDATA0_START          00000001 
           _PDATA0_END             00000FFF 
           _PDATA0_START           00000F01 
           _IDATA0_END             000000FF 
           _IDATA0_START           00000000 
           _CODEBANK_START         00000000 
                              - Cross-reference -                      Page    4

           _CODEBANK_END           00000000 
           _NR_OF_BANKS            00000000 
    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CANBUS.r51
  PROGRAM MODULE, NAME : CANBUS

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::new CanBus()    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::new CanBus(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::delete ~CanBus(CanBus *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000002B8 - 00000306 (0x4f bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::CanBus()        000002B8        __sti__routine() (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::CanBus(UC)      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000307 - 00000309 (0x3 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::~CanBus()       00000307        Segment part 38 (NomDuProjet)
               calls direct, is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::ReadMCP()       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000030A - 0000042B (0x122 bytes), align: 0
  Segment part 21.            Intra module refs:   CanBus::CanBus()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::MCP24515_init()
                                   0000030A 
               calls direct
               XSTACK = 00000009 ( 0000000C )
                              - Cross-reference -                      Page    5

    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000042C - 0000044F (0x24 bytes), align: 0
  Segment part 22.            Intra module refs:   CanBus::ChoisirIdentifiantTX0(int)
                                                   CanBus::MCP24515_init()
                                                   CanBus::SendMCP(UC const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::EcrireRegistreMCP2515(UC, UC)
                                   0000042C 
               calls direct
               XSTACK = 0000000F ( 00000009 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000450 - 0000048E (0x3f bytes), align: 0
  Segment part 23.            Intra module refs:   CanBus::CanBus()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::ChoisirIdentifiantTX0(int)
                                   00000450 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::AcquitterInterruptionsMCP2515()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000048F - 00000523 (0x95 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::SendMCP(UC const *)
                                   0000048F        main (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::LireRegistreMCP2515(UC, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000524 - 00000544 (0x21 bytes), align: 0
  Segment part 27.            Intra module refs:   CanBus::SendMCP(UC const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::Longueur(UC const *)
                                   00000524 
               XSTACK = 0000000F ( 00000009 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000545 - 00000573 (0x2f bytes), align: 0
  Segment part 28.            Intra module refs:   CanBus::MCP24515_init()
                                                   CanBus::SendMCP(UC const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::Delai(unsigned long)
                                   00000545 
               XSTACK = 00000013 ( 0000000F )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
                              - Cross-reference -                      Page    6

    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009012 - 00009015 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   CanBus::MCP24515_init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          00009012 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000071 - 00000074 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   __Constant_3e8
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009016 - 00009019 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   CanBus::SendMCP(UC const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            00009016 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000075 - 00000078 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   __Constant_a
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000901A - 0000901D (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CanBus::Delai(unsigned long)
                                                   main (NomDuProjet)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            0000901A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000079 - 0000007C (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000901E - 00009021 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::Delai(unsigned long)
                                                   main (NomDuProjet)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            0000901E 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000007D - 00000080 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   __Constant_1

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CLClavier.r51
  PROGRAM MODULE, NAME : CLClavier

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   RS232::SetConfig() (CLCommunic)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCON                    00000088 
           TCON_bit                00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   CLClavier::vKeyboardInterrupt()
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page    7

           =====                   =======         ======
           _A_IE                   000000A8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IE                      000000A8 
           IE_bit                  000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00008FFF - 00008FFF (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   CLClavier::vKeyboardInterrupt()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::ucEtatClavier
                                   00008FFF 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::new CLClavier()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::delete ~CLClavier(CLClavier *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::CLClavier()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::~CLClavier()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::ucBoutonAppuye()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::ucLireClavier()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B6F - 00000B89 (0x1b bytes), align: 0
  Segment part 18.            Intra module refs:   CLClavier::vKeyboardInterrupt()::??INTVEC 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::vKeyboardInterrupt()
                                   00000B6F 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
                              - Cross-reference -                      Page    8

    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000005 (0x6 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::vKeyboardInterrupt()::??INTVEC 3
                                   00000003 
    -------------------------------------------------------------------------
ISTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 9. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CLCommunic.r51
  PROGRAM MODULE, NAME : CLCommunic

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000099 - 00000099 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   RS232::SendString(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SBUF0                   00000099 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from CLClavier
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCON                    00000088 
           TCON_bit                00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008D - 0000008D (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   RS232::SetConfig()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TH1                     0000008D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   RS232::SetConfig()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TMOD                 00000089 
           LOCAL                   ADDRESS         
           =====                   =======         
           TMOD                    00000089 
           TMOD_bit                00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000098 - 00000098 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   RS232::SendString(char const *)
                                                   RS232::SetConfig()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
                              - Cross-reference -                      Page    9

           _A_SCON0                00000098 
           LOCAL                   ADDRESS         
           =====                   =======         
           SCON0                   00000098 
           SCON0_bit               00000098 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   RS232::SetConfig()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCON                 00000087 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCON                    00000087 
           PCON_bit                00000087 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::new RS232()      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::new RS232(UC, UC, UI)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::delete ~RS232(RS232 *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000AE1 - 00000AF8 (0x18 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::RS232()          00000AE1        __sti__routine() (NomDuProjet)
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::RS232(UC, UC, UI)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000AF9 - 00000AF9 (0x1 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::~RS232()         00000AF9        Segment part 26 (NomDuProjet)
               is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000AFA - 00000B21 (0x28 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::SendString(char const *)
                                   00000AFA        main (NomDuProjet)
               ISTACK = 00000000 ( 00000002 )
                              - Cross-reference -                      Page   10

    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::SendCar(char)    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::GetCar()         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B22 - 00000B32 (0x11 bytes), align: 0
  Segment part 21.            Intra module refs:   RS232::RS232()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RS232::SetConfig()      00000B22 
    -------------------------------------------------------------------------
ISTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 11. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CLEcran.r51
  PROGRAM MODULE, NAME : CLEcran

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::new CLEcran()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::new CLEcran(USI)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::delete ~CLEcran(CLEcran *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000574 - 00000597 (0x24 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
                              - Cross-reference -                      Page   11

           CLEcran::CLEcran()      00000574        __sti__routine() (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::CLEcran(USI)   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000598 - 0000059A (0x3 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::~CLEcran()     00000598        Segment part 30 (NomDuProjet)
               calls direct, is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000059B - 000005B0 (0x16 bytes), align: 0
  Segment part 16.            Intra module refs:   CLEcran::vLCDInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vDelaiLCD(USI)
                                   0000059B 
               XSTACK = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000005B1 - 000005D8 (0x28 bytes), align: 0
  Segment part 17.            Intra module refs:   CLEcran::Lettre(char)
                                                   CLEcran::vLCDClr()
                                                   CLEcran::vLCDCursor(UC, UC)
                                                   CLEcran::vLCDInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDBusy()     000005B1 
               calls direct
               XSTACK = 0000000A ( 00000008 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000005D9 - 000005FF (0x27 bytes), align: 0
  Segment part 18.            Intra module refs:   CLEcran::~CLEcran()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDClr()      000005D9 
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000600 - 000006AD (0xae bytes), align: 0
  Segment part 19.            Intra module refs:   CLEcran::CLEcran()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDInit()     00000600 
               calls direct
               XSTACK = 00000008 ( 00000009 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000006AE - 0000070F (0x62 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDCursor(UC, UC)
                                   000006AE        main (NomDuProjet)
               calls direct
               XSTACK = 00000008 ( 0000000A )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::Lettre(UC)     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   12

<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000710 - 0000073C (0x2d bytes), align: 0
  Segment part 22.            Intra module refs:   CLEcran::String(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::Lettre(char)   00000710 
               calls direct
               XSTACK = 0000001D ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vHexToASCII(UC, UC *, UC *)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vHexToASCII(USI, UC *, UC *, UC *, UC *)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayHexCarac(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayHexCarac(USI)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::String(UC const *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000073D - 0000075D (0x21 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::String(char const *)
                                   0000073D        main (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayScreen(UC const *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayEtatPort(UC)
                              - Cross-reference -                      Page   13

                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayFloat(float)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 6. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_42c80000     
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 9. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CLI2CBase.r51
  PROGRAM MODULE, NAME : CLI2CBase

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B0 - 000000B0 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P3                   000000B0 
           LOCAL                   ADDRESS         
           =====                   =======         
           P3                      000000B0 
           P3_bit                  000000B0 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::new CLI2CBase()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::new CLI2CBase(UC)
                              - Cross-reference -                      Page   14

                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::delete ~CLI2CBase(CLI2CBase *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::CLI2CBase()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::CLI2CBase(UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::~CLI2CBase()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::vI2CStart()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::vI2CStop()   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::ucI2CLireBit()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::vI2CEcrireBit(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   15

           =====                   =======         ======
           CLI2CBase::ucI2CLireOctet(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::ucI2CEcrireOctet(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::vDelaiI2C()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CLI2CPort.r51
  PROGRAM MODULE, NAME : CLI2CPort

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::new CLI2CPort()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::delete ~CLI2CPort(CLI2CPort *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::CLI2CPort()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::~CLI2CPort()
                              - Cross-reference -                      Page   16

                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::ucI2CLireDonnee(UC, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::vI2CLireDonnee(UC, USI, UC, UC *, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::vI2CEcrireDonnee(UC, UC, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::vI2CEcrireDonnee(UC, USI, UC, UC *, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CLSPI.r51
  PROGRAM MODULE, NAME : CLSPI

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   CLSPI::CLSPI()
                                                   CLSPI::Write(UC, UC)
                                                   CLSPI::WriteMPC(UC, UC, UC, UC)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
           P1_bit                  00000090 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   17

           =====                   =======         ======
           CLSPI::new CLSPI()      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::new CLSPI(UC)    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::delete ~CLSPI(CLSPI *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000075E - 00000766 (0x9 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::CLSPI()          0000075E        CanBus::CanBus() (CANBUS)
                                                   __sti__routine() (NomDuProjet)
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::CLSPI(UC)        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000767 - 00000767 (0x1 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::~CLSPI()         00000767        CanBus::CanBus() (CANBUS)
                                                   CanBus::~CanBus() (CANBUS)
                                                   Segment part 34 (NomDuProjet)
               is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000768 - 00000818 (0xb1 bytes), align: 0
  Segment part 18.            Intra module refs:   CLSPI::WriteMPC(UC, UC, UC, UC)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::Write(UC, UC)    00000768 
               XSTACK = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::Write16(UI, UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::Direction(UC)    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
                              - Cross-reference -                      Page   18

           CLSPI::WriteMPC(UC)     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::ReadMPC()        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::WritePOT(UC)     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::WriteDAC(UC, int)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000819 - 000008BF (0xa7 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::WriteMPC(UC, UC, UC, UC)
                                   00000819        CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   CanBus::SendMCP(UC const *) (CANBUS)
               calls direct
               XSTACK = 00000001 ( 00000014 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000008C0 - 000008EE (0x2f bytes), align: 0
  Segment part 26.            Intra module refs:   CLSPI::WriteMPC(UC, UC, UC, UC)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::Delai(unsigned long)
                                   000008C0 
               XSTACK = 00000014 ( 0000000F )
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 8. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 10. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   19

           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00009000 - 00009002 (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   CLSPI::WriteMPC(UC, UC, UC, UC)

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CLSortieLatch.r51
  PROGRAM MODULE, NAME : CLSortieLatch

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from CLI2CBase
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P3                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P3                      000000B0 
           P3_bit                  000000B0 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::new DAC_ADC()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::new DAC_ADC(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::delete ~DAC_ADC(DAC_ADC *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::DAC_ADC()      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::DAC_ADC(UC)    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::~DAC_ADC()     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   20

NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::DAC(UC, UC)    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::ADC(UC)        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\CLinOutBase.r51
  PROGRAM MODULE, NAME : CLinOutBase

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B33 - 00000B41 (0xf bytes), align: 0
  Segment part 6.             Intra module refs:   CLInOutBase::vOut(USI, UC)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::vOutPort(USI, UC)
                                   00000B33 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B42 - 00000B52 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   CLInOutBase::ucIn(USI)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::ucInPort(USI)
                                   00000B42 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B53 - 00000B5F (0xd bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::vOut(USI, UC)
                                   00000B53        CLEcran::Lettre(char) (CLEcran)
                                                   CLEcran::vLCDClr() (CLEcran)
                                                   CLEcran::vLCDCursor(UC, UC) (CLEcran)
                                                   CLEcran::vLCDInit() (CLEcran)
               calls direct
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::vOut(USI, USI, UC)
                                   
               calls direct, is not allocated
                              - Cross-reference -                      Page   21

               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B60 - 00000B6E (0xf bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::ucIn(USI)
                                   00000B60        CLEcran::vLCDBusy() (CLEcran)
               calls direct
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::ucIn(USI, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\NomDuProjet.r51
  PROGRAM MODULE, NAME : NomDuProjet

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00009022 - 00009036 (0x15 bytes), align: 0
  Segment part 6.             Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009037 - 00009043 (0xd bytes), align: 0
  Segment part 8.             Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009044 - 0000904A (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000904B - 00009051 (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009052 - 00009058 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009059 - 0000905F (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009060 - 00009066 (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009067 - 0000906D (0x7 bytes), align: 0
  Segment part 20.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000906E - 00009072 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   main
                              - Cross-reference -                      Page   22

    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009073 - 00009078 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000A07 - 00000A3E (0x38 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 40
           LOCAL                   ADDRESS         
           =====                   =======         
           __sti__routine()        00000A07 
               calls direct
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00009003 - 00009003 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 26
                                                   __sti__routine()
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Serial                  00009003 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00009004 - 00009005 (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009079 - 0000907E (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00009006 - 00009007 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 30
                                                   __sti__routine()
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD                     00009006 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00009008 - 00009009 (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000907F - 00009084 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000900A - 0000900A (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 34
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI                     0000900A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000900B - 0000900C (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00009085 - 0000908A (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_I
  Segment part 41. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000908B - 0000908E (0x4 bytes), align: 0
  Segment part 43.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_10013        0000908B 
    -------------------------------------------------------------------------
XDATA_I
  Segment part 45. TENTATIVE. Used definition from CANBUS
                              - Cross-reference -                      Page   23

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000900D - 0000900D (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 38
                                                   __sti__routine()
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CAN                     0000900D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000900E - 0000900F (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000A3F - 00000AE0 (0xa2 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000A3F        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000081 - 00000095 (0x15 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000096 - 000000A2 (0xd bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000A3 - 000000A9 (0x7 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000AA - 000000B0 (0x7 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000B1 - 000000B7 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000B8 - 000000BE (0x7 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000BF - 000000C5 (0x7 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000C6 - 000000CC (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000CD - 000000D1 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000D2 - 000000D7 (0x6 bytes), align: 0
                              - Cross-reference -                      Page   24

  Segment part 26.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000D8 - 000000DD (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000DE - 000000E3 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000E4 - 000000E9 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
    -------------------------------------------------------------------------
DIFUNCT
  Relative segment, address: CODE 000002B6 - 000002B7 (0x2 bytes), align: 0
  Segment part 40. ROOT.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 42. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000EA - 000000ED (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   __Constant_10013
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 46. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\Optik.r51
  PROGRAM MODULE, NAME : Optik

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from CLSPI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
           P1_bit                  00000090 
    -------------------------------------------------------------------------
XDATA_I
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::LastState     
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::new Encodeur()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::new Encodeur(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::delete ~Encodeur(Encodeur *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   25

NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::Encodeur()    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::Encodeur(UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::~Encodeur()   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::LogicAnalyser()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 8. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\Csharp\TEST\DALLAS TEST PROG\DALLAS\Obj\Timer0.r51
  PROGRAM MODULE, NAME : Timer0

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TH0                     0000008C 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from CLClavier
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCON                    00000088 
           TCON_bit                00000088 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from CLClavier
                              - Cross-reference -                      Page   26

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IE                   
           LOCAL                   ADDRESS         
           =====                   =======         
           IE                      000000A8 
           IE_bit                  000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from CLSPI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
           P1_bit                  00000090 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from CLCommunic
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TMOD                 
           LOCAL                   ADDRESS         
           =====                   =======         
           TMOD                    00000089 
           TMOD_bit                00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TL0                     0000008A 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DutyCycle               
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::new Timer0()    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::new Timer0(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::delete ~Timer0(Timer0 *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::Timer0()        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   27

           =====                   =======         ======
           Timer0::Timer0(UC)      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::~Timer0()       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::ClockGenerator()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::DelayMs()       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::InitTimer0()    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::CustomSpeed(UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 11. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.0\8051\LIB\DLIB\dl-pli-nlxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000006, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   00000006        exit (?exit)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000006 - 00000009 (0x4 bytes), align: 0
                              - Cross-reference -                      Page   28

  Segment part 1.             Intra module refs:   __cstart_call_dtors
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000000A - 0000000C (0x3 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_dtors     0000000A        __record_needed_destruction (?cppinit)
    -------------------------------------------------------------------------
CSTART
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_closeall       
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000000D - 00000010 (0x4 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 1
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000011 - 00000013 (0x3 bytes), align: 0
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000014, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  00000014        Segment part 13 (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000014 - 0000001C (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   00000014        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
BDATA_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_Z          
    -------------------------------------------------------------------------
DATA_Z
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_Z           
    -------------------------------------------------------------------------
IDATA_Z
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_Z          
    -------------------------------------------------------------------------
PDATA_Z
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_Z          
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   29

XDATA_Z
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000001D - 0000002C (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          0000001D        CAN (NomDuProjet)
                                                   CLClavier::ucEtatClavier (CLClavier)
                                                   LCD (NomDuProjet)
                                                   SPI (NomDuProjet)
                                                   Segment part 27 (NomDuProjet)
                                                   Segment part 31 (NomDuProjet)
                                                   Segment part 35 (NomDuProjet)
                                                   Segment part 39 (NomDuProjet)
                                                   Segment part 6 (?cppinit)
                                                   Segment part 7 (CLSPI)
                                                   Serial (NomDuProjet)
    -------------------------------------------------------------------------
IXDATA_Z
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_Z         
    -------------------------------------------------------------------------
BDATA_I
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
BDATA_ID
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_I          
    -------------------------------------------------------------------------
DATA_I
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_I           
    -------------------------------------------------------------------------
IDATA_I
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
IDATA_ID
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_I          
    -------------------------------------------------------------------------
PDATA_I
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
PDATA_ID
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_I          
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   30

XDATA_I
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000002D - 00000055 (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          0000002D        Segment part 10 (NomDuProjet)
                                                   Segment part 12 (NomDuProjet)
                                                   Segment part 14 (NomDuProjet)
                                                   Segment part 16 (NomDuProjet)
                                                   Segment part 18 (NomDuProjet)
                                                   Segment part 20 (NomDuProjet)
                                                   Segment part 22 (NomDuProjet)
                                                   Segment part 25 (NomDuProjet)
                                                   Segment part 29 (NomDuProjet)
                                                   Segment part 33 (NomDuProjet)
                                                   Segment part 37 (NomDuProjet)
                                                   Segment part 6 (NomDuProjet)
                                                   Segment part 8 (NomDuProjet)
                                                   __Constant_0 (CANBUS)
                                                   __Constant_1 (CANBUS)
                                                   __Constant_10013 (NomDuProjet)
                                                   __Constant_3e8 (CANBUS)
                                                   __Constant_a (CANBUS)
    -------------------------------------------------------------------------
IXDATA_I
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
IXDATA_ID
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000056, align: 0
  Segment part 32.            Intra module refs:   __low_level_init_call
    -------------------------------------------------------------------------
DIFUNCT
  Relative segment, address: CODE 000002B8, align: 0
  Segment part 33. ROOT.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000056 - 00000058 (0x3 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      00000056        Segment part 40 (NomDuProjet)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000059 - 0000005E (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000059 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart_call_ctors

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B8A - 00000B94 (0xb bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_ctors     00000B8A        ?cstart_call_ctors (?cmain)
               calls direct
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   31

ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DIFUNCT
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 000000C0, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           000000C0 
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSTACK_START           
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00008100, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00008100 
    -------------------------------------------------------------------------
EXT_STACK
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EXT_STACK_START        
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000005F - 00000064 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000005F        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               00000062 
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PSP              
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000065 - 0000006A (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   32

           =====                   =======         ======
           ?RESET_XSP              00000065        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        
    -------------------------------------------------------------------------
PDATA_Z
  Relative segment, address: XDATA 00000F01, align: 0
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
CSTART
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PDATA_BANK       
    -------------------------------------------------------------------------
CSTART
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __disable_infineon_pflash
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000006B - 0000006D (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?UL_GE_X (?UL_GE_X)
                                                   CLEcran::Lettre(char) (CLEcran)
                                                   CLEcran::vLCDCursor(UC, UC) (CLEcran)
                                                   CLEcran::vLCDInit() (CLEcran)
                                                   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::ChoisirIdentifiantTX0(int) (CANBUS)
                                                   CanBus::Delai(unsigned long) (CANBUS)
                                                   CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::Longueur(UC const *) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   CanBus::SendMCP(UC const *) (CANBUS)
                                                   Segment part 8 (?cppinit)
                                                   __call_ctors (?cppinit)
                                                   main (NomDuProjet)
    -------------------------------------------------------------------------
PSP
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSP                    
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                              - Cross-reference -                      Page   33

                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000000EE - 000000FD (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  000000EE        CLSPI::Delai(unsigned long) (CLSPI)
                                                   CanBus::Delai(unsigned long) (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GE_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000000FE - 0000011C (0x1f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X                000000FE        main (NomDuProjet)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?G_EQ

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?G_EQ                   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_GPTR_STORE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_GPTR_STORE           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT               
                              - Cross-reference -                      Page   34

    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT_REW           
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT_REW          
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL_REW          
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?R2345_FLT_TO_UL        
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL              
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L_REW           
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?R2345_FLT_TO_L         
    -------------------------------------------------------------------------
RCODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               
    -------------------------------------------------------------------------
RCODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO          
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   35

RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1       
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_REW       
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

                              - Cross-reference -                      Page   36

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1_REW    
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL_REW            
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL                

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_SUB_REW            
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_SUB                
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_ADD_REW            
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_ADD                

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_REW              
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG                  

    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   37

  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000011D - 0000012F (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                0000011D        CLSPI::Delai(unsigned long) (CLSPI)
                                                   CanBus::Delai(unsigned long) (CANBUS)
                                                   main (NomDuProjet)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000130 - 0000013E (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                00000130        CLSPI::Delai(unsigned long) (CLSPI)
                                                   CanBus::Delai(unsigned long) (CANBUS)
                                                   main (NomDuProjet)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REWX        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R2345            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R2345           

                              - Cross-reference -                      Page   38

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000013F - 0000014B (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   0000013F        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000014C - 0000016C (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   0000014C        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000016D - 0000016F (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 0000016D        CanBus::ChoisirIdentifiantTX0(int) (CANBUS)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000170 - 0000017C (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_REW             
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   39

RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000017D - 00000192 (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          0000017D        CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000193 - 000001AC (0x1a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00000193        CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)
                                                   CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   CanBus::SendMCP(UC const *) (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001AD - 000001C7 (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     000001AD        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001C8 - 000001D1 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         000001C8        CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::Delai(unsigned long) (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001D2 - 000001D3 (0x2 bytes), align: 0
  Segment part 0.
                              - Cross-reference -                      Page   40

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               000001D2        __call_ctors (?cppinit)
                                                   __call_dtors (?cppinit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001D4 - 00000239 (0x66 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       000001D4        CLEcran::CLEcran() (CLEcran)
                                                   CLEcran::Lettre(char) (CLEcran)
                                                   CLEcran::String(char const *) (CLEcran)
                                                   CLEcran::vLCDBusy() (CLEcran)
                                                   CLEcran::vLCDClr() (CLEcran)
                                                   CLEcran::vLCDCursor(UC, UC) (CLEcran)
                                                   CLEcran::vLCDInit() (CLEcran)
                                                   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)
                                                   CanBus::ChoisirIdentifiantTX0(int) (CANBUS)
                                                   CanBus::Delai(unsigned long) (CANBUS)
                                                   CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::Longueur(UC const *) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   CanBus::SendMCP(UC const *) (CANBUS)
                                                   __call_ctors (?cppinit)
                                                   __record_needed_destruction (?cppinit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000023A - 00000279 (0x40 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       0000023A        CLEcran::CLEcran() (CLEcran)
                                                   CLEcran::Lettre(char) (CLEcran)
                                                   CLEcran::String(char const *) (CLEcran)
                                                   CLEcran::vLCDBusy() (CLEcran)
                                                   CLEcran::vLCDClr() (CLEcran)
                                                   CLEcran::vLCDCursor(UC, UC) (CLEcran)
                                                   CLEcran::vLCDInit() (CLEcran)
                                                   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)
                                                   CanBus::ChoisirIdentifiantTX0(int) (CANBUS)
                                                   CanBus::Delai(unsigned long) (CANBUS)
                                                   CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::Longueur(UC const *) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   CanBus::SendMCP(UC const *) (CANBUS)
                                                   __call_ctors (?cppinit)
                                                   __record_needed_destruction (?cppinit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
                              - Cross-reference -                      Page   41

           ?PUSH_XSTACK_I_FOUR     
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000027A - 0000027B (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      0000027A        CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   CanBus::SendMCP(UC const *) (CANBUS)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000027C - 00000288 (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_ONE
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          0000027C 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000289 - 0000028C (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    00000289        CLSPI::WriteMPC(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   CanBus::SendMCP(UC const *) (CANBUS)
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_THREE   
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_ONE     
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000028D - 000002B5 (0x29 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_X_FOUR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         0000028D 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
                              - Cross-reference -                      Page   42

RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE_CBF    
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE_CBF    
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000006E - 00000070 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000006E        __low_level_init_call (?cmain)
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
                              - Cross-reference -                      Page   43

    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B95 - 00000B9B (0x7 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   00000B95        __record_needed_destruction (?cppinit)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cppinit

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000008EF - 00000954 (0x66 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            000008EF        __cstart_call_ctors (?cstart_call_ctors)
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000955 - 00000961 (0xd bytes), align: 0
  Segment part 8.             Intra module refs:   __call_ctors
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __alloc_record_needed_destruction
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00009010 - 00009011 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   __call_dtors
                                                   __record_needed_destruction
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000962 - 000009A7 (0x46 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __record_needed_destruction
                                   00000962        __sti__routine() (NomDuProjet)
               calls direct
               XSTACK = 0000000B ( 00000008 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000009A8 - 000009FD (0x56 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
                              - Cross-reference -                      Page   44

           __call_dtors            000009A8        __cstart_call_dtors (?cexit)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000009FE - 00000A06 (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   __call_dtors
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data_vec_cctor        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __idata_vec_cctor       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __bdata_vec_cctor       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __pdata_vec_cctor       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_vec_cctor       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __ixdata_vec_cctor      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 26. NOT NEEDED.
                              - Cross-reference -                      Page   45

    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?delop_0

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B9C - 00000B9E (0x3 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000B9C        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?malloc
                              - Cross-reference -                      Page   46


  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?new

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_New_hand          
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_new_handler(new_handler)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?newop_0

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   47

PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?nomemory

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exception::~exception()
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exception::what() const
                                   
               is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exception::_Doraise() const
                                   
               is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bad_alloc::~bad_alloc()
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bad_alloc::_Doraise() const
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Nomemory()             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
                              - Cross-reference -                      Page   48

    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 10. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xcloseall

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Close_all              
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_GetMemChunk     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __generic_GetMemChunk   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   49

NEAR_CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 8. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
GENERIC_HEAP
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_HEAP
  Segment part 16. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000B9F - 00000BA0 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  00000B9F        Segment part 5 (?cexit)
                                                   _exit (?cexit)
                                                   abort (?abort)
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
                              - Cross-reference -                      Page   50

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_free            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __generic_free          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_Aldata          
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __generic_Aldata        
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 8. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           __xdata_findmem         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_malloc          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   51

NEAR_CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __generic_malloc        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                    CODE      DATA      XDATA  IDATA    BIT
------                    ----      ----      -----  -----    ---
                         (Rel)  (Rel)  (Abs)  (Rel)  (Rel)  (Rel)
?ADD_XSTACK_DISP8           27
?ALLOC_XSTACK8              22
?CALL_IND                    2
?DEALLOC_XSTACK8            26
?FUNC_ENTER_XDATA          102
?FUNC_LEAVE_XDATA           64
?L_ADD_X                    19
?L_MOV_X                    15
?MOVE_LONG8_XDATA_IDATA     13
?MOVE_LONG8_XDATA_XDATA     33
?PUSH_XSTACK8_X             45
?PUSH_XSTACK_I              15
?SS_SHR                     16
?UL_GE_X                    31
?UL_GT                      16
?XSTACK_DISP8               10
?__exit                      2
?abort                       7
?cexit                      14
?cmain                      75
?cppinit                   280                    2
?cstart_call_ctors          11
?exit                        3
?low_level_init              3
CANBUS                     716                    8
  + shared                                        8
CLClavier                   27                    1
  + shared                   6             2
  + common
CLCommunic                  82             4
  + shared                                 1
CLEcran                    490
CLI2CBase
  + shared                                 1
CLSPI                      401                    3
  + shared                                 1
CLinOutBase                 60
CSTARTUP                    15
  + common                   3
NomDuProjet                329                  122
Timer0                                     2
VIRTUAL_REGISTERS                   2                           8
N/A (command line)                 16         3 839     64
N/A (alignment)
----------               -----     --     --  -----     --      -
Total:                   2 971     18     11  3 983     64      8
  + common                   6


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  01  CLClavier::vKeyboardInterrupt()
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000000 00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000004
  02    CLSPI::~CLSPI()
        | Stack used (prev) :  00000000 00000004
        | + function block  :  00000008 00000000
  01  CanBus::~CanBus()
      | Stack used (prev) :  00000008 00000004
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010 00000004


                              - Cross-reference -                      Page   52

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000004
  01  RS232::~RS232()
      | Stack used (prev) :  00000000 00000004
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008 00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000004
  04        CLInOutBase::vOutPort(USI, UC)
            | Stack used (prev) :  00000000 00000004
            | + function block  :  0000000C 00000003
  03      CLInOutBase::vOut(USI, UC)
          | Stack used (prev) :  0000000C 00000007
          | + function block  :  00000000 00000002
  05          CLInOutBase::ucInPort(USI)
              | Stack used (prev) :  00000000 00000004
              | + function block  :  0000000C 00000002
  04        CLInOutBase::ucIn(USI)
            | Stack used (prev) :  0000000C 00000006
            | + function block  :  00000000 00000002
  03      CLEcran::vLCDBusy()
          | Stack used (prev) :  0000000C 00000008
          | + function block  :  0000001A 00000000
  02    CLEcran::vLCDClr()
        | Stack used (prev) :  00000026 00000009
        | + function block  :  00000010 00000000
  01  CLEcran::~CLEcran()
      | Stack used (prev) :  00000036 00000009
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000003E 00000009


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000003E 00000009
  04        __exit
            | Stack used (prev) :  0000003E 00000009
            | + function block  :  00000000 00000000
  03      abort
          | Stack used (prev) :  0000003E 00000009
          | + function block  :  00000000 00000000
  02    __record_needed_destruction
        | Stack used (prev) :  0000003E 00000009
        | + function block  :  0000001B 00000000
  02    CLSPI::CLSPI()
        | Stack used (prev) :  0000003E 00000009
        | + function block  :  00000000 00000000
  04        CLInOutBase::vOut(USI, UC)
            | Stack used (prev) :  0000000C 00000007
            | + function block  :  00000000 00000002
            |  Already listed
  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 00000008
            | + function block  :  0000001A 00000000
            |  Already listed
  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 00000008
            | + function block  :  0000001A 00000000
            |  Already listed
  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 00000008
            | + function block  :  0000001A 00000000
            |  Already listed
  04        CLEcran::vLCDBusy()
                              - Cross-reference -                      Page   53

            | Stack used (prev) :  0000000C 00000008
            | + function block  :  0000001A 00000000
            |  Already listed
  04        CLEcran::vDelaiLCD(USI)
            | Stack used (prev) :  0000003E 00000009
            | + function block  :  00000009 00000000
  03      CLEcran::vLCDInit()
          | Stack used (prev) :  00000047 00000009
          | + function block  :  0000001A 00000000
  02    CLEcran::CLEcran()
        | Stack used (prev) :  00000061 00000009
        | + function block  :  00000010 00000000
  03      RS232::SetConfig()
          | Stack used (prev) :  0000003E 00000009
          | + function block  :  00000000 00000000
  02    RS232::RS232()
        | Stack used (prev) :  0000003E 00000009
        | + function block  :  00000000 00000004
  03      CLSPI::~CLSPI()
          | Stack used (prev) :  00000000 00000004
          | + function block  :  00000008 00000000
          |  Already listed
  03      CLSPI::CLSPI()
          | Stack used (prev) :  0000003E 00000009
          | + function block  :  00000000 00000000
          |  Already listed
  06            CLSPI::Delai(unsigned long)
                | Stack used (prev) :  0000003E 00000009
                | + function block  :  00000023 00000000
  06            CLSPI::Write(UC, UC)
                | Stack used (prev) :  0000003E 00000009
                | + function block  :  00000010 00000000
  05          CLSPI::WriteMPC(UC, UC, UC, UC)
              | Stack used (prev) :  00000061 00000009
              | + function block  :  00000029 00000002
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  03      CanBus::ChoisirIdentifiantTX0(int)
          | Stack used (prev) :  000000AB 0000000B
          | + function block  :  0000001B 00000000
  04        CLSPI::WriteMPC(UC, UC, UC, UC)
            | Stack used (prev) :  00000061 00000009
            | + function block  :  00000029 00000002
            |  Already listed
  04        CanBus::Delai(unsigned long)
            | Stack used (prev) :  0000003E 00000009
            | + function block  :  00000022 00000000
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
                              - Cross-reference -                      Page   54

            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  0000008A 0000000B
            | + function block  :  00000021 00000000
            |  Already listed
  03      CanBus::MCP24515_init()
          | Stack used (prev) :  000000AB 0000000B
          | + function block  :  00000019 00000000
  02    CanBus::CanBus()
        | Stack used (prev) :  000000C6 0000000B
        | + function block  :  00000012 00000000
  01  __sti__routine()
      | Stack used (prev) :  000000D8 0000000D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000000D8 0000000D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000000D8 0000000D
  04        CLInOutBase::vOut(USI, UC)
            | Stack used (prev) :  0000000C 00000007
            | + function block  :  00000000 00000002
            |  Already listed
                              - Cross-reference -                      Page   55

  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 00000008
            | + function block  :  0000001A 00000000
            |  Already listed
  03      CLEcran::Lettre(char)
          | Stack used (prev) :  000000D8 0000000D
          | + function block  :  00000025 00000000
  02    CLEcran::String(char const *)
        | Stack used (prev) :  000000FD 0000000D
        | + function block  :  00000010 00000000
  03      CLInOutBase::vOut(USI, UC)
          | Stack used (prev) :  0000000C 00000007
          | + function block  :  00000000 00000002
          |  Already listed
  03      CLEcran::vLCDBusy()
          | Stack used (prev) :  0000000C 00000008
          | + function block  :  0000001A 00000000
          |  Already listed
  02    CLEcran::vLCDCursor(UC, UC)
        | Stack used (prev) :  000000D8 0000000D
        | + function block  :  00000012 00000000
  02    RS232::SendString(char const *)
        | Stack used (prev) :  000000D8 0000000D
        | + function block  :  00000000 00000002
  03      CLSPI::WriteMPC(UC, UC, UC, UC)
          | Stack used (prev) :  00000061 00000009
          | + function block  :  00000029 00000002
          |  Already listed
  03      CanBus::Delai(unsigned long)
          | Stack used (prev) :  0000003E 00000009
          | + function block  :  00000022 00000000
          |  Already listed
  03      CanBus::Longueur(UC const *)
          | Stack used (prev) :  000000D8 0000000D
          | + function block  :  00000018 00000000
  03      CanBus::EcrireRegistreMCP2515(UC, UC)
          | Stack used (prev) :  0000008A 0000000B
          | + function block  :  00000021 00000000
          |  Already listed
  03      CanBus::EcrireRegistreMCP2515(UC, UC)
          | Stack used (prev) :  0000008A 0000000B
          | + function block  :  00000021 00000000
          |  Already listed
  02    CanBus::SendMCP(UC const *)
        | Stack used (prev) :  000000F0 0000000D
        | + function block  :  0000001E 00000000
  01  main
      | Stack used (prev) :  0000010E 0000000F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000010E 0000000F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000010E 0000000F
  02    __call_ctors
        | Stack used (prev) :  0000010E 0000000F
        | + function block  :  0000000C 00000000
  01  __cstart_call_ctors
      | Stack used (prev) :  0000011A 0000000F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000011A 0000000F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000011A 0000000F
  01  __program_start
      | Stack used (prev) :  0000011A 0000000F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000011A 0000000F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
                              - Cross-reference -                      Page   56

    | Stack used (prev) :  0000011A 0000000F
  01  __low_level_init
      | Stack used (prev) :  0000011A 0000000F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000011A 0000000F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000011A 0000000F
  01  __call_dtors
      | Stack used (prev) :  0000011A 0000000F
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000011A 00000011


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000011A 00000011
  02    _exit
        | Stack used (prev) :  0000011A 00000011
        | + function block  :  00000000 00000000
  01  exit
      | Stack used (prev) :  0000011A 00000011
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000011A 00000011




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000005           6   com    0
CSTART               CODE          00000006 - 00000070          6B   rel    0
IXDATA_ID            CODE               00000071                     dse    0
IDATA_ID             CODE               00000071                     dse    0
DATA_ID              CODE               00000071                     dse    0
PDATA_ID             CODE               00000071                     dse    0
BIT_ID               CODE               00000071                     dse    0
BDATA_ID             CODE               00000071                     dse    0
XDATA_ID             CODE          00000071 - 000000ED          7D   rel    0
RCODE                CODE          000000EE - 000002B5         1C8   rel    0
DIFUNCT              CODE          000002B6 - 000002B7           2   rel    0
<NEAR_CODE> 1        CODE          000002B8 - 00000BA0         8E9   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000087 - 0000008A           4   rel    0
                     DATA          0000008C - 0000008D           2 
                     DATA          00000090 - 00000090           1 
                     DATA          00000098 - 00000099           2 
                     DATA          000000A8 - 000000A8           1 
                     DATA          000000B0 - 000000B0           1 
PDATA_Z              XDATA              00000F01                     rel    0
XSTACK               XDATA         00008100 - 00008FFE         EFF   rel    0
XDATA_Z              XDATA         00008FFF - 00009011          13   rel    0
XDATA_I              XDATA         00009012 - 0000908E          7D   rel    0
ISTACK               IDATA         000000C0 - 000000FF          40   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 2 977 bytes of CODE  memory
    18 bytes of DATA  memory (+ 11 absolute )
 3 983 bytes of XDATA memory
    64 bytes of IDATA memory
     8 bits  of BIT   memory

Errors: none
Warnings: none

