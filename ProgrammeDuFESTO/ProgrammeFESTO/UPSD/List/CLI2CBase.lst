###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         25/Nov/2014  19:57:45 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\CLI2CBase.Cpp                                    #
#    Command line       =  "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\CLI2CBase.Cpp" -D UPSD3254A --preprocess=cl      #
#                          "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\UPSD\List\" -lC "C:\Synchro\Dropbox\Travaux\Auto #
#                          mne 2014\ProjetSession5\ProgrammeDuFESTO\Programme #
#                          FESTO\UPSD\List\" -lA "C:\Synchro\Dropbox\Travaux\ #
#                          Automne 2014\ProjetSession5\ProgrammeDuFESTO\Progr #
#                          ammeFESTO\UPSD\List\" -o                           #
#                          "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\UPSD\Obj\" -e --no_cse --no_unroll --no_inline   #
#                          --no_code_motion --no_tbaa --debug --core=plain    #
#                          --dptr=16,1 --data_model=large --code_model=near   #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data --nr_virtual_regs 8         #
#                          --dlib_config "C:\Program Files (x86)\IAR          #
#                          Systems\Embedded Workbench                         #
#                          6.0\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++      #
#    List file          =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\UPSD\List\CLI2CBase.lst                          #
#    Object file        =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\UPSD\Obj\CLI2CBase.r51                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFESTO\CLI2CBase.Cpp
      1          
      2          #include "CLI2CBase.h"

   \                                 In  segment SFR_AN, at 0xb0
   \   union <unnamed> volatile __sfr _A_P3
   \                     _A_P3:
   \   000000                DS 1
      3          
      4          // *****************************************************************************
      5          //                            LES CONSTRUCTEURS
      6          // *****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
      7          CLI2CBase :: CLI2CBase(void)
   \                     ??CLI2CBase:
      8          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
      9          ucDelaiI2C = 5;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   7405         MOV     A,#0x5
   \   00000A   F0           MOVX    @DPTR,A
     10          }
   \   00000B   D083         POP     DPH
   \   00000D   D082         POP     DPL
   \   00000F   22           RET
     11          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     12          CLI2CBase :: CLI2CBase(UC ucDelai)
   \                     ??CLI2CBase_1:
     13          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     14          ucDelaiI2C = ucDelai;
   \   000004   E9           MOV     A,R1
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   F0           MOVX    @DPTR,A
     15          }
   \   00000A   D083         POP     DPH
   \   00000C   D082         POP     DPL
   \   00000E   22           RET
     16          
     17          // *****************************************************************************
     18          //                            LE DESTRUCTEUR
     19          // *****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     20          CLI2CBase :: ~CLI2CBase(void)
   \                     `?~CLI2CBase`:
     21          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     22          
     23          }
   \   000000   22           RET
     24          
     25          ///////////////////////////////////////////////////////////////////////////////
     26          // void CLI2CBase :: vI2CStart(void)
     27          ///////////////////////////////////////////////////////////////////////////////
     28          //
     29          // Description:
     30          //
     31          // Parametres d'entrees: null
     32          //
     33          // Parametres de sortie: null
     34          //
     35          // Appel de la fonction:
     36          //
     37          // Cree le  4 avril 2014 par Louis-Normand Ang Houle
     38          //
     39          // Modifications:
     40          // -
     41          //
     42          ///////////////////////////////////////////////////////////////////////////////

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     43          void CLI2CBase :: vI2CStart(void)
   \                     ??vI2CStart:
     44          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
     45          SDA = HAUT;                              //Met SDA a 1
   \   000008   D2B6         SETB    0xb0.6
     46          SCL = HAUT;                              //Met SCL a 1
   \   00000A   D2B7         SETB    0xb0.7
     47          vDelaiI2C();                             //Delai
   \   00000C                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   00000C   AA82         MOV     R2,DPL
   \   00000E   AB83         MOV     R3,DPH
   \   000010   12....       LCALL   ??vDelaiI2C
     48          SDA = BAS;                               //Met SDA a 0
   \   000013   C2B6         CLR     0xb0.6
     49          vDelaiI2C();                             //Delai
   \   000015                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   000015   AA82         MOV     R2,DPL
   \   000017   AB83         MOV     R3,DPH
   \   000019   12....       LCALL   ??vDelaiI2C
     50          SCL = BAS;                               //Met SCL a 0
   \   00001C   C2B7         CLR     0xb0.7
     51          vDelaiI2C();                             //Delai
   \   00001E                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   00001E   AA82         MOV     R2,DPL
   \   000020   AB83         MOV     R3,DPH
   \   000022   12....       LCALL   ??vDelaiI2C
     52          }
   \   000025   D083         POP     DPH
   \   000027   D082         POP     DPL
   \   000029   22           RET
   \   00002A                REQUIRE _A_P3
     53          
     54          ///////////////////////////////////////////////////////////////////////////////
     55          // void CLI2CBase :: vI2CStop(void)
     56          ///////////////////////////////////////////////////////////////////////////////
     57          //
     58          // Description:
     59          //
     60          // Parametres d'entrees: null
     61          //
     62          // Parametres de sortie: null
     63          //
     64          // Appel de la fonction:
     65          //
     66          // Cree le  4 avril 2014 par Louis-Normand Ang Houle
     67          //
     68          // Modifications:
     69          // -
     70          //
     71          ///////////////////////////////////////////////////////////////////////////////
     72          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     73          void CLI2CBase :: vI2CStop(void)
   \                     ??vI2CStop:
     74          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
     75          SDA = BAS;                               //Met SDA a 0
   \   000008   C2B6         CLR     0xb0.6
     76          SCL = BAS;                               //Met SCL a 0
   \   00000A   C2B7         CLR     0xb0.7
     77          vDelaiI2C();                             //Delai
   \   00000C                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   00000C   AA82         MOV     R2,DPL
   \   00000E   AB83         MOV     R3,DPH
   \   000010   12....       LCALL   ??vDelaiI2C
     78          SCL = HAUT;                              //Met SCL a 1
   \   000013   D2B7         SETB    0xb0.7
     79          vDelaiI2C();                             //Delai
   \   000015                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   000015   AA82         MOV     R2,DPL
   \   000017   AB83         MOV     R3,DPH
   \   000019   12....       LCALL   ??vDelaiI2C
     80          SDA = HAUT;                              //Met SDA a 1
   \   00001C   D2B6         SETB    0xb0.6
     81          vDelaiI2C();                             //Delai
   \   00001E                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   00001E   AA82         MOV     R2,DPL
   \   000020   AB83         MOV     R3,DPH
   \   000022   12....       LCALL   ??vDelaiI2C
     82          }
   \   000025   D083         POP     DPH
   \   000027   D082         POP     DPL
   \   000029   22           RET
   \   00002A                REQUIRE _A_P3
     83          
     84          ///////////////////////////////////////////////////////////////////////////////
     85          // UC   CLI2CBase :: ucI2CLireBit(void)
     86          ///////////////////////////////////////////////////////////////////////////////
     87          //
     88          // Description:
     89          //
     90          // Parametres d'entrees: null
     91          //
     92          // Parametres de sortie: null
     93          //
     94          // Appel de la fonction:
     95          //
     96          // Cree le  4 avril 2014 par Louis-Normand Ang Houle
     97          //
     98          // Modifications:
     99          // -
    100          //
    101          ///////////////////////////////////////////////////////////////////////////////
    102          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    103          UC CLI2CBase :: ucI2CLireBit(void)
   \                     ??ucI2CLireBit:
    104          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
    105          UC ucBit;
    106          SDA = HAUT;
   \   000009   D2B6         SETB    0xb0.6
    107          vDelaiI2C();
   \   00000B                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   00000B   AA82         MOV     R2,DPL
   \   00000D   AB83         MOV     R3,DPH
   \   00000F   12....       LCALL   ??vDelaiI2C
    108          SCL = HAUT;
   \   000012   D2B7         SETB    0xb0.7
    109          vDelaiI2C();
   \   000014                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   000014   AA82         MOV     R2,DPL
   \   000016   AB83         MOV     R3,DPH
   \   000018   12....       LCALL   ??vDelaiI2C
    110          ucBit = SDA;
   \   00001B   A2B6         MOV     C,0xb0.6
   \   00001D   E4           CLR     A
   \   00001E   33           RLC     A
   \   00001F   FE           MOV     R6,A
    111          vDelaiI2C();
   \   000020                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   000020   AA82         MOV     R2,DPL
   \   000022   AB83         MOV     R3,DPH
   \   000024   12....       LCALL   ??vDelaiI2C
    112          SCL = BAS;
   \   000027   C2B7         CLR     0xb0.7
    113          vDelaiI2C();
   \   000029                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   000029   AA82         MOV     R2,DPL
   \   00002B   AB83         MOV     R3,DPH
   \   00002D   12....       LCALL   ??vDelaiI2C
    114          return (ucBit);
   \   000030   EE           MOV     A,R6
   \   000031   F9           MOV     R1,A
   \   000032   7F01         MOV     R7,#0x1
   \   000034   02....       LJMP    ?FUNC_LEAVE_XDATA
   \   000037                REQUIRE _A_P3
    115          }
    116          
    117          ///////////////////////////////////////////////////////////////////////////////
    118          // void CLI2CBase :: vI2CEcrireBit(UC ucBit)
    119          ///////////////////////////////////////////////////////////////////////////////
    120          //
    121          // Description:
    122          //
    123          // Parametres d'entrees: null
    124          //
    125          // Parametres de sortie: null
    126          //
    127          // Appel de la fonction:
    128          //
    129          // Cree le  4 avril 2014 par Louis-Normand Ang Houle
    130          //
    131          // Modifications:
    132          // -
    133          //
    134          ///////////////////////////////////////////////////////////////////////////////
    135          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    136          void CLI2CBase :: vI2CEcrireBit(UC ucBit)
   \                     ??vI2CEcrireBit:
    137          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   E9           MOV     A,R1
   \   00000A   FE           MOV     R6,A
    138          SDA = ucBit;
   \   00000B   A2E0         MOV     C,0xE0 /* A   */.0
   \   00000D   92B6         MOV     0xb0.6,C
    139          vDelaiI2C();
   \   00000F                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   00000F   AA82         MOV     R2,DPL
   \   000011   AB83         MOV     R3,DPH
   \   000013   12....       LCALL   ??vDelaiI2C
    140          SCL = HAUT;
   \   000016   D2B7         SETB    0xb0.7
    141          vDelaiI2C();
   \   000018                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   000018   AA82         MOV     R2,DPL
   \   00001A   AB83         MOV     R3,DPH
   \   00001C   12....       LCALL   ??vDelaiI2C
    142          SCL = BAS;
   \   00001F   C2B7         CLR     0xb0.7
    143          vDelaiI2C();
   \   000021                ; Setup parameters for call to function CLI2CBase::vDelaiI2C()
   \   000021   AA82         MOV     R2,DPL
   \   000023   AB83         MOV     R3,DPH
   \   000025   12....       LCALL   ??vDelaiI2C
    144          }
   \   000028   7F01         MOV     R7,#0x1
   \   00002A   02....       LJMP    ?FUNC_LEAVE_XDATA
   \   00002D                REQUIRE _A_P3
    145          
    146          ///////////////////////////////////////////////////////////////////////////////
    147          // UC CLI2CBase :: ucI2CLireOctet(UC ucAck)
    148          ///////////////////////////////////////////////////////////////////////////////
    149          //
    150          // Description:
    151          //
    152          // Parametres d'entrees: null
    153          //
    154          // Parametres de sortie: null
    155          //
    156          // Appel de la fonction:
    157          //
    158          // Cree le  4 avril 2014 par Louis-Normand Ang Houle
    159          //
    160          // Modifications:
    161          // -
    162          //
    163          ///////////////////////////////////////////////////////////////////////////////
    164          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    165          UC CLI2CBase :: ucI2CLireOctet(UC ucAck)
   \                     ??ucI2CLireOctet:
    166          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   E9           MOV     A,R1
   \   00000A   FF           MOV     R7,A
    167          UC ucLecture = 0x00;              //Variable de reception
   \   00000B   7E00         MOV     R6,#0x0
    168          
    169          for(UC i=0; i < 8; i++)           //Repeter 8 fois
   \   00000D   75..00       MOV     ?V0 + 0,#0x0
   \   000010   8013         SJMP    ??ucI2CLireOctet_1
    170            {
    171             if(ucI2CLireBit() == 1)        //Si lecture retourne 1
   \                     ??ucI2CLireOctet_2:
   \   000012                ; Setup parameters for call to function CLI2CBase::ucI2CLireBit()
   \   000012   AA82         MOV     R2,DPL
   \   000014   AB83         MOV     R3,DPH
   \   000016   12....       LCALL   ??ucI2CLireBit
   \   000019   E9           MOV     A,R1
   \   00001A   6401         XRL     A,#0x1
   \   00001C   7001         JNZ     ??ucI2CLireOctet_3
    172               {
    173                ucLecture = ucLecture + 1;  //Additionne 1 a LireOctet
   \   00001E   0E           INC     R6
    174               }
    175             ucLecture = ucLecture << 1;    //Decale LireOctet 1 vers gauche
   \                     ??ucI2CLireOctet_3:
   \   00001F   EE           MOV     A,R6
   \   000020   C3           CLR     C
   \   000021   33           RLC     A
   \   000022   FE           MOV     R6,A
    176            }
   \   000023   05..         INC     ?V0 + 0
   \                     ??ucI2CLireOctet_1:
   \   000025   E5..         MOV     A,?V0 + 0
   \   000027   C3           CLR     C
   \   000028   9408         SUBB    A,#0x8
   \   00002A   40E6         JC      ??ucI2CLireOctet_2
    177          vI2CEcrireBit(ucAck);
   \   00002C                ; Setup parameters for call to function CLI2CBase::vI2CEcrireBit(UC)
   \   00002C   EF           MOV     A,R7
   \   00002D   F9           MOV     R1,A
   \   00002E   AA82         MOV     R2,DPL
   \   000030   AB83         MOV     R3,DPH
   \   000032   12....       LCALL   ??vI2CEcrireBit
    178          return(ucLecture);                //Retourne l'octet lue
   \   000035   EE           MOV     A,R6
   \   000036   F9           MOV     R1,A
   \   000037   7F01         MOV     R7,#0x1
   \   000039   02....       LJMP    ?FUNC_LEAVE_XDATA
    179           }
    180          
    181          ///////////////////////////////////////////////////////////////////////////////
    182          // UC CLI2CBase :: ucI2CEcrireOctet(UC ucOctet)
    183          ///////////////////////////////////////////////////////////////////////////////
    184          //
    185          // Description:
    186          //
    187          // Parametres d'entrees: null
    188          //
    189          // Parametres de sortie: null
    190          //
    191          // Appel de la fonction:
    192          //
    193          // Cree le  4 avril 2014 par Louis-Normand Ang Houle
    194          //
    195          // Modifications:
    196          // -
    197          //
    198          ///////////////////////////////////////////////////////////////////////////////

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    199          UC CLI2CBase :: ucI2CEcrireOctet(UC ucOctet)
   \                     ??ucI2CEcrireOctet:
    200          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   E9           MOV     A,R1
   \   00000A   FF           MOV     R7,A
    201          for(UC i=0; i<8; i++)
   \   00000B   7E00         MOV     R6,#0x0
   \   00000D   800E         SJMP    ??ucI2CEcrireOctet_1
    202            {
    203             if((ucOctet & 0x80) == 0) vI2CEcrireBit(0);
    204             else                      vI2CEcrireBit(1);
   \                     ??ucI2CEcrireOctet_2:
   \   00000F                ; Setup parameters for call to function CLI2CBase::vI2CEcrireBit(UC)
   \   00000F   7901         MOV     R1,#0x1
   \   000011   AA82         MOV     R2,DPL
   \   000013   AB83         MOV     R3,DPH
   \   000015   12....       LCALL   ??vI2CEcrireBit
    205                ucOctet = ucOctet << 1;
   \                     ??ucI2CEcrireOctet_3:
   \   000018   EF           MOV     A,R7
   \   000019   C3           CLR     C
   \   00001A   33           RLC     A
   \   00001B   FF           MOV     R7,A
   \   00001C   0E           INC     R6
   \                     ??ucI2CEcrireOctet_1:
   \   00001D   EE           MOV     A,R6
   \   00001E   C3           CLR     C
   \   00001F   9408         SUBB    A,#0x8
   \   000021   5010         JNC     ??ucI2CEcrireOctet_4
   \   000023   EF           MOV     A,R7
   \   000024   A2E7         MOV     C,0xE0 /* A   */.7
   \   000026   40E7         JC      ??ucI2CEcrireOctet_2
   \   000028                ; Setup parameters for call to function CLI2CBase::vI2CEcrireBit(UC)
   \   000028   7900         MOV     R1,#0x0
   \   00002A   AA82         MOV     R2,DPL
   \   00002C   AB83         MOV     R3,DPH
   \   00002E   12....       LCALL   ??vI2CEcrireBit
   \   000031   80E5         SJMP    ??ucI2CEcrireOctet_3
    206            }
    207          return (ucI2CLireBit());
   \                     ??ucI2CEcrireOctet_4:
   \   000033                ; Setup parameters for call to function CLI2CBase::ucI2CLireBit()
   \   000033   AA82         MOV     R2,DPL
   \   000035   AB83         MOV     R3,DPH
   \   000037   12....       LCALL   ??ucI2CLireBit
   \   00003A   7F01         MOV     R7,#0x1
   \   00003C   02....       LJMP    ?FUNC_LEAVE_XDATA
    208          }
    209          
    210          ///////////////////////////////////////////////////////////////////////////////
    211          // void CLI2CBase :: vDelaiI2C(void)
    212          ///////////////////////////////////////////////////////////////////////////////
    213          //
    214          // Description:
    215          //
    216          // Parametres d'entrees: null
    217          //
    218          // Parametres de sortie: null
    219          //
    220          // Appel de la fonction:
    221          //
    222          // Cree le  4 avril 2014 par Louis-Normand Ang Houle
    223          //
    224          // Modifications:
    225          // -
    226          //
    227          ///////////////////////////////////////////////////////////////////////////////

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    228          void CLI2CBase :: vDelaiI2C(void)
   \                     ??vDelaiI2C:
    229          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    230          for (UC i= ucDelaiI2C; i>0; i--);
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   E0           MOVX    A,@DPTR
   \   000009   F8           MOV     R0,A
   \   00000A   8001         SJMP    ??vDelaiI2C_1
   \                     ??vDelaiI2C_2:
   \   00000C   18           DEC     R0
   \                     ??vDelaiI2C_1:
   \   00000D   E8           MOV     A,R0
   \   00000E   C3           CLR     C
   \   00000F   9401         SUBB    A,#0x1
   \   000011   50F9         JNC     ??vDelaiI2C_2
    231          }
   \   000013   D083         POP     DPH
   \   000015   D082         POP     DPL
   \   000017   22           RET

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLI2CBase &CLI2CBase::new CLI2CBase()
   \                     `??new CLI2CBase`:
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002   C0..         PUSH    ?V0 + 1
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004                ; Setup parameters for call to function operator new(unsigned int)
   \   000004   7A01         MOV     R2,#0x1
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   `??operator new`
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   A8..         MOV     R0,?V0 + 0
   \   000011   A9..         MOV     R1,?V0 + 1
   \   000013   E8           MOV     A,R0
   \   000014   FA           MOV     R2,A
   \   000015   E9           MOV     A,R1
   \   000016   FB           MOV     R3,A
   \   000017   E8           MOV     A,R0
   \   000018   49           ORL     A,R1
   \   000019   600D         JZ      `??new CLI2CBase_2`
   \   00001B                ; Setup parameters for call to function CLI2CBase::CLI2CBase()
   \   00001B   12....       LCALL   ??CLI2CBase
   \   00001E   8A..         MOV     ?V0 + 0,R2
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   AA..         MOV     R2,?V0 + 0
   \   000024   AB..         MOV     R3,?V0 + 1
   \   000026   8004         SJMP    `??new CLI2CBase_3`
   \                     `??new CLI2CBase_2`:
   \   000028   7A00         MOV     R2,#0x0
   \   00002A   7B00         MOV     R3,#0x0
   \                     `??new CLI2CBase_3`:
   \   00002C   D0..         POP     ?V0 + 1
   \   00002E   D0..         POP     ?V0 + 0
   \   000030   22           RET

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLI2CBase &CLI2CBase::new CLI2CBase(UC)
   \                     `??new CLI2CBase_1`:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007                ; Setup parameters for call to function operator new(unsigned int)
   \   000007   7A01         MOV     R2,#0x1
   \   000009   7B00         MOV     R3,#0x0
   \   00000B   12....       LCALL   `??operator new`
   \   00000E   8A..         MOV     ?V0 + 0,R2
   \   000010   8B..         MOV     ?V0 + 1,R3
   \   000012   A8..         MOV     R0,?V0 + 0
   \   000014   A9..         MOV     R1,?V0 + 1
   \   000016   E8           MOV     A,R0
   \   000017   FA           MOV     R2,A
   \   000018   E9           MOV     A,R1
   \   000019   FB           MOV     R3,A
   \   00001A   E8           MOV     A,R0
   \   00001B   49           ORL     A,R1
   \   00001C   600F         JZ      `??new CLI2CBase_4`
   \   00001E                ; Setup parameters for call to function CLI2CBase::CLI2CBase(UC)
   \   00001E   EE           MOV     A,R6
   \   00001F   F9           MOV     R1,A
   \   000020   12....       LCALL   ??CLI2CBase_1
   \   000023   8A..         MOV     ?V0 + 0,R2
   \   000025   8B..         MOV     ?V0 + 1,R3
   \   000027   AA..         MOV     R2,?V0 + 0
   \   000029   AB..         MOV     R3,?V0 + 1
   \   00002B   8004         SJMP    `??new CLI2CBase_5`
   \                     `??new CLI2CBase_4`:
   \   00002D   7A00         MOV     R2,#0x0
   \   00002F   7B00         MOV     R3,#0x0
   \                     `??new CLI2CBase_5`:
   \   000031   7F02         MOV     R7,#0x2
   \   000033   02....       LJMP    ?FUNC_LEAVE_XDATA

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant void CLI2CBase::delete ~CLI2CBase(CLI2CBase *)
   \                     `??delete ~CLI2CBase`:
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EE           MOV     A,R6
   \   00000A   4F           ORL     A,R7
   \   00000B   600E         JZ      `??delete ~CLI2CBase_1`
   \   00000D                ; Setup parameters for call to function CLI2CBase::~CLI2CBase()
   \   00000D   EE           MOV     A,R6
   \   00000E   FA           MOV     R2,A
   \   00000F   EF           MOV     A,R7
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   `?~CLI2CBase`
   \   000014                ; Setup parameters for call to function operator delete(void *)
   \   000014   EE           MOV     A,R6
   \   000015   FA           MOV     R2,A
   \   000016   EF           MOV     A,R7
   \   000017   FB           MOV     R3,A
   \   000018   12....       LCALL   `??operator delete`
   \                     `??delete ~CLI2CBase_1`:
   \   00001B   7F01         MOV     R7,#0x1
   \   00001D   02....       LJMP    ?FUNC_LEAVE_XDATA
    232          
    233          //LinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxTUX

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     CLI2CBase::CLI2CBase()             2      0      0
     CLI2CBase::CLI2CBase(UC)           3      0      9
     CLI2CBase::delete ~CLI2CBase(CLI2CBase *)
                                        0      0      8
       -> CLI2CBase::~CLI2CBase()       0      0     16
       -> operator delete(void *)       0      0     16
     CLI2CBase::new CLI2CBase()         2      0      0
       -> operator new(unsigned int)
                                        4      0      0
       -> CLI2CBase::CLI2CBase()        4      0      0
     CLI2CBase::new CLI2CBase(UC)       0      0      9
       -> operator new(unsigned int)
                                        0      0     18
       -> CLI2CBase::CLI2CBase(UC)      0      0     18
     CLI2CBase::ucI2CEcrireOctet(UC)
                                        0      0      8
       -> CLI2CBase::vI2CEcrireBit(UC)
                                        0      0     16
       -> CLI2CBase::vI2CEcrireBit(UC)
                                        0      0     16
       -> CLI2CBase::ucI2CLireBit()     0      0     16
     CLI2CBase::ucI2CLireBit()          0      0     16
       -> CLI2CBase::vDelaiI2C()        0      0     16
       -> CLI2CBase::vDelaiI2C()        0      0     16
       -> CLI2CBase::vDelaiI2C()        0      0     16
       -> CLI2CBase::vDelaiI2C()        0      0     16
     CLI2CBase::ucI2CLireOctet(UC)      0      0      8
       -> CLI2CBase::ucI2CLireBit()     0      0     16
       -> CLI2CBase::vI2CEcrireBit(UC)
                                        0      0     16
     CLI2CBase::vDelaiI2C()             2      0      8
     CLI2CBase::vI2CEcrireBit(UC)       0      0     16
       -> CLI2CBase::vDelaiI2C()        0      0     16
       -> CLI2CBase::vDelaiI2C()        0      0     16
       -> CLI2CBase::vDelaiI2C()        0      0     16
     CLI2CBase::vI2CStart()             2      0      0
       -> CLI2CBase::vDelaiI2C()        4      0      0
       -> CLI2CBase::vDelaiI2C()        4      0      0
       -> CLI2CBase::vDelaiI2C()        4      0      0
     CLI2CBase::vI2CStop()              2      0      0
       -> CLI2CBase::vDelaiI2C()        4      0      0
       -> CLI2CBase::vDelaiI2C()        4      0      0
       -> CLI2CBase::vDelaiI2C()        4      0      0
     CLI2CBase::~CLI2CBase()            0      0      8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _A_P3                             1
     CLI2CBase::CLI2CBase()           16
     CLI2CBase::CLI2CBase(UC)         15
     CLI2CBase::~CLI2CBase()           1
     CLI2CBase::vI2CStart()           42
     CLI2CBase::vI2CStop()            42
     CLI2CBase::ucI2CLireBit()        55
     CLI2CBase::vI2CEcrireBit(UC)     45
     CLI2CBase::ucI2CLireOctet(UC)    60
     CLI2CBase::ucI2CEcrireOctet(UC)
                                      63
     CLI2CBase::vDelaiI2C()           24
     CLI2CBase::new CLI2CBase()       49
     CLI2CBase::new CLI2CBase(UC)     54
     CLI2CBase::delete ~CLI2CBase(CLI2CBase *)
                                      32

 
 498 bytes in segment NEAR_CODE
   1 byte  in segment SFR_AN
 
 498 bytes of CODE memory
   0 bytes of DATA memory (+ 1 byte shared)

Errors: none
Warnings: none
