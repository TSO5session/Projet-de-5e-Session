###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         24/Nov/2014  21:39:27 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\NomDuProjet.cpp                                  #
#    Command line       =  "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\NomDuProjet.cpp" -D UPSD3254A --preprocess=cl    #
#                          "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\UPSD\List\" -lC "C:\Synchro\Dropbox\Travaux\Auto #
#                          mne 2014\ProjetSession5\ProgrammeDuFESTO\Programme #
#                          FESTO\UPSD\List\" -lA "C:\Synchro\Dropbox\Travaux\ #
#                          Automne 2014\ProjetSession5\ProgrammeDuFESTO\Progr #
#                          ammeFESTO\UPSD\List\" -o                           #
#                          "C:\Synchro\Dropbox\Travaux\Automne                #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\UPSD\Obj\" -e --no_cse --no_unroll --no_inline   #
#                          --no_code_motion --no_tbaa --debug --core=plain    #
#                          --dptr=16,1 --data_model=large --code_model=near   #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data --nr_virtual_regs 8         #
#                          --dlib_config "C:\Program Files (x86)\IAR          #
#                          Systems\Embedded Workbench                         #
#                          6.0\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++      #
#    List file          =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\UPSD\List\NomDuProjet.lst                        #
#    Object file        =  C:\Synchro\Dropbox\Travaux\Automne                 #
#                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFEST #
#                          O\UPSD\Obj\NomDuProjet.r51                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFESTO\NomDuProjet.cpp
      1          // **************************Main.c
      2          // Auteur:      Vincent Chouinard
      3          // Date:        26 octobre 2014
      4          // Version :    1.0
      5          //
      6          // Compilateur: IAR 8.10
      7          //
      8          // Description: Fichier principal
      9          //
     10          // *****************************************************************************
     11          // **** LES INCLUDES ****************//
     12          #include "CLI2CPort.h"               // Pour utiliser le bus I2C Software

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IE
   \                     _A_IE:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xae
   \   unsigned char volatile __sfr WDKEY
   \                     WDKEY:
   \   000000                DS 1
     13          #include "CLI2CHard.h"               // Pour utiliser le bus I2C Hardware
     14          #include "CLSPI.h"                   // Pour utiliser le bus SPI
     15          #include "CLClavier.h"               // Pour utiliser le clavier
     16          #include "CLEcran.h"                 // Pour utiliser l'écran
     17          #include "Timer0.h"                  // Pour utiliser le timer 0
     18          #include "Optik.h"                   // Pour utiliser l'encodeur Optique
     19          #include "CANBUS.h"                  // Pour utiliser un bus CAN
     20          #include "StepMotor.h"               // Pour utiliser un step motor
     21          #include "MCP2515.h"                 // Define des registres du MCP2515
     22          #include "CLSortieLatch.h"           // Pour faire des conversion DAC <===> ADC
     23          #include "Conversions.h"             // Fichier pour convertir des formats

     const char FloatToString (float fInputFloat); //String = Convert.FloatToString(131.74);  
     ^
"C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFESTO\Conversions.h",25  Warning[Pe815]: 
          type qualifier on return type is meaningless
     24          #include "CLCommunicUpsdPort1.h"     // Pour utiliser le port série du uPSD
     25          #include "_DeclarationGenerale.h"    // Raccourcis Linguistiques utiles
     26          #include "ConversionKeilToIAR.h"     // Compatbilité avec Keil
     27          #include "NomDuProjet.h"             //
     28          // **** LES DEFINES *****************//
     29          #define PCF8574Adress 0x40           // Adresse I2C du PCD8574
     30          // **** LES CLASSES *****************//
     31          //class RS232      Serial  ;         // Initialise la communication série Dallas 

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   static __intrinsic __near_func __xdata_reentrant void __sti__routine()
   \                     ??__sti__routine:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     32          class CLCommunic Serial  ;           // Initialise la communication série uPSD  
   \   000000                ; Setup parameters for call to function CLCommunic::CLCommunic()
   \   000000   7A..         MOV     R2,#Serial & 0xff
   \   000002   7B..         MOV     R3,#(Serial >> 8) & 0xff
   \   000004   12....       LCALL   ??CLCommunic
   \   000007                ; Setup parameters for call to function __record_needed_destruction
   \   000007   7A..         MOV     R2,#?_0 & 0xff
   \   000009   7B..         MOV     R3,#(?_0 >> 8) & 0xff
   \   00000B   12....       LCALL   __record_needed_destruction
     33          class CLI2CPort  I2CSoft ;           // Initialise le communication I2C Software
   \   00000E                ; Setup parameters for call to function CLI2CPort::CLI2CPort()
   \   00000E   7A..         MOV     R2,#I2CSoft & 0xff
   \   000010   7B..         MOV     R3,#(I2CSoft >> 8) & 0xff
   \   000012   12....       LCALL   ??CLI2CPort
   \   000015                ; Setup parameters for call to function __record_needed_destruction
   \   000015   7A..         MOV     R2,#?_2 & 0xff
   \   000017   7B..         MOV     R3,#(?_2 >> 8) & 0xff
   \   000019   12....       LCALL   __record_needed_destruction
     34          class CLI2CHARD  I2CHard ;           // Initialise le communication I2C Hardware
   \   00001C                ; Setup parameters for call to function CLI2CHARD::CLI2CHARD()
   \   00001C   7A..         MOV     R2,#I2CHard & 0xff
   \   00001E   7B..         MOV     R3,#(I2CHard >> 8) & 0xff
   \   000020   12....       LCALL   ??CLI2CHARD
   \   000023                ; Setup parameters for call to function __record_needed_destruction
   \   000023   7A..         MOV     R2,#?_4 & 0xff
   \   000025   7B..         MOV     R3,#(?_4 >> 8) & 0xff
   \   000027   12....       LCALL   __record_needed_destruction
     35          class CLEcran    LCD     ;           // Initialise l' ecran LCD
   \   00002A                ; Setup parameters for call to function CLEcran::CLEcran()
   \   00002A   7A..         MOV     R2,#LCD & 0xff
   \   00002C   7B..         MOV     R3,#(LCD >> 8) & 0xff
   \   00002E   12....       LCALL   ??CLEcran
   \   000031                ; Setup parameters for call to function __record_needed_destruction
   \   000031   7A..         MOV     R2,#?_6 & 0xff
   \   000033   7B..         MOV     R3,#(?_6 >> 8) & 0xff
   \   000035   12....       LCALL   __record_needed_destruction
     36          class Encodeur   Optik   ;           // Pour lire l'encodeur Optique
   \   000038                ; Setup parameters for call to function Encodeur::Encodeur()
   \   000038   7A..         MOV     R2,#Optik & 0xff
   \   00003A   7B..         MOV     R3,#(Optik >> 8) & 0xff
   \   00003C   12....       LCALL   ??Encodeur
   \   00003F                ; Setup parameters for call to function __record_needed_destruction
   \   00003F   7A..         MOV     R2,#?_8 & 0xff
   \   000041   7B..         MOV     R3,#(?_8 >> 8) & 0xff
   \   000043   12....       LCALL   __record_needed_destruction
     37          class CLClavier  Keyboard;           // Initialise le clavier
   \   000046                ; Setup parameters for call to function CLClavier::CLClavier()
   \   000046   7A..         MOV     R2,#Keyboard & 0xff
   \   000048   7B..         MOV     R3,#(Keyboard >> 8) & 0xff
   \   00004A   12....       LCALL   ??CLClavier
   \   00004D                ; Setup parameters for call to function __record_needed_destruction
   \   00004D   7A..         MOV     R2,#?_10 & 0xff
   \   00004F   7B..         MOV     R3,#(?_10 >> 8) & 0xff
   \   000051   12....       LCALL   __record_needed_destruction
     38          class DAC_ADC    ADCDAC  ;           // Initialise la conversion DAC <===> ADC
   \   000054                ; Setup parameters for call to function DAC_ADC::DAC_ADC()
   \   000054   7A..         MOV     R2,#ADCDAC & 0xff
   \   000056   7B..         MOV     R3,#(ADCDAC >> 8) & 0xff
   \   000058   12....       LCALL   ??DAC_ADC
   \   00005B                ; Setup parameters for call to function __record_needed_destruction
   \   00005B   7A..         MOV     R2,#?_12 & 0xff
   \   00005D   7B..         MOV     R3,#(?_12 >> 8) & 0xff
   \   00005F   12....       LCALL   __record_needed_destruction
     39          class Timer0     Timer   ;           // Pour utiliser le timer 0 (Default = 1ms)
   \   000062                ; Setup parameters for call to function Timer0::Timer0()
   \   000062   7A..         MOV     R2,#Timer & 0xff
   \   000064   7B..         MOV     R3,#(Timer >> 8) & 0xff
   \   000066   12....       LCALL   ??Timer0
   \   000069                ; Setup parameters for call to function __record_needed_destruction
   \   000069   7A..         MOV     R2,#?_14 & 0xff
   \   00006B   7B..         MOV     R3,#(?_14 >> 8) & 0xff
   \   00006D   12....       LCALL   __record_needed_destruction
     40          class CLSPI      SPI     ;           // Initialise la communication SPI
   \   000070                ; Setup parameters for call to function CLSPI::CLSPI()
   \   000070   7A..         MOV     R2,#SPI & 0xff
   \   000072   7B..         MOV     R3,#(SPI >> 8) & 0xff
   \   000074   12....       LCALL   ??CLSPI
   \   000077                ; Setup parameters for call to function __record_needed_destruction
   \   000077   7A..         MOV     R2,#?_16 & 0xff
   \   000079   7B..         MOV     R3,#(?_16 >> 8) & 0xff
   \   00007B   12....       LCALL   __record_needed_destruction
     41          class CanBus     CAN     ;           // Initialise le bus CAN
   \   00007E                ; Setup parameters for call to function CanBus::CanBus()
   \   00007E   7A..         MOV     R2,#CAN & 0xff
   \   000080   7B..         MOV     R3,#(CAN >> 8) & 0xff
   \   000082   12....       LCALL   ??CanBus
   \   000085                ; Setup parameters for call to function __record_needed_destruction
   \   000085   7A..         MOV     R2,#?_18 & 0xff
   \   000087   7B..         MOV     R3,#(?_18 >> 8) & 0xff
   \   000089   12....       LCALL   __record_needed_destruction
     42          class StepMotor  Step    ;           // Initialise le step motor
   \   00008C                ; Setup parameters for call to function StepMotor::StepMotor()
   \   00008C   7A..         MOV     R2,#Step & 0xff
   \   00008E   7B..         MOV     R3,#(Step >> 8) & 0xff
   \   000090   12....       LCALL   ??StepMotor
   \   000093                ; Setup parameters for call to function __record_needed_destruction
   \   000093   7A..         MOV     R2,#?_20 & 0xff
   \   000095   7B..         MOV     R3,#(?_20 >> 8) & 0xff
   \   000097   12....       LCALL   __record_needed_destruction
     43          class Conversion Convert ;           // COnversion de bases
   \   00009A                ; Setup parameters for call to function Conversion::Conversion()
   \   00009A   7A..         MOV     R2,#Convert & 0xff
   \   00009C   7B..         MOV     R3,#(Convert >> 8) & 0xff
   \   00009E   12....       LCALL   ??Conversion
   \   0000A1                ; Setup parameters for call to function __record_needed_destruction
   \   0000A1   7A..         MOV     R2,#?_22 & 0xff
   \   0000A3   7B..         MOV     R3,#(?_22 >> 8) & 0xff
   \   0000A5   02....       LJMP    __record_needed_destruction

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     Serial:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     I2CSoft:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     I2CHard:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     LCD:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     Optik:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     Keyboard:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ADCDAC:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     Timer:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     SPI:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     CAN:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     Step:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     Convert:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     44          // **** LES FONCTIONS DU MAIN *******//
     45          
     46          // **** PROGRAMME PRINCIPAL *********//

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     47          void main(void)
   \                     main:
     48          {
   \   000000                ; Auto size: 0
     49          EA    = 0   ;  // Disable interrupt.
   \   000000   C2AF         CLR     0xa8.7
     50          WDKEY = 0x55;  // Disable WatchDog.
   \   000002   75AE55       MOV     0xae,#0x55
     51          EA    = 1   ;  // Enable Interrupt
   \   000005   D2AF         SETB    0xa8.7
     52          
     53          while(1)
   \                     ??main_0:
   \   000007   80FE         SJMP    ??main_0
   \   000009                REQUIRE _A_IE
   \   000009                REQUIRE WDKEY
     54            {
     55          
     56            }
     57          }

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >`:
   \   000000   ....         DW ?_1
   \   000002   ....         DW Serial
   \   000004   ....         DW `?~CLCommunic`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_1`:
   \   000000   ....         DW ?_3
   \   000002   ....         DW I2CSoft
   \   000004   ....         DW `?~CLI2CPort`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_2`:
   \   000000   ....         DW ?_5
   \   000002   ....         DW I2CHard
   \   000004   ....         DW `?~CLI2CHARD`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_3`:
   \   000000   ....         DW ?_7
   \   000002   ....         DW LCD
   \   000004   ....         DW `?~CLEcran`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_4`:
   \   000000   ....         DW ?_9
   \   000002   ....         DW Optik
   \   000004   ....         DW `?~Encodeur`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_5`:
   \   000000   ....         DW ?_11
   \   000002   ....         DW Keyboard
   \   000004   ....         DW `?~CLClavier`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_6`:
   \   000000   ....         DW ?_13
   \   000002   ....         DW ADCDAC
   \   000004   ....         DW `?~DAC_ADC`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_7`:
   \   000000   ....         DW ?_15
   \   000002   ....         DW Timer
   \   000004   ....         DW `?~Timer0`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_8`:
   \   000000   ....         DW ?_17
   \   000002   ....         DW SPI
   \   000004   ....         DW `?~CLSPI`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_9`:
   \   000000   ....         DW ?_19
   \   000002   ....         DW CAN
   \   000004   ....         DW `?~CanBus`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_10`:
   \   000000   ....         DW ?_21
   \   000002   ....         DW Step
   \   000004   ....         DW `?~StepMotor`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_11`:
   \   000000   ....         DW ?_23
   \   000002   ....         DW Convert
   \   000004   ....         DW `?~Conversion`

   \                                 In  segment DIFUNCT, align 1, keep-with-next, root
   \   000000                REQUIRE ?cstart_call_ctors
   \   000000   ....         DC16    ??__sti__routine
     58          //LinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxTUX

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     __sti__routine()                   0      0      0
       -> CLCommunic::CLCommunic()      0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> CLI2CPort::CLI2CPort()        0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> CLI2CHARD::CLI2CHARD()        0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> CLEcran::CLEcran()            0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> Encodeur::Encodeur()          0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> CLClavier::CLClavier()        0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> DAC_ADC::DAC_ADC()            0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> Timer0::Timer0()              0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> CLSPI::CLSPI()                0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> CanBus::CanBus()              0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> StepMotor::StepMotor()        0      0      0
       -> __record_needed_destruction
                                        0      0      0
       -> Conversion::Conversion()      0      0      0
       -> __record_needed_destruction
                                        0      0      0
     main()                             0      0      0


   Segment part sizes:

     Function/Label         Bytes
     --------------         -----
     _A_IE                     1
     WDKEY                     1
     __sti__routine()        168
     Serial                    1
     I2CSoft                   2
     I2CHard                   2
     LCD                       2
     Optik                     1
     Keyboard                  1
     ADCDAC                    1
     Timer                     1
     SPI                       1
     CAN                       1
     Step                      1
     Convert                   1
     main()                    9
     ?<Initializer for >       6
     ?<Initializer for >_1     6
     ?<Initializer for >_2     6
     ?<Initializer for >_3     6
     ?<Initializer for >_4     6
     ?<Initializer for >_5     6
     ?<Initializer for >_6     6
     ?<Initializer for >_7     6
     ?<Initializer for >_8     6
     ?<Initializer for >_9     6
     ?<Initializer for >_10    6
     ?<Initializer for >_11    6
      Others                  98

 
   2 bytes in segment DIFUNCT
 177 bytes in segment NEAR_CODE
   2 bytes in segment SFR_AN
  72 bytes in segment XDATA_I
  72 bytes in segment XDATA_ID
  39 bytes in segment XDATA_Z
 
 251 bytes of CODE  memory
   0 bytes of DATA  memory (+ 2 bytes shared)
 111 bytes of XDATA memory

Errors: none
Warnings: 1
