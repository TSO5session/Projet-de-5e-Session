///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.40194/W32 for 8051        28/Nov/2014  08:11:51 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Synchro\Dropbox\Travaux\Automne                /
//                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFES /
//                          TO\CLIOPCF8574.cpp                                /
//    Command line       =  "C:\Synchro\Dropbox\Travaux\Automne               /
//                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFES /
//                          TO\CLIOPCF8574.cpp" -D UPSD3254A --preprocess=cl  /
//                          "C:\Synchro\Dropbox\Travaux\Automne               /
//                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFES /
//                          TO\UPSD\List\" -lC "C:\Synchro\Dropbox\Travaux\Au /
//                          tomne 2014\ProjetSession5\ProgrammeDuFESTO\Progra /
//                          mmeFESTO\UPSD\List\" -lA                          /
//                          "C:\Synchro\Dropbox\Travaux\Automne               /
//                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFES /
//                          TO\UPSD\List\" -o "C:\Synchro\Dropbox\Travaux\Aut /
//                          omne 2014\ProjetSession5\ProgrammeDuFESTO\Program /
//                          meFESTO\UPSD\Obj\" -e --no_cse --no_unroll        /
//                          --no_inline --no_code_motion --no_tbaa --debug    /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=near --calling_convention=xdata_reen /
//                          trant --place_constants=data --nr_virtual_regs 8  /
//                          --dlib_config "C:\Program Files (x86)\IAR         /
//                          Systems\Embedded Workbench                        /
//                          6.0\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++     /
//    List file          =  C:\Synchro\Dropbox\Travaux\Automne                /
//                          2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFES /
//                          TO\UPSD\List\CLIOPCF8574.s51                      /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME CLIOPCF8574

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "near"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FUNC_ENTER_XDATA
        EXTERN ?FUNC_LEAVE_XDATA
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8

        PUBLIC ??CLIOPCF8574
        FUNCTION ??CLIOPCF8574,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 8, STACK
        PUBLIC ??CLIOPCF8574_1
        FUNCTION ??CLIOPCF8574_1,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 8, STACK
        PUBLIC ??Read
        FUNCTION ??Read,021203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ??Write
        FUNCTION ??Write,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC `??delete ~CLIOPCF8574`
        FUNCTION `??delete ~CLIOPCF8574`,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        PUBLIC `??new CLIOPCF8574`
        FUNCTION `??new CLIOPCF8574`,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC `??new CLIOPCF8574_1`
        FUNCTION `??new CLIOPCF8574_1`,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC `?~CLIOPCF8574`
        FUNCTION `?~CLIOPCF8574`,021203H
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:16, ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        EXTERN `??operator new`
        FUNCTION `??operator new`,010202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??CLI2CPort
        FUNCTION ??CLI2CPort,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN `?~CLI2CPort`
        FUNCTION `?~CLI2CPort`,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??LirePCF8574
        FUNCTION ??LirePCF8574,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??vI2CEcrireDonnee
        FUNCTION ??vI2CEcrireDonnee,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC


        RSEG NEAR_CODE:CODE:NOROOT(0)
// __near_func __xdata_reentrant CLIOPCF8574 &CLIOPCF8574::new CLIOPCF8574()
`??new CLIOPCF8574`:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function `??new CLIOPCF8574`
        CODE
        FUNCALL `??new CLIOPCF8574`, `??operator new`
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL `??new CLIOPCF8574`, ??CLIOPCF8574
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    ?V0 + 0
        CFI V0 Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        PUSH    ?V0 + 1
        CFI V1 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function operator new(unsigned int)
        MOV     R2,#0x4
        MOV     R3,#0x0
        LCALL   `??operator new`
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,R0
        ORL     A,R1
        JZ      `??new CLIOPCF8574_2`
        ; Setup parameters for call to function CLIOPCF8574::CLIOPCF8574()
        LCALL   ??CLIOPCF8574
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    `??new CLIOPCF8574_3`
`??new CLIOPCF8574_2`:
        MOV     R2,#0x0
        MOV     R3,#0x0
`??new CLIOPCF8574_3`:
        POP     ?V0 + 1
        CFI V1 SameValue
        CFI CFA_SP SP+-3
        POP     ?V0 + 0
        CFI V0 SameValue
        CFI CFA_SP SP+-2
        RET
        CFI EndBlock cfiBlock0

        RSEG NEAR_CODE:CODE:NOROOT(0)
// __near_func __xdata_reentrant CLIOPCF8574 &CLIOPCF8574::new CLIOPCF8574(UC)
`??new CLIOPCF8574_1`:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function `??new CLIOPCF8574_1`
        CODE
        FUNCALL `??new CLIOPCF8574_1`, `??operator new`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL `??new CLIOPCF8574_1`, ??CLIOPCF8574_1
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?FUNC_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function operator new(unsigned int)
        MOV     R2,#0x4
        MOV     R3,#0x0
        LCALL   `??operator new`
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,R0
        ORL     A,R1
        JZ      `??new CLIOPCF8574_4`
        ; Setup parameters for call to function CLIOPCF8574::CLIOPCF8574(UC)
        MOV     A,R6
        MOV     R1,A
        LCALL   ??CLIOPCF8574_1
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    `??new CLIOPCF8574_5`
`??new CLIOPCF8574_4`:
        MOV     R2,#0x0
        MOV     R3,#0x0
`??new CLIOPCF8574_5`:
        MOV     R7,#0x2
        LJMP    ?FUNC_LEAVE_XDATA
        CFI EndBlock cfiBlock1

        RSEG NEAR_CODE:CODE:NOROOT(0)
// __near_func __xdata_reentrant void CLIOPCF8574::delete ~CLIOPCF8574(CLIOPCF8574 *)
`??delete ~CLIOPCF8574`:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function `??delete ~CLIOPCF8574`
        CODE
        FUNCALL `??delete ~CLIOPCF8574`, `?~CLIOPCF8574`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL `??delete ~CLIOPCF8574`, `??operator delete`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 8)
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JZ      `??delete ~CLIOPCF8574_1`
        ; Setup parameters for call to function CLIOPCF8574::~CLIOPCF8574()
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `?~CLIOPCF8574`
        ; Setup parameters for call to function operator delete(void *)
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??operator delete`
`??delete ~CLIOPCF8574_1`:
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA
        CFI EndBlock cfiBlock2
// C:\Synchro\Dropbox\Travaux\Automne 2014\ProjetSession5\ProgrammeDuFESTO\ProgrammeFESTO\CLIOPCF8574.cpp
//    1 // ************************** FICHIER: CLIOPCF8574.CPP ***********************
//    2 //
//    3 // Fonctions pour carte d'extension I/O I2C PCF8574
//    4 //
//    5 // Application realisee avec IAR C++ 8.10
//    6 //
//    7 // LIMITATION DU COMPILATEUR:
//    8 // Impossible de faire de l'heritage multiple.
//    9 //
//   10 // Note: on peut utiliser XAR pour creer des librairies.
//   11 // On peut mettre les librairies dans le projets et Exclure de la compilation
//   12 // les modules qui sont contenus dans la librairie.
//   13 //
//   14 // Pour Windows 7 on utilise la VMware pour programmer le upsd 3254A avec CAPS.
//   15 //
//   16 // AUTEUR : LOUIS-NORMAND ANG HOULE
//   17 // DATE CREATION : 2014/11/14 VERSION: 1.0
//   18 // DATE MODIFICATION: ****-**-**
//   19 //
//   20 // *****************************************************************************
//   21 #include "CLIOPCF8574.h"
//   22 
//   23 //******************************************************************************
//   24 //                            LE CONSTRUCTEUR PAR DEFAUT
//   25 // *****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   26 CLIOPCF8574 :: CLIOPCF8574(void)
??CLIOPCF8574:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function ??CLIOPCF8574
        CODE
        FUNCALL ??CLIOPCF8574, ??CLI2CPort
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 8)
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   27 {
        ; Setup parameters for call to function CLI2CPort::CLI2CPort()
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??CLI2CPort
//   28  ucAdresseIOPCF = ADRIOPCF;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x40
        MOVX    @DPTR,A
//   29 }
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA
        CFI EndBlock cfiBlock3
//   30 
//   31 //******************************************************************************
//   32 //                            LE CONSTRUCTEUR INITIALISATEUR
//   33 // *****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   34 CLIOPCF8574 :: CLIOPCF8574(UC ucParametre)
??CLIOPCF8574_1:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function ??CLIOPCF8574_1
        CODE
        FUNCALL ??CLIOPCF8574_1, ??CLI2CPort
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 8)
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R1
//   35 {
        ; Setup parameters for call to function CLI2CPort::CLI2CPort()
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??CLI2CPort
//   36  ucAdresseIOPCF = ucParametre; 
        MOV     A,?V0 + 0
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
//   37 }
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA
        CFI EndBlock cfiBlock4
//   38 
//   39 // *****************************************************************************
//   40 //                            LE DESTRUCTEUR
//   41 // *****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   42 CLIOPCF8574 :: ~CLIOPCF8574(void)
`?~CLIOPCF8574`:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function `?~CLIOPCF8574`
        CODE
//   43 {
        FUNCALL `?~CLIOPCF8574`, `?~CLI2CPort`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        ; Saved register size: 0
        ; Auto size: 0
//   44    
//   45 }
        ; Setup parameters for call to function CLI2CPort::~CLI2CPort()
        LJMP    `?~CLI2CPort`
        CFI EndBlock cfiBlock5
//   46 
//   47 ///////////////////////////////////////////////////////////////////////////////
//   48 // UC CLIOPCF8574 :: ucLireIOPCF(void)
//   49 ///////////////////////////////////////////////////////////////////////////////
//   50 //
//   51 // Description: Lecture de l'etat des bits du port
//   52 //
//   53 // Parametres d'entrees: null
//   54 //
//   55 // Parametres de sortie 
//   56 // - unIOPCF.ucOctet: Etat des bits du port
//   57 //
//   58 // Appel de la fonction: CLIOPCF8574.ucLireIOPCF();
//   59 //
//   60 // Cree le 2014/04/16 par Louis-Normand Ang Houle
//   61 //
//   62 // Modifications:
//   63 // -
//   64 //
//   65 ///////////////////////////////////////////////////////////////////////////////

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   66 UC CLIOPCF8574 :: Read(void)
??Read:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function ??Read
        CODE
//   67 {
        FUNCALL ??Read, ??LirePCF8574
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        ; Saved register size: 0
        ; Auto size: 0
//   68 return(LirePCF8574());
        ; Setup parameters for call to function CLI2CPort::LirePCF8574()
        LJMP    ??LirePCF8574
        CFI EndBlock cfiBlock6
//   69 }
//   70 
//   71 ///////////////////////////////////////////////////////////////////////////////
//   72 // void CLIOPCF8574 :: vEcrireIOPCF(UC ucDonnee)
//   73 ///////////////////////////////////////////////////////////////////////////////
//   74 //
//   75 // Description: Modifie l'etat des bits du port
//   76 //
//   77 // Parametres d'entrees 
//   78 // - ucDonnee: 
//   79 //
//   80 // Parametres de sortie: null
//   81 //
//   82 // Appel de la fonction: CLIOPCF8574.vEcrireIOPCF(UCDONNEE);
//   83 //
//   84 // Cree le 2014/04/16 par Louis-Normand Ang Houle
//   85 //
//   86 // Modifications:
//   87 // -
//   88 //
//   89 ///////////////////////////////////////////////////////////////////////////////

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   90 void CLIOPCF8574 :: Write(UC ucDonnee)
??Write:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function ??Write
        CODE
//   91  {
        FUNCALL ??Write, ??vI2CEcrireDonnee
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?FUNC_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     R6,A
//   92    UC uctDonnee[1];
//   93    uctDonnee   [0] = ucDonnee;  
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//   94    
//   95    vI2CEcrireDonnee(ucAdresseIOPCF, NULL, PASADR, uctDonnee, 1);   
        ; Setup parameters for call to function CLI2CPort::vI2CEcrireDonnee(UC, USI, UC, UC *, UC)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??vI2CEcrireDonnee
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//   96  }
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 9)
        MOV     R7,#0x2
        LJMP    ?FUNC_LEAVE_XDATA
        CFI EndBlock cfiBlock7

        END
//   97 //LinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxLinuxTUX
// 
// 297 bytes in segment NEAR_CODE
// 
// 297 bytes of CODE memory
//
//Errors: none
//Warnings: none
