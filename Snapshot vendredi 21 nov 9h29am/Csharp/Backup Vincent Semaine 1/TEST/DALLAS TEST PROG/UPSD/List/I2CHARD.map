                              - Cross-reference -                      Page    1

################################################################################
#                                                                              #
#      IAR Universal Linker V5.0.2.5/W32                                       #
#                                                                              #
#           Link time     =  27/Oct/2014  18:31:54                             #
#           Target CPU    =  x51                                               #
#           List file     =  "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\List\I2CHARD.map"   #
#           Output file 1 =  "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Exe\I2CHARD.Hex"    #
#                            Format: intel-standard                            #
#           Command line  =  -D_NR_OF_BANKS=0 -D_CODEBANK_END=0                #
#                            -D_CODEBANK_START=0                               #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.0\8051\CONFIG\"                         #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CANBUS.r51"     #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLClavier.r51"  #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLCommunicUpsdP #
#                            ort1.r51"                                         #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLEcran.r51"    #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLI2CBase.r51"  #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLI2CHard.r51"  #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLI2CPort.r51"  #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLSPI.r51"      #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLSortieLatch.r #
#                            51"                                               #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\CLinOutBase.r51 #
#                            "                                                 #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\NomDuProjet.r51 #
#                            "                                                 #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\Optik.r51"      #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Obj\Timer0.r51"     #
#                            -e_ScanfSmall=_Scanf -o                           #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\Exe\I2CHARD.Hex"    #
#                            -Fintel-standard -B -l                            #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\UPSD\List\I2CHARD.map"   #
#                            -xmsnio -p80                                      #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.0\8051\LIB\"                            #
#                            "-IC:\Synchro\Dropbox\Travaux\Automne 2014\Foncti #
#                            ons\Projet Accumulatif IAR\"                      #
#                            -f                                                #
#                            "C:\Synchro\Dropbox\Travaux\Automne 2014\Fonction #
#                            s\Projet Accumulatif IAR\_Ver810_lnk51ew_uPSD3254 #
#                            A.xcl"                                            #
#                            (-D_IDATA0_START=0x00 -D_IDATA0_END=0xFF          #
#                            -D_PDATA0_START=0x0F01 -D_PDATA0_END=0x0FFF       #
#                            -D_IXDATA0_START=0x0001 -D_IXDATA0_END=0x0FFF     #
#                            -D_XDATA0_START=0x0001 -D_XDATA0_END=0x0FFFF      #
#                            -D_CODE0_START=0x0000 -D_CODE0_END=0xFFFF         #
#                            -D?REGISTER_BANK=0x0 -D_REGISTER_BANK_START=0x0   #
#                            -D?PBANK_NUMBER=0x00 -D_BREG_START=0x00           #
#                            -D?VB=0x20 -D?ESP=0x9B -Z(BIT)BREG=_BREG_START    #
#                            -Z(BIT)BIT_N=0-7F                                 #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA0_END   #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA0_END  #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
                              - Cross-reference -                      Page    2

#                            -Z(CODE)CSTART=_CODE0_START-_CODE0_END            #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE0_START-_CODE0_END       #
#                            -Z(CODE)HUGE_ID=_CODE0_START-_CODE0_END           #
#                            -Z(CODE)RCODE,DIFUNCT=_CODE0_START-_CODE0_END     #
#                            -P(CODE)CODE_C,CODE_N,NEAR_CODE=_CODE0_START-_COD #
#                            E0_END                                            #
#                            -Z(CODE)CHECKSUM#_CODE0_END                       #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA0_START-_PDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)PDATA_N=_PDATA0_START-_PDATA0_END        #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA0_START-_ #
#                            PDATA0_END                                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA0_START-_ #
#                            XDATA0_END                                        #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA0_START-_IXDATA #
#                            0_END                                             #
#                            -P(XDATA)IXDATA_N=_IXDATA0_START-_IXDATA0_END     #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA0_START-_XDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)XDATA_N=_XDATA0_START-_XDATA0_END        #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA0_STAR #
#                            T-_XDATA0_END                                     #
#                            -Z(CONST)XDATA_ROM_C=_XDATA0_START-_XDATA0_END    #
#                            -Z(CODE)FAR22_ID=[_CODE0_START-_CODE0_END]/10000  #
#                            -Z(CODE)FAR_ID=[_CODE0_START-_CODE0_END]/10000    #
#                            -cx51) -D_NR_OF_VIRTUAL_REGISTERS=8               #
#                            -D?PBANK=0xA0 -s __program_start                  #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\8051\LIB\DLIB\dl-pli-nlxd-1e16x01.r51"  #
#                            -D_IDATA_STACK_SIZE=0x40                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0xEFF                         #
#                            -D_XDATA_HEAP_SIZE=0xFFF -D_FAR_HEAP_SIZE=0xFFF   #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                            -D_FAR22_HEAP_SIZE=0xFFF                          #
#                                                                              #
#                           Copyright (C) 1987-2010 IAR Systems AB.            #
################################################################################

                              - Cross-reference -                      Page    3



                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000009F  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary          = DLib
  __calling_convention     = xdata_reentrant
  __code_model             = near
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FAR22_HEAP_SIZE        00000FFF 
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        00000FFF 
           _XDATA_STACK_SIZE       00000EFF 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       00000040 
           ?PBANK                  000000A0 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           ?ESP                    0000009B 
           ?VB                     00000020        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK_NUMBER           00000000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _CODE0_END              0000FFFF 
           _CODE0_START            00000000 
           _XDATA0_END             0000FFFF 
           _XDATA0_START           00000001 
           _IXDATA0_END            00000FFF 
           _IXDATA0_START          00000001 
           _PDATA0_END             00000FFF 
           _PDATA0_START           00000F01 
           _IDATA0_END             000000FF 
                              - Cross-reference -                      Page    4

           _IDATA0_START           00000000 
           _CODEBANK_START         00000000 
           _CODEBANK_END           00000000 
           _NR_OF_BANKS            00000000 
    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CANBUS.r51
  PROGRAM MODULE, NAME : CANBUS

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::new CanBus()    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::new CanBus(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::delete ~CanBus(CanBus *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000441 - 0000048F (0x4f bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::CanBus()        00000441        __sti__routine() (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::CanBus(UC)      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000490 - 00000492 (0x3 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::~CanBus()       00000490        Segment part 56 (NomDuProjet)
               calls direct, is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000493 - 000005B4 (0x122 bytes), align: 0
  Segment part 20.            Intra module refs:   CanBus::CanBus()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::MCP24515_init()
                                   00000493 
               calls direct
               XSTACK = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000005B5 - 000005D8 (0x24 bytes), align: 0
  Segment part 21.            Intra module refs:   CanBus::ChoisirIdentifiantTX0(int)
                                                   CanBus::MCP24515_init()
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page    5

           =====                   =======         ======
           CanBus::EcrireRegistreMCP2515(UC, UC)
                                   000005B5 
               calls direct
               XSTACK = 0000000F ( 00000009 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000005D9 - 00000617 (0x3f bytes), align: 0
  Segment part 22.            Intra module refs:   CanBus::CanBus()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::ChoisirIdentifiantTX0(int)
                                   000005D9 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::AcquitterInterruptionsMCP2515()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::SendMCP2515(UC const *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::Longueur(UC const *)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000618 - 00000646 (0x2f bytes), align: 0
  Segment part 26.            Intra module refs:   CanBus::MCP24515_init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CanBus::Delai(unsigned long)
                                   00000618 
               XSTACK = 00000013 ( 0000000F )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F42 - 00000F45 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   CanBus::MCP24515_init()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          00000F42 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000B1 - 000000B4 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   __Constant_3e8
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page    6

XDATA_I
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F46 - 00000F49 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CanBus::Delai(unsigned long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            00000F46 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000B5 - 000000B8 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F4A - 00000F4D (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::Delai(unsigned long)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            00000F4A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000B9 - 000000BC (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   __Constant_1

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLClavier.r51
  PROGRAM MODULE, NAME : CLClavier

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   CLClavier::CLClavier()
                                                   CLClavier::vKeyboardInterrupt()
                                                   CLCommunic::vInitBaudRate(UI) (CLCommunicUpsdPort1)
                                                   CLCommunic::vInteruptSerial() (CLCommunicUpsdPort1)
                                                   Timer0::InitTimer0() (Timer0)
                                                   main (NomDuProjet)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IE                   000000A8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IE                      000000A8 
           IE_bit                  000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   CLClavier::CLClavier()
                                                   CLCommunic::vInitBaudRate(UI) (CLCommunicUpsdPort1)
                                                   Timer0::InitTimer0() (Timer0)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCON                    00000088 
           TCON_bit                00000088 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F00 - 00000F00 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   CLClavier::vKeyboardInterrupt()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::ucEtatClavier
                                   00000F00 
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page    7

NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::new CLClavier()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::delete ~CLClavier(CLClavier *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00001262 - 00001266 (0x5 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::CLClavier()
                                   00001262        __sti__routine() (NomDuProjet)
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00001267 - 00001267 (0x1 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::~CLClavier()
                                   00001267        Segment part 40 (NomDuProjet)
               is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::ucBoutonAppuye()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::ucLireClavier()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00001268 - 00001282 (0x1b bytes), align: 0
  Segment part 18.            Intra module refs:   CLClavier::vKeyboardInterrupt()::??INTVEC 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::vKeyboardInterrupt()
                                   00001268 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000005 (0x6 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLClavier::vKeyboardInterrupt()::??INTVEC 3
                                   00000003 
    -------------------------------------------------------------------------
ISTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page    8

XSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 9. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLCommunicUpsdPort1.r51
  PROGRAM MODULE, NAME : CLCommunicUpsdPort1

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from CLClavier
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IE                   
           LOCAL                   ADDRESS         
           =====                   =======         
           IE                      000000A8 
           IE_bit                  000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000099 - 00000099 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   CLCommunic::Send(UC)
                                                   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SBUF                    00000099 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000098 - 00000098 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   CLCommunic::Send(UC)
                                                   CLCommunic::vInitBaudRate(UI)
                                                   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SCON                 00000098 
           LOCAL                   ADDRESS         
           =====                   =======         
           SCON                    00000098 
           SCON_bit                00000098 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   CLCommunic::vInitBaudRate(UI)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PCON                 00000087 
           LOCAL                   ADDRESS         
           =====                   =======         
           PCON                    00000087 
           PCON_bit                00000087 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from CLClavier
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCON                    00000088 
           TCON_bit                00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008D - 0000008D (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   CLCommunic::vInitBaudRate(UI)
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page    9

           =====                   =======         ======
           TH1                     0000008D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   CLCommunic::vInitBaudRate(UI)
                                                   Timer0::InitTimer0() (Timer0)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TMOD                 00000089 
           LOCAL                   ADDRESS         
           =====                   =======         
           TMOD                    00000089 
           TMOD_bit                00000089 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F01 - 00000F01 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucEtatTrame
                                   00000F01 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F02 - 00000F02 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   CLCommunic::ucLireNbCaractRecu()
                                                   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucNbCaractRecu
                                   00000F02 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F4E - 00000F4E (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   CLCommunic::CLCommunic()
                                                   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucLongueurTrame
                                   00000F4E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F4F - 00000F4F (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   CLCommunic::CLCommunic()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucLongueurTampon
                                   00000F4F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F03 - 00000F03 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucCaractereRecu
                                   00000F03 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F04 - 00000F04 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucEtatReception
                                   00000F04 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F05 - 00000F06 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   CLCommunic::CLCommunic()
                                                   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::cpDebutTrame
                                   00000F05 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F07 - 00000F08 (0x2 bytes), align: 0
  Segment part 23.            Intra module refs:   CLCommunic::CLCommunic()
                                                   CLCommunic::vInteruptSerial()
                              - Cross-reference -                      Page   10

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::cpFinTrame
                                   00000F07 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F09 - 00000F0A (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   CLCommunic::CLCommunic()
                                                   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::cptrEcriture
                                   00000F09 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F0B - 00000F0C (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   CLCommunic::CLCommunic()
                                                   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::cptrLecture
                                   00000F0B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F0D - 00000F0E (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   CLCommunic::CLCommunic()
                                                   CLCommunic::~CLCommunic()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::cTabCaractereRecu
                                   00000F0D 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::new CLCommunic()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::new CLCommunic(UC, UC, UI)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::delete ~CLCommunic(CLCommunic *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000647 - 000006C2 (0x7c bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::CLCommunic()
                                   00000647        __sti__routine() (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::CLCommunic(UC, UC, UI)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   11

<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000006C3 - 000006EC (0x2a bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::~CLCommunic()
                                   000006C3        Segment part 20 (NomDuProjet)
               calls direct, is indirectly called
               XSTACK = 00000008 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucInitLongTrame(UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucValideTrame()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000006ED - 000006F5 (0x9 bytes), align: 0
  Segment part 35.            Intra module refs:   CLCommunic::SendString(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::Send(UC)    000006ED 
               XSTACK = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000006F6 - 00000716 (0x21 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::SendString(char const *)
                                   000006F6        main (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000717 - 00000724 (0xe bytes), align: 0
  Segment part 37.            Intra module refs:   CLCommunic::vInteruptSerial()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucLireNbCaractRecu()
                                   00000717 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucLireEtatTrame()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucpLireTrame()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000725 - 0000076E (0x4a bytes), align: 0
  Segment part 40.            Intra module refs:   CLCommunic::CLCommunic()
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   12

           =====                   =======         ======
           CLCommunic::vInitBaudRate(UI)
                                   00000725 
               XSTACK = 0000000D ( 00000009 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000076F - 0000083A (0xcc bytes), align: 0
  Segment part 41.            Intra module refs:   CLCommunic::vInteruptSerial()::??INTVEC 35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::vInteruptSerial()
                                   0000076F 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::SendNumber(UI)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::GetChar()   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::ucLireEtatReception()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000025 (0x26 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLCommunic::vInteruptSerial()::??INTVEC 35
                                   00000023 
    -------------------------------------------------------------------------
ISTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   CLCommunic::ucLongueurTrame
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   CLCommunic::ucLongueurTampon

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLEcran.r51
  PROGRAM MODULE, NAME : CLEcran

                              - Cross-reference -                      Page   13

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::new CLEcran()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::new CLEcran(USI)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::delete ~CLEcran(CLEcran *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000083B - 0000085E (0x24 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::CLEcran()      0000083B        __sti__routine() (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::CLEcran(USI)   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000085F - 00000861 (0x3 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::~CLEcran()     0000085F        Segment part 32 (NomDuProjet)
               calls direct, is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000862 - 00000877 (0x16 bytes), align: 0
  Segment part 16.            Intra module refs:   CLEcran::vLCDInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vDelaiLCD(USI)
                                   00000862 
               XSTACK = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000878 - 0000089F (0x28 bytes), align: 0
  Segment part 17.            Intra module refs:   CLEcran::Lettre(char)
                                                   CLEcran::vLCDClr()
                                                   CLEcran::vLCDCursor(UC, UC)
                                                   CLEcran::vLCDInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDBusy()     00000878 
               calls direct
               XSTACK = 0000000A ( 00000008 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000008A0 - 000008C6 (0x27 bytes), align: 0
                              - Cross-reference -                      Page   14

  Segment part 18.            Intra module refs:   CLEcran::~CLEcran()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDClr()      000008A0 
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000008C7 - 00000974 (0xae bytes), align: 0
  Segment part 19.            Intra module refs:   CLEcran::CLEcran()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDInit()     000008C7 
               calls direct
               XSTACK = 00000008 ( 00000009 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000975 - 000009D6 (0x62 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDCursor(UC, UC)
                                   00000975        main (NomDuProjet)
               calls direct
               XSTACK = 00000008 ( 0000000A )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::Lettre(UC)     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000009D7 - 00000A03 (0x2d bytes), align: 0
  Segment part 22.            Intra module refs:   CLEcran::String(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::Lettre(char)   000009D7        main (NomDuProjet)
               calls direct
               XSTACK = 0000001D ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vHexToASCII(UC, UC *, UC *)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vHexToASCII(USI, UC *, UC *, UC *, UC *)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayHexCarac(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayHexCarac(USI)
                                   
               calls direct, is not allocated
               not allocated function
                              - Cross-reference -                      Page   15

    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::String(UC const *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000A04 - 00000A24 (0x21 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::String(char const *)
                                   00000A04        main (NomDuProjet)
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayScreen(UC const *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayEtatPort(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLEcran::vLCDDisplayFloat(float)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 6. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_42c80000     
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   16

XDATA_ID
  Segment part 9. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLI2CBase.r51
  PROGRAM MODULE, NAME : CLI2CBase

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B0 - 000000B0 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P3                   000000B0 
           LOCAL                   ADDRESS         
           =====                   =======         
           P3                      000000B0 
           P3_bit                  000000B0 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::new CLI2CBase()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::new CLI2CBase(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::delete ~CLI2CBase(CLI2CBase *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012B0 - 000012BF (0x10 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::CLI2CBase()
                                   000012B0        CLI2CPort::CLI2CPort() (CLI2CPort)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::CLI2CBase(UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012C0 - 000012C0 (0x1 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::~CLI2CBase()
                                   000012C0        CLI2CPort::~CLI2CPort() (CLI2CPort)
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   17

           =====                   =======         ======
           CLI2CBase::vI2CStart()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::vI2CStop()   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::ucI2CLireBit()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::vI2CEcrireBit(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::ucI2CLireOctet(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::ucI2CEcrireOctet(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CBase::vDelaiI2C()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLI2CHard.r51
  PROGRAM MODULE, NAME : CLI2CHard
                              - Cross-reference -                      Page   18


  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   CLI2CHARD::vInitUpsd()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEA                  000000A7 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEA                     000000A7 
           IEA_bit                 000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B7 - 000000B7 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   CLI2CHARD::vInitUpsd()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IPA                  000000B7 
           LOCAL                   ADDRESS         
           =====                   =======         
           IPA                     000000B7 
           IPA_bit                 000000B7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DD - 000000DD (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   CLI2CHARD::vIntrI2C()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_S2STA                000000DD 
           LOCAL                   ADDRESS         
           =====                   =======         
           S2STA                   000000DD 
           S2STA_bit               000000DD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DC - 000000DC (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   CLI2CHARD::vInitUpsd()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_S2CON                000000DC 
           LOCAL                   ADDRESS         
           =====                   =======         
           S2CON                   000000DC 
           S2CON_bit               000000DC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000093 - 00000093 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   CLI2CHARD::vInitUpsd()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P3SFS                00000093 
           LOCAL                   ADDRESS         
           =====                   =======         
           P3SFS                   00000093 
           P3SFS_bit               00000093 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DE - 000000DE (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   CLI2CHARD::vIntrI2C()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S2DAT                   000000DE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F0F - 00000F0F (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   CLI2CHARD::vIntrI2C()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::bus_lost_flag
                                   00000F0F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F10 - 00000F10 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   CLI2CHARD::vInitUpsd()
                                                   CLI2CHARD::vIntrI2C()
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   19

           =====                   =======         ======
           CLI2CHARD::i2cwait      00000F10 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F11 - 00000F11 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   CLI2CHARD::vIntrI2C()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::i2c_master   00000F11 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F12 - 00000F12 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   CLI2CHARD::vIntrI2C()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::i2c_xmitr    00000F12 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F13 - 00000F13 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   CLI2CHARD::vIntrI2C()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::slave_nack_flag
                                   00000F13 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::i            
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::i2c_xmit_buf
                                   
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::i2c_rcv_buf
                                   
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::dummybyte    
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::i2c_timeout
                                   
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::new CLI2CHARD()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::delete ~CLI2CHARD(CLI2CHARD *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000010BC - 000010D3 (0x18 bytes), align: 0
                              - Cross-reference -                      Page   20

  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::CLI2CHARD()
                                   000010BC        __sti__routine() (NomDuProjet)
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000010D4 - 000010D4 (0x1 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::~CLI2CHARD()
                                   000010D4        Segment part 28 (NomDuProjet)
               is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000010D5 - 000010FE (0x2a bytes), align: 0
  Segment part 27.            Intra module refs:   CLI2CHARD::CLI2CHARD()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::vInitUpsd()
                                   000010D5 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::vI2C_WaitInterrupt()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000010FF - 0000117E (0x80 bytes), align: 0
  Segment part 29.            Intra module refs:   CLI2CHARD::vIntrI2C()::??INTVEC 67
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::vIntrI2C()   000010FF 
               interrupt function
               ISTACK = 00000000 ( 00000007 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::vEcritOctet(UC, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::ucLitOctet(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::vDelay(UINT16)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000045 (0x46 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CHARD::vIntrI2C()::??INTVEC 67
                              - Cross-reference -                      Page   21

                                   00000043 
    -------------------------------------------------------------------------
ISTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 12. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLI2CPort.r51
  PROGRAM MODULE, NAME : CLI2CPort

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::new CLI2CPort()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::delete ~CLI2CPort(CLI2CPort *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00001283 - 0000129A (0x18 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::CLI2CPort()
                                   00001283        __sti__routine() (NomDuProjet)
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000129B - 0000129D (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::~CLI2CPort()
                                   0000129B        Segment part 24 (NomDuProjet)
               calls direct, is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::ucI2CLireDonnee(UC, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::vI2CLireDonnee(UC, USI, UC, UC *, UC)
                                   
               calls direct, is not allocated
                              - Cross-reference -                      Page   22

               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::vI2CEcrireDonnee(UC, UC, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLI2CPort::vI2CEcrireDonnee(UC, USI, UC, UC *, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLSPI.r51
  PROGRAM MODULE, NAME : CLSPI

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   CLSPI::CLSPI()
                                                   CLSPI::Write(UC, UC)
                                                   CLSPI::WriteMPC2514(UC, UC, UC, UC)
                                                   Encodeur::Encodeur() (Optik)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
           P1_bit                  00000090 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::new CLSPI()      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::new CLSPI(UC)    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::delete ~CLSPI(CLSPI *)
                                   
                              - Cross-reference -                      Page   23

               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000BDF - 00000BE7 (0x9 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::CLSPI()          00000BDF        CanBus::CanBus() (CANBUS)
                                                   __sti__routine() (NomDuProjet)
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::CLSPI(UC)        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000BE8 - 00000BE8 (0x1 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::~CLSPI()         00000BE8        CanBus::CanBus() (CANBUS)
                                                   CanBus::~CanBus() (CANBUS)
                                                   Segment part 52 (NomDuProjet)
               is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000BE9 - 00000C99 (0xb1 bytes), align: 0
  Segment part 18.            Intra module refs:   CLSPI::WriteMPC2514(UC, UC, UC, UC)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::Write(UC, UC)    00000BE9 
               XSTACK = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::Write16(UI, UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::Direction(UC)    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::WriteMPC(UC)     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::ReadMPC()        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::WritePOT(UC)     
               calls direct, is not allocated
               not allocated function
                              - Cross-reference -                      Page   24

    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::WriteDAC(UC, int)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000C9A - 00000D26 (0x8d bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::WriteMPC2514(UC, UC, UC, UC)
                                   00000C9A        CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
               calls direct
               XSTACK = 00000001 ( 00000012 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000D27 - 00000D55 (0x2f bytes), align: 0
  Segment part 26.            Intra module refs:   CLSPI::WriteMPC2514(UC, UC, UC, UC)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLSPI::Delai(unsigned long)
                                   00000D27 
               XSTACK = 00000012 ( 0000000F )
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 8. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 10. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F14 - 00000F16 (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   CLSPI::WriteMPC2514(UC, UC, UC, UC)

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLSortieLatch.r51
  PROGRAM MODULE, NAME : CLSortieLatch

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from CLI2CBase
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   25

           =====                   =======         ======
           _A_P3                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P3                      000000B0 
           P3_bit                  000000B0 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::new DAC_ADC()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::new DAC_ADC(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::delete ~DAC_ADC(DAC_ADC *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012E4 - 000012E4 (0x1 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::DAC_ADC()      000012E4        __sti__routine() (NomDuProjet)
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::DAC_ADC(UC)    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012E5 - 000012E5 (0x1 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::~DAC_ADC()     000012E5        Segment part 44 (NomDuProjet)
               is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::DAC(UC, UC)    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DAC_ADC::ADC(UC)        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   26

PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\CLinOutBase.r51
  PROGRAM MODULE, NAME : CLinOutBase

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000011BB - 000011C9 (0xf bytes), align: 0
  Segment part 6.             Intra module refs:   CLInOutBase::vOut(USI, UC)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::vOutPort(USI, UC)
                                   000011BB 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000011CA - 000011DA (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   CLInOutBase::ucIn(USI)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::ucInPort(USI)
                                   000011CA 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000011DB - 000011E7 (0xd bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::vOut(USI, UC)
                                   000011DB        CLEcran::Lettre(char) (CLEcran)
                                                   CLEcran::vLCDClr() (CLEcran)
                                                   CLEcran::vLCDCursor(UC, UC) (CLEcran)
                                                   CLEcran::vLCDInit() (CLEcran)
               calls direct
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::vOut(USI, USI, UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000011E8 - 000011F6 (0xf bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::ucIn(USI)
                                   000011E8        CLEcran::vLCDBusy() (CLEcran)
               calls direct
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLInOutBase::ucIn(USI, UC)
                                   
               calls direct, is not allocated
                              - Cross-reference -                      Page   27

               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\NomDuProjet.r51
  PROGRAM MODULE, NAME : NomDuProjet

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from CLClavier
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IE                   
           LOCAL                   ADDRESS         
           =====                   =======         
           IE                      000000A8 
           IE_bit                  000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDKEY                   000000AE 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F50 - 00000F54 (0x5 bytes), align: 0
  Segment part 8.             Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F55 - 00000F5E (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F5F - 00000F68 (0xa bytes), align: 0
  Segment part 12.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F69 - 00000F72 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F73 - 00000F7C (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F7D - 00000F82 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000FBB - 00001046 (0x8c bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 58
           LOCAL                   ADDRESS         
           =====                   =======         
           __sti__routine()        00000FBB 
               calls direct
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F17 - 00000F17 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 20
                                                   __sti__routine()
                                                   main
                              - Cross-reference -                      Page   28

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Serial                  00000F17 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F18 - 00000F19 (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F83 - 00000F88 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F1A - 00000F1B (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 24
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2CSoft                 00000F1A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F1C - 00000F1D (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F89 - 00000F8E (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F1E - 00000F1F (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 28
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2CHard                 00000F1E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F20 - 00000F21 (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F8F - 00000F94 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F22 - 00000F23 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 32
                                                   __sti__routine()
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD                     00000F22 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F24 - 00000F25 (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F95 - 00000F9A (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F26 - 00000F26 (0x1 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 36
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Optik                   00000F26 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F27 - 00000F28 (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F9B - 00000FA0 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   29

XDATA_Z
  Relative segment, address: XDATA 00000F29 - 00000F29 (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 40
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Keyboard                00000F29 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F2A - 00000F2B (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FA1 - 00000FA6 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F2C - 00000F2C (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 44
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Convert                 00000F2C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F2D - 00000F2E (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 44
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FA7 - 00000FAC (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F2F - 00000F2F (0x1 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 48
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer                   00000F2F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F30 - 00000F31 (0x2 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FAD - 00000FB2 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F32 - 00000F32 (0x1 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 52
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI                     00000F32 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F33 - 00000F34 (0x2 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FB3 - 00000FB8 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   __sti__routine()
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F35 - 00000F35 (0x1 bytes), align: 0
  Segment part 54.            Intra module refs:   Segment part 56
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CAN                     00000F35 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F36 - 00000F37 (0x2 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 56
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00001047 - 000010BB (0x75 bytes), align: 0
                              - Cross-reference -                      Page   30

  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00001047        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000BF - 000000C3 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000C4 - 000000CD (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000CE - 000000D7 (0xa bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000D8 - 000000E1 (0xa bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000E2 - 000000EB (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000EC - 000000F1 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000F2 - 000000F7 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000F8 - 000000FD (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000FE - 00000103 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000104 - 00000109 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000010A - 0000010F (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000110 - 00000115 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 43
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000116 - 0000011B (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000011C - 00000121 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   31

XDATA_ID
  Relative segment, address: CODE 00000122 - 00000127 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 55
    -------------------------------------------------------------------------
DIFUNCT
  Relative segment, address: CODE 0000043F - 00000440 (0x2 bytes), align: 0
  Segment part 58. ROOT.

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\Optik.r51
  PROGRAM MODULE, NAME : Optik

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from CLSPI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
           P1_bit                  00000090 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FB9 - 00000FB9 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   Encodeur::Encodeur()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::LastState     00000FB9 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::new Encodeur()
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::new Encodeur(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::delete ~Encodeur(Encodeur *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000129E - 000012AE (0x11 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::Encodeur()    0000129E        __sti__routine() (NomDuProjet)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::Encodeur(UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012AF - 000012AF (0x1 bytes), align: 0
                              - Cross-reference -                      Page   32

  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::~Encodeur()   000012AF        Segment part 36 (NomDuProjet)
               is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Encodeur::LogicAnalyser()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000128 - 00000128 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   Encodeur::LastState

    *************************************************************************

  FILE NAME : C:\Synchro\Dropbox\Travaux\Automne 2014\Fonctions\Projet Accumulatif IAR\UPSD\Obj\Timer0.r51
  PROGRAM MODULE, NAME : Timer0

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from CLClavier
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IE                   
           LOCAL                   ADDRESS         
           =====                   =======         
           IE                      000000A8 
           IE_bit                  000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from CLSPI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
           P1_bit                  00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   Timer0::InitTimer0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TH0                     0000008C 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from CLClavier
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCON                    00000088 
           TCON_bit                00000088 
                              - Cross-reference -                      Page   33

    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from CLCommunicUpsdPort1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TMOD                 
           LOCAL                   ADDRESS         
           =====                   =======         
           TMOD                    00000089 
           TMOD_bit                00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Timer0::InitTimer0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TL0                     0000008A 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DutyCycle               
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::new Timer0()    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::new Timer0(UC)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::delete ~Timer0(Timer0 *)
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000122F - 00001246 (0x18 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::Timer0()        0000122F        __sti__routine() (NomDuProjet)
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::Timer0(UC)      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00001247 - 00001247 (0x1 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::~Timer0()       00001247        Segment part 48 (NomDuProjet)
               is indirectly called
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
                              - Cross-reference -                      Page   34

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::ClockGenerator()
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::DelayMs()       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00001248 - 00001261 (0x1a bytes), align: 0
  Segment part 21.            Intra module refs:   Timer0::Timer0()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::InitTimer0()    00001248 
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer0::CustomSpeed(UC)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 11. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.0\8051\LIB\DLIB\dl-pli-nlxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000046, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   00000046        exit (?exit)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000046 - 00000049 (0x4 bytes), align: 0
  Segment part 1.             Intra module refs:   __cstart_call_dtors
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000004A - 0000004C (0x3 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_dtors     0000004A        __record_needed_destruction (?cppinit)
    -------------------------------------------------------------------------
CSTART
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_closeall       
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   35

CSTART
  Relative segment, address: CODE 0000004D - 00000050 (0x4 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 1
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000051 - 00000053 (0x3 bytes), align: 0
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000054, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  00000054        Segment part 13 (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000054 - 0000005C (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   00000054        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
BDATA_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_Z          
    -------------------------------------------------------------------------
DATA_Z
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_Z           
    -------------------------------------------------------------------------
IDATA_Z
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_Z          
    -------------------------------------------------------------------------
PDATA_Z
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_Z          
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000005D - 0000006C (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          0000005D        CAN (NomDuProjet)
                                                   CLClavier::ucEtatClavier (CLClavier)
                                                   CLCommunic::cTabCaractereRecu (CLCommunicUpsdPort1)
                                                   CLCommunic::cpDebutTrame (CLCommunicUpsdPort1)
                                                   CLCommunic::cpFinTrame (CLCommunicUpsdPort1)
                                                   CLCommunic::cptrEcriture (CLCommunicUpsdPort1)
                                                   CLCommunic::cptrLecture (CLCommunicUpsdPort1)
                              - Cross-reference -                      Page   36

                                                   CLCommunic::ucCaractereRecu (CLCommunicUpsdPort1)
                                                   CLCommunic::ucEtatReception (CLCommunicUpsdPort1)
                                                   CLCommunic::ucEtatTrame (CLCommunicUpsdPort1)
                                                   CLCommunic::ucNbCaractRecu (CLCommunicUpsdPort1)
                                                   CLI2CHARD::bus_lost_flag (CLI2CHard)
                                                   CLI2CHARD::i2c_master (CLI2CHard)
                                                   CLI2CHARD::i2c_xmitr (CLI2CHard)
                                                   CLI2CHARD::i2cwait (CLI2CHard)
                                                   CLI2CHARD::slave_nack_flag (CLI2CHard)
                                                   Convert (NomDuProjet)
                                                   I2CHard (NomDuProjet)
                                                   I2CSoft (NomDuProjet)
                                                   Keyboard (NomDuProjet)
                                                   LCD (NomDuProjet)
                                                   Optik (NomDuProjet)
                                                   SPI (NomDuProjet)
                                                   Segment part 21 (NomDuProjet)
                                                   Segment part 25 (NomDuProjet)
                                                   Segment part 29 (NomDuProjet)
                                                   Segment part 33 (NomDuProjet)
                                                   Segment part 37 (NomDuProjet)
                                                   Segment part 41 (NomDuProjet)
                                                   Segment part 45 (NomDuProjet)
                                                   Segment part 49 (NomDuProjet)
                                                   Segment part 53 (NomDuProjet)
                                                   Segment part 57 (NomDuProjet)
                                                   Segment part 6 (?cppinit)
                                                   Segment part 6 (?xgetmemchunk)
                                                   Segment part 7 (CLSPI)
                                                   Serial (NomDuProjet)
                                                   Timer (NomDuProjet)
                                                   __iar_New_hand (?new)
                                                   __xdata_Aldata (?xxmemxmalloc)
    -------------------------------------------------------------------------
IXDATA_Z
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_Z         
    -------------------------------------------------------------------------
BDATA_I
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
BDATA_ID
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_I          
    -------------------------------------------------------------------------
DATA_I
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_I           
    -------------------------------------------------------------------------
IDATA_I
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
IDATA_ID
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_I          
                              - Cross-reference -                      Page   37

    -------------------------------------------------------------------------
PDATA_I
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
PDATA_ID
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_I          
    -------------------------------------------------------------------------
XDATA_I
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000006D - 00000095 (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          0000006D        CLCommunic::ucLongueurTampon (CLCommunicUpsdPort1)
                                                   CLCommunic::ucLongueurTrame (CLCommunicUpsdPort1)
                                                   Encodeur::LastState (Optik)
                                                   Segment part 10 (NomDuProjet)
                                                   Segment part 12 (NomDuProjet)
                                                   Segment part 14 (NomDuProjet)
                                                   Segment part 16 (NomDuProjet)
                                                   Segment part 19 (NomDuProjet)
                                                   Segment part 23 (NomDuProjet)
                                                   Segment part 27 (NomDuProjet)
                                                   Segment part 31 (NomDuProjet)
                                                   Segment part 35 (NomDuProjet)
                                                   Segment part 39 (NomDuProjet)
                                                   Segment part 43 (NomDuProjet)
                                                   Segment part 47 (NomDuProjet)
                                                   Segment part 51 (NomDuProjet)
                                                   Segment part 55 (NomDuProjet)
                                                   Segment part 8 (NomDuProjet)
                                                   __Constant_0 (CANBUS)
                                                   __Constant_1 (CANBUS)
                                                   __Constant_3e8 (CANBUS)
    -------------------------------------------------------------------------
IXDATA_I
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
IXDATA_ID
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000096, align: 0
  Segment part 32.            Intra module refs:   __low_level_init_call
    -------------------------------------------------------------------------
DIFUNCT
  Relative segment, address: CODE 00000441, align: 0
  Segment part 33. ROOT.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000096 - 00000098 (0x3 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      00000096        Segment part 58 (NomDuProjet)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000099 - 0000009E (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
                              - Cross-reference -                      Page   38

           ?call_main              00000099 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart_call_ctors

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012C1 - 000012CB (0xb bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_ctors     000012C1        ?cstart_call_ctors (?cmain)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DIFUNCT
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 000000C0, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           000000C0 
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSTACK_START           
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000001, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000001 
    -------------------------------------------------------------------------
EXT_STACK
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EXT_STACK_START        
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000009F - 000000A4 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
                              - Cross-reference -                      Page   39

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000009F        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               000000A2 
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PSP              
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000A5 - 000000AA (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              000000A5        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        
    -------------------------------------------------------------------------
PDATA_Z
  Relative segment, address: XDATA 00000F01, align: 0
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
CSTART
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PDATA_BANK       
    -------------------------------------------------------------------------
CSTART
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __disable_infineon_pflash
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000AB - 000000AD (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   CLCommunic::vInitBaudRate(UI) (CLCommunicUpsdPort1)
                                                   CLEcran::Lettre(char) (CLEcran)
                                                   CLEcran::vLCDCursor(UC, UC) (CLEcran)
                                                   CLEcran::vLCDInit() (CLEcran)
                                                   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::ChoisirIdentifiantTX0(int) (CANBUS)
                                                   CanBus::Delai(unsigned long) (CANBUS)
                                                   CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   Segment part 13 (?xxmemxmalloc)
                                                   Segment part 14 (?xxmemxmalloc)
                              - Cross-reference -                      Page   40

                                                   Segment part 8 (?cppinit)
                                                   __call_ctors (?cppinit)
                                                   __xdata_findmem (?xxmemxmalloc)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   operator new(unsigned int) (?newop_0)
    -------------------------------------------------------------------------
PSP
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSP                    
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000129 - 00000138 (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  00000129        CLSPI::Delai(unsigned long) (CLSPI)
                                                   CanBus::Delai(unsigned long) (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?G_EQ

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?G_EQ                   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_GPTR_STORE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_GPTR_STORE           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
                              - Cross-reference -                      Page   41

RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT               
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT_REW           
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT_REW          
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL_REW          
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?R2345_FLT_TO_UL        
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL              
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L_REW           
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?R2345_FLT_TO_L         
    -------------------------------------------------------------------------
RCODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               
    -------------------------------------------------------------------------
RCODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
                              - Cross-reference -                      Page   42

           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO          
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1       
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_REW       
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           

                              - Cross-reference -                      Page   43

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1_REW    
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL_REW            
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL                

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_SUB_REW            
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_SUB                
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_ADD_REW            
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_ADD                

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_REW              
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
                              - Cross-reference -                      Page   44

           ?L_NEG                  

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000139 - 0000014B (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                00000139        CLSPI::Delai(unsigned long) (CLSPI)
                                                   CanBus::Delai(unsigned long) (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000014C - 0000015A (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                0000014C        CLSPI::Delai(unsigned long) (CLSPI)
                                                   CanBus::Delai(unsigned long) (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REWX        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R2345            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R2345           
                              - Cross-reference -                      Page   45


    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000015B - 00000167 (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   0000015B        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000168 - 00000188 (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   00000168        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000189 - 0000018B (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 00000189        CanBus::ChoisirIdentifiantTX0(int) (CANBUS)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000018C - 00000198 (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_REW             
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   46

RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000199 - 000001AE (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00000199        CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001AF - 000001C8 (0x1a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        000001AF        CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)
                                                   CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001C9 - 000001E3 (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     000001C9        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001E4 - 000001ED (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         000001E4        CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::Delai(unsigned long) (CANBUS)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001EE - 000001EF (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
                              - Cross-reference -                      Page   47

           =====                   =======         ======
           ?CALL_IND               000001EE        __call_ctors (?cppinit)
                                                   __call_dtors (?cppinit)
                                                   operator new(unsigned int) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001F0 - 00000255 (0x66 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       000001F0        CLCommunic::CLCommunic() (CLCommunicUpsdPort1)
                                                   CLCommunic::SendString(char const *) (CLCommunicUpsdPort1)
                                                   CLCommunic::vInitBaudRate(UI) (CLCommunicUpsdPort1)
                                                   CLEcran::CLEcran() (CLEcran)
                                                   CLEcran::Lettre(char) (CLEcran)
                                                   CLEcran::String(char const *) (CLEcran)
                                                   CLEcran::vLCDBusy() (CLEcran)
                                                   CLEcran::vLCDClr() (CLEcran)
                                                   CLEcran::vLCDCursor(UC, UC) (CLEcran)
                                                   CLEcran::vLCDInit() (CLEcran)
                                                   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)
                                                   CanBus::ChoisirIdentifiantTX0(int) (CANBUS)
                                                   CanBus::Delai(unsigned long) (CANBUS)
                                                   CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   __call_ctors (?cppinit)
                                                   __record_needed_destruction (?cppinit)
                                                   __xdata_findmem (?xxmemxmalloc)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   operator new(unsigned int) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000256 - 00000295 (0x40 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       00000256        CLCommunic::CLCommunic() (CLCommunicUpsdPort1)
                                                   CLCommunic::SendString(char const *) (CLCommunicUpsdPort1)
                                                   CLCommunic::vInitBaudRate(UI) (CLCommunicUpsdPort1)
                                                   CLEcran::CLEcran() (CLEcran)
                                                   CLEcran::Lettre(char) (CLEcran)
                                                   CLEcran::String(char const *) (CLEcran)
                                                   CLEcran::vLCDBusy() (CLEcran)
                                                   CLEcran::vLCDClr() (CLEcran)
                                                   CLEcran::vLCDCursor(UC, UC) (CLEcran)
                                                   CLEcran::vLCDInit() (CLEcran)
                                                   CLSPI::Delai(unsigned long) (CLSPI)
                                                   CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::CanBus() (CANBUS)
                                                   CanBus::ChoisirIdentifiantTX0(int) (CANBUS)
                                                   CanBus::Delai(unsigned long) (CANBUS)
                                                   CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
                                                   __call_ctors (?cppinit)
                                                   __record_needed_destruction (?cppinit)
                                                   __xdata_findmem (?xxmemxmalloc)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   operator new(unsigned int) (?newop_0)
                              - Cross-reference -                      Page   48


    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000296 - 000002F4 (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00000296        CLCommunic::vInteruptSerial() (CLCommunicUpsdPort1)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002F5 - 0000034C (0x58 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    000002F5        CLCommunic::vInteruptSerial() (CLCommunicUpsdPort1)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000034D - 0000034E (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      0000034D        CanBus::EcrireRegistreMCP2515(UC, UC) (CANBUS)
                                                   CanBus::MCP24515_init() (CANBUS)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000034F - 0000035B (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_ONE
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          0000034F 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   49

RCODE
  Relative segment, address: CODE 0000035C - 0000035F (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    0000035C        CLSPI::WriteMPC2514(UC, UC, UC, UC) (CLSPI)
                                                   CanBus::MCP24515_init() (CANBUS)
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_THREE   
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_ONE     
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000360 - 00000388 (0x29 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_X_FOUR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         00000360 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE_CBF    
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
                              - Cross-reference -                      Page   50

           ?US_SWITCH_DENSE_CBF    
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000389 - 00000392 (0xa bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       00000389        CLCommunic::vInitBaudRate(UI) (CLCommunicUpsdPort1)
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_CBF   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000393 - 000003D3 (0x41 bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SWITCH_SPARSE
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_LEAVE
                                   000003C5        ?US_JMP_IF_IN_RANGE (?US_JMP_IF_IN_RANGE)
                                                   ?US_JMP_IF_VALUE (?US_JMP_IF_VALUE)
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000003D4 - 000003D4 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?US_SWITCH_SPARSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000003D5 - 00000413 (0x3f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     000003D5        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000414 - 0000043E (0x2b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        00000414        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   51

  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000AE - 000000B0 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        000000AE        __low_level_init_call (?cmain)
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012D4 - 000012DA (0x7 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   000012D4        _Nomemory() (?nomemory)
                                                   __record_needed_destruction (?cppinit)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cppinit

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000EA3 - 00000F08 (0x66 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            00000EA3        __cstart_call_ctors (?cstart_call_ctors)
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000F09 - 00000F15 (0xd bytes), align: 0
  Segment part 8.             Intra module refs:   __call_ctors
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __alloc_record_needed_destruction
                                   
                              - Cross-reference -                      Page   52

               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F38 - 00000F39 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   __call_dtors
                                                   __record_needed_destruction
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000F16 - 00000F5B (0x46 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __record_needed_destruction
                                   00000F16        __sti__routine() (NomDuProjet)
               calls direct
               XSTACK = 0000000B ( 00000008 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000F5C - 00000FB1 (0x56 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_dtors            00000F5C        __cstart_call_dtors (?cexit)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000FB2 - 00000FBA (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   __call_dtors
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data_vec_cctor        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __idata_vec_cctor       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __bdata_vec_cctor       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __pdata_vec_cctor       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_vec_cctor       
               is not allocated
               not allocated function
                              - Cross-reference -                      Page   53

    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __ixdata_vec_cctor      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?delop_0

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012CC - 000012D3 (0x8 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   000012CC        CLCommunic::~CLCommunic() (CLCommunicUpsdPort1)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012E1 - 000012E3 (0x3 bytes), align: 0
                              - Cross-reference -                      Page   54

  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    000012E1        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?malloc

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?new

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000F3A - 00000F3B (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_New_hand          00000F3A        operator new(unsigned int) (?newop_0)
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_new_handler(new_handler)
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
                              - Cross-reference -                      Page   55

    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?newaop_0

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012DB - 000012DD (0x3 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](unsigned int)
                                   000012DB        CLCommunic::CLCommunic() (CLCommunicUpsdPort1)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?newop_0

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000011F7 - 0000122E (0x38 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int)
                                   000011F7        operator new[](unsigned int) (?newaop_0)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?nomemory

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exception::~exception()
                                   
               calls direct, is indirectly called, is not allocated
                              - Cross-reference -                      Page   56

               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exception::what() const
                                   
               is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exception::_Doraise() const
                                   
               is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bad_alloc::~bad_alloc()
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bad_alloc::_Doraise() const
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012DE - 000012E0 (0x3 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Nomemory()             000012DE        operator new(unsigned int) (?newop_0)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 10. NOT NEEDED.
                              - Cross-reference -                      Page   57


    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xcloseall

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Close_all              
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 0000117F - 000011BA (0x3c bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_GetMemChunk     0000117F        __xdata_findmem (?xxmemxmalloc)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __generic_GetMemChunk   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000F3C - 00000F3D (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   __xdata_GetMemChunk
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   58

DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 8. TENTATIVE. Used definition from CANBUS
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
GENERIC_HEAP
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_HEAP
  Segment part 16. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 000012E6 - 000012E7 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  000012E6        Segment part 5 (?cexit)
                                                   _exit (?cexit)
                                                   abort (?abort)
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000D56 - 00000E98 (0x143 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_free            00000D56        __xdata_findmem (?xxmemxmalloc)
                                                   operator delete(void *) (?delop_0)
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000E99 - 00000E9C (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   __xdata_free
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000E9D - 00000EA2 (0x6 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
                                                   __xdata_free
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __generic_free          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   59

ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000F3E - 00000F41 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   __xdata_findmem
                                                   __xdata_malloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_Aldata          00000F3E        __xdata_free (?xxmemxfree)
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __generic_Aldata        
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000A25 - 00000AC3 (0x9f bytes), align: 0
  Segment part 8.             Intra module refs:   __xdata_malloc
           LOCAL                   ADDRESS         
           =====                   =======         
           __xdata_findmem         00000A25 
               calls direct
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000AC4 - 00000AC7 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   __xdata_findmem
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000AC8 - 00000ACF (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
                                                   __xdata_malloc
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000AD0 - 00000AD8 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   __xdata_findmem
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000AD9 - 00000BC3 (0xeb bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_malloc          00000AD9        operator new(unsigned int) (?newop_0)
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000BC4 - 00000BCF (0xc bytes), align: 0
  Segment part 13.            Intra module refs:   __xdata_malloc
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000BD0 - 00000BD5 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   __xdata_malloc
    -------------------------------------------------------------------------
<NEAR_CODE> 1 (was NEAR_CODE)
  Relative segment, address: CODE 00000BD6 - 00000BDE (0x9 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   __xdata_findmem
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page   60

NEAR_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __generic_malloc        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                    CODE      DATA      XDATA  IDATA    BIT
------                    ----      ----      -----  -----    ---
                         (Rel)  (Rel)  (Abs)  (Rel)  (Rel)  (Rel)
?ADD_XSTACK_DISP8           27
?ALLOC_XSTACK8              22
?CALL_IND                    2
?DEALLOC_XSTACK8            26
?FUNC_ENTER_XDATA          102
?FUNC_LEAVE_XDATA           64
?INTERRUPT_ENTER_XSP        95
?INTERRUPT_LEAVE_XSP        88
?L_ADD_X                    19
?L_MOV_X                    15
?MOVE_LONG8_XDATA_IDATA     13
?MOVE_LONG8_XDATA_XDATA     33
?PUSH_XSTACK8_X             45
?PUSH_XSTACK_I              15
?SS_SHR                     16
?UL_GT                      16
?US_JMP_IF_IN_RANGE         63
?US_JMP_IF_VALUE            43
?US_SWITCH_SPARSE           76
?XSTACK_DISP8               10
?__exit                      2
?abort                       7
?cexit                      14
?cmain                      75
?cppinit                   280                    2
?cstart_call_ctors          11
?delop_0                     8
?exit                        3
?low_level_init              3
?new                                              2
?newaop_0                    3
?newop_0                    56
?nomemory                    3
?xgetmemchunk               60                    2
?xxmemxfree                333
?xxmemxmalloc              442                    4
CANBUS                     530                    4
  + shared                                        8
CLClavier                   33                    1
  + shared                   6             2
  + common
CLCommunicUpsdPort1        502             4     16
  + shared                  38             1
  + common
CLEcran                    490
CLI2CBase                   17
  + shared                                 1
CLI2CHard                  195             6      5
  + common                  70
CLI2CPort                   27
CLSPI                      375                    3
  + shared                                 1
CLSortieLatch                2
CLinOutBase                 60
CSTARTUP                    15
  + common                   3
NomDuProjet                364             1    138
Optik                       19                    1
Timer0                      51             2
VIRTUAL_REGISTERS                   2                           8
N/A (command line)                 16         7 934     64
N/A (alignment)
----------               -----     --     --  -----     --      -
Total:                   4 770     18     18  8 120     64      8
  + common                  70


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  01  CLClavier::vKeyboardInterrupt()
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000000 00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000004
  02    CLCommunic::ucLireNbCaractRecu()
        | Stack used (prev) :  00000000 00000004
        | + function block  :  00000000 00000002
  01  CLCommunic::vInteruptSerial()
      | Stack used (prev) :  00000000 00000006
      | + function block  :  00000000 0000001E
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000000 00000024


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000024
  01  CLI2CHARD::vIntrI2C()
      | Stack used (prev) :  00000000 00000024
      | + function block  :  00000000 00000007
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000000 0000002B

                              - Cross-reference -                      Page   61


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  02    CLSPI::~CLSPI()
        | Stack used (prev) :  00000000 0000002B
        | + function block  :  00000008 00000000
  01  CanBus::~CanBus()
      | Stack used (prev) :  00000008 0000002B
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010 0000002B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  01  CLClavier::~CLClavier()
      | Stack used (prev) :  00000000 0000002B
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008 0000002B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  03      __xdata_free
          | Stack used (prev) :  00000000 0000002B
          | + function block  :  0000000D 00000000
  02    operator delete(void *)
        | Stack used (prev) :  0000000D 0000002B
        | + function block  :  00000000 00000000
  01  CLCommunic::~CLCommunic()
      | Stack used (prev) :  0000000D 0000002B
      | + function block  :  00000008 00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000015 0000002F


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  04        CLInOutBase::vOutPort(USI, UC)
            | Stack used (prev) :  00000000 0000002B
            | + function block  :  0000000C 00000003
  03      CLInOutBase::vOut(USI, UC)
          | Stack used (prev) :  0000000C 0000002E
          | + function block  :  00000000 00000002
  05          CLInOutBase::ucInPort(USI)
              | Stack used (prev) :  00000000 0000002B
              | + function block  :  0000000C 00000002
  04        CLInOutBase::ucIn(USI)
            | Stack used (prev) :  0000000C 0000002D
            | + function block  :  00000000 00000002
  03      CLEcran::vLCDBusy()
          | Stack used (prev) :  0000000C 0000002F
          | + function block  :  0000001A 00000000
  02    CLEcran::vLCDClr()
        | Stack used (prev) :  00000026 00000030
        | + function block  :  00000010 00000000
  01  CLEcran::~CLEcran()
      | Stack used (prev) :  00000036 00000030
      | + function block  :  00000008 00000000
                              - Cross-reference -                      Page   62

  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000003E 00000030


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  01  CLI2CHARD::~CLI2CHARD()
      | Stack used (prev) :  00000000 0000002B
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008 0000002B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  02    CLI2CBase::~CLI2CBase()
        | Stack used (prev) :  00000000 0000002B
        | + function block  :  00000008 00000000
  01  CLI2CPort::~CLI2CPort()
      | Stack used (prev) :  00000008 0000002B
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010 0000002B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  01  DAC_ADC::~DAC_ADC()
      | Stack used (prev) :  00000000 0000002B
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008 0000002B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  01  Encodeur::~Encodeur()
      | Stack used (prev) :  00000000 0000002B
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008 0000002B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 0000002B
  01  Timer0::~Timer0()
      | Stack used (prev) :  00000000 0000002B
      | + function block  :  00000008 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008 0000002B

                              - Cross-reference -                      Page   63


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000003E 00000030
  04        __exit
            | Stack used (prev) :  0000003E 00000030
            | + function block  :  00000000 00000000
  03      abort
          | Stack used (prev) :  0000003E 00000030
          | + function block  :  00000000 00000000
  02    __record_needed_destruction
        | Stack used (prev) :  0000003E 00000030
        | + function block  :  0000001B 00000000
  03      Timer0::InitTimer0()
          | Stack used (prev) :  0000003E 00000030
          | + function block  :  00000000 00000000
  02    Timer0::Timer0()
        | Stack used (prev) :  0000003E 00000030
        | + function block  :  00000000 00000004
  02    Encodeur::Encodeur()
        | Stack used (prev) :  0000003E 00000030
        | + function block  :  00000000 00000002
  02    DAC_ADC::DAC_ADC()
        | Stack used (prev) :  0000003E 00000030
        | + function block  :  00000000 00000000
  02    CLSPI::CLSPI()
        | Stack used (prev) :  0000003E 00000030
        | + function block  :  00000000 00000000
  03      CLI2CBase::CLI2CBase()
          | Stack used (prev) :  0000003E 00000030
          | + function block  :  00000000 00000002
  02    CLI2CPort::CLI2CPort()
        | Stack used (prev) :  0000003E 00000032
        | + function block  :  00000000 00000004
  03      CLI2CHARD::vInitUpsd()
          | Stack used (prev) :  0000003E 00000030
          | + function block  :  00000000 00000003
  02    CLI2CHARD::CLI2CHARD()
        | Stack used (prev) :  0000003E 00000033
        | + function block  :  00000000 00000004
  04        CLInOutBase::vOut(USI, UC)
            | Stack used (prev) :  0000000C 0000002E
            | + function block  :  00000000 00000002
            |  Already listed
  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 0000002F
            | + function block  :  0000001A 00000000
            |  Already listed
  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 0000002F
            | + function block  :  0000001A 00000000
            |  Already listed
  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 0000002F
            | + function block  :  0000001A 00000000
            |  Already listed
  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 0000002F
            | + function block  :  0000001A 00000000
            |  Already listed
  04        CLEcran::vDelaiLCD(USI)
            | Stack used (prev) :  0000003E 00000030
            | + function block  :  00000009 00000000
  03      CLEcran::vLCDInit()
          | Stack used (prev) :  00000047 00000030
          | + function block  :  0000001A 00000000
  02    CLEcran::CLEcran()
        | Stack used (prev) :  00000061 00000030
        | + function block  :  00000010 00000000
  07              __xdata_free
                  | Stack used (prev) :  00000000 0000002B
                  | + function block  :  0000000D 00000000
                  |  Already listed
  07              __xdata_GetMemChunk
                  | Stack used (prev) :  0000003E 00000030
                  | + function block  :  00000000 00000002
  06            __xdata_findmem
                | Stack used (prev) :  0000003E 00000032
                              - Cross-reference -                      Page   64

                | + function block  :  0000001C 00000000
  05          __xdata_malloc
              | Stack used (prev) :  0000005A 00000032
              | + function block  :  00000014 00000000
  06            abort
                | Stack used (prev) :  0000003E 00000030
                | + function block  :  00000000 00000000
                |  Already listed
  05          _Nomemory()
              | Stack used (prev) :  0000003E 00000030
              | + function block  :  00000000 00000000
  04        operator new(unsigned int)
            | Stack used (prev) :  0000006E 00000032
            | + function block  :  00000012 00000000
  03      operator new[](unsigned int)
          | Stack used (prev) :  00000080 00000032
          | + function block  :  00000000 00000000
  03      CLCommunic::vInitBaudRate(UI)
          | Stack used (prev) :  0000003E 00000030
          | + function block  :  00000016 00000000
  02    CLCommunic::CLCommunic()
        | Stack used (prev) :  00000080 00000032
        | + function block  :  00000010 00000000
  02    CLClavier::CLClavier()
        | Stack used (prev) :  0000003E 00000030
        | + function block  :  00000000 00000000
  03      CLSPI::~CLSPI()
          | Stack used (prev) :  00000000 0000002B
          | + function block  :  00000008 00000000
          |  Already listed
  03      CLSPI::CLSPI()
          | Stack used (prev) :  0000003E 00000030
          | + function block  :  00000000 00000000
          |  Already listed
  06            CLSPI::Delai(unsigned long)
                | Stack used (prev) :  0000003E 00000030
                | + function block  :  00000021 00000000
  06            CLSPI::Write(UC, UC)
                | Stack used (prev) :  0000003E 00000030
                | + function block  :  0000000E 00000000
  05          CLSPI::WriteMPC2514(UC, UC, UC, UC)
              | Stack used (prev) :  0000005F 00000030
              | + function block  :  00000025 00000002
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  03      CanBus::ChoisirIdentifiantTX0(int)
          | Stack used (prev) :  000000A5 00000032
          | + function block  :  0000001B 00000000
  04        CLSPI::WriteMPC2514(UC, UC, UC, UC)
            | Stack used (prev) :  0000005F 00000030
            | + function block  :  00000025 00000002
            |  Already listed
  04        CanBus::Delai(unsigned long)
            | Stack used (prev) :  0000003E 00000030
            | + function block  :  00000022 00000000
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
                              - Cross-reference -                      Page   65

            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  04        CanBus::EcrireRegistreMCP2515(UC, UC)
            | Stack used (prev) :  00000084 00000032
            | + function block  :  00000021 00000000
            |  Already listed
  03      CanBus::MCP24515_init()
          | Stack used (prev) :  000000A5 00000032
          | + function block  :  00000019 00000000
  02    CanBus::CanBus()
        | Stack used (prev) :  000000C0 00000032
        | + function block  :  00000012 00000000
  01  __sti__routine()
      | Stack used (prev) :  000000D2 00000037
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000000D2 00000037

                              - Cross-reference -                      Page   66


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000000D2 00000037
  04        CLInOutBase::vOut(USI, UC)
            | Stack used (prev) :  0000000C 0000002E
            | + function block  :  00000000 00000002
            |  Already listed
  04        CLEcran::vLCDBusy()
            | Stack used (prev) :  0000000C 0000002F
            | + function block  :  0000001A 00000000
            |  Already listed
  03      CLEcran::Lettre(char)
          | Stack used (prev) :  000000D2 00000037
          | + function block  :  00000025 00000000
  02    CLEcran::String(char const *)
        | Stack used (prev) :  000000F7 00000037
        | + function block  :  00000010 00000000
  02    CLEcran::Lettre(char)
        | Stack used (prev) :  000000D2 00000037
        | + function block  :  00000025 00000000
        |  Already listed
  03      CLInOutBase::vOut(USI, UC)
          | Stack used (prev) :  0000000C 0000002E
          | + function block  :  00000000 00000002
          |  Already listed
  03      CLEcran::vLCDBusy()
          | Stack used (prev) :  0000000C 0000002F
          | + function block  :  0000001A 00000000
          |  Already listed
  02    CLEcran::vLCDCursor(UC, UC)
        | Stack used (prev) :  000000D2 00000037
        | + function block  :  00000012 00000000
  03      CLCommunic::Send(UC)
          | Stack used (prev) :  000000D2 00000037
          | + function block  :  0000000A 00000000
  02    CLCommunic::SendString(char const *)
        | Stack used (prev) :  000000DC 00000037
        | + function block  :  00000010 00000000
  01  main
      | Stack used (prev) :  00000107 00000037
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000107 00000037


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000107 00000037
  02    __call_ctors
        | Stack used (prev) :  00000107 00000037
        | + function block  :  0000000C 00000000
  01  __cstart_call_ctors
      | Stack used (prev) :  00000113 00000037
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000113 00000037


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000113 00000037
  01  __program_start
      | Stack used (prev) :  00000113 00000037
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000113 00000037


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000113 00000037
  01  __low_level_init
      | Stack used (prev) :  00000113 00000037
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000113 00000037

                              - Cross-reference -                      Page   67


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000113 00000037
  01  __call_dtors
      | Stack used (prev) :  00000113 00000037
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000113 00000039


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000113 00000039
  02    _exit
        | Stack used (prev) :  00000113 00000039
        | + function block  :  00000000 00000000
  01  exit
      | Stack used (prev) :  00000113 00000039
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000113 00000039




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000045          46   com    0
CSTART               CODE          00000046 - 000000B0          6B   rel    0
BIT_ID               CODE               000000B1                     dse    0
BDATA_ID             CODE               000000B1                     dse    0
PDATA_ID             CODE               000000B1                     dse    0
IXDATA_ID            CODE               000000B1                     dse    0
DATA_ID              CODE               000000B1                     dse    0
IDATA_ID             CODE               000000B1                     dse    0
XDATA_ID             CODE          000000B1 - 00000128          78   rel    0
RCODE                CODE          00000129 - 0000043E         316   rel    0
DIFUNCT              CODE          0000043F - 00000440           2   rel    0
<NEAR_CODE> 1        CODE          00000441 - 000012E7         EA7   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000087 - 0000008A           4   rel    0
                     DATA          0000008C - 0000008D           2 
                     DATA          00000090 - 00000090           1 
                     DATA          00000093 - 00000093           1 
                     DATA          00000098 - 00000099           2 
                     DATA          000000A7 - 000000A8           2 
                     DATA          000000AE - 000000AE           1 
                     DATA          000000B0 - 000000B0           1 
                     DATA          000000B7 - 000000B7           1 
                     DATA          000000DC - 000000DE           3 
XSTACK               XDATA         00000001 - 00000EFF         EFF   rel    0
XDATA_Z              XDATA         00000F00 - 00000F41          42   rel    0
PDATA_Z              XDATA              00000F01                     rel    0
XDATA_I              XDATA         00000F42 - 00000FB9          78   rel    0
XDATA_HEAP           XDATA         00000FBA - 00001FB8         FFF   dse    0
ISTACK               IDATA         000000C0 - 000000FF          40   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 4 840 bytes of CODE  memory
    18 bytes of DATA  memory (+ 18 absolute )
 8 120 bytes of XDATA memory
    64 bytes of IDATA memory
     8 bits  of BIT   memory

Errors: none
Warnings: none

