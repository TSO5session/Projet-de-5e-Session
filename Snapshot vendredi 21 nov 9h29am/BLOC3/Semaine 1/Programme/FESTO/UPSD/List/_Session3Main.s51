///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            11/Nov/2014  11:41:10 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Pro /
//                          gramme\FESTO\Libraire\_Session3Main.cpp           /
//    Command line       =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Pro /
//                          gramme\FESTO\Libraire\_Session3Main.cpp -D        /
//                          UPSD3254A --preprocess=cl                         /
//                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Pro /
//                          gramme\FESTO\UPSD\List\ -lC                       /
//                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Pro /
//                          gramme\FESTO\UPSD\List\ -lA                       /
//                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Pro /
//                          gramme\FESTO\UPSD\List\ -o                        /
//                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Pro /
//                          gramme\FESTO\UPSD\Obj\ -e --no_cse --no_unroll    /
//                          --no_inline --no_code_motion --no_tbaa --debug    /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=near --calling_convention=xdata_reen /
//                          trant --place_constants=data --nr_virtual_regs 8  /
//                          --dlib_config "C:\Program Files\IAR               /
//                          Systems\Embedded Workbench                        /
//                          6.4\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++     /
//    List file          =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Pro /
//                          gramme\FESTO\UPSD\List\_Session3Main.s51          /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME _Session3Main

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "near"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?cstart_call_ctors
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        FUNCTION ??__sti__routine,031203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ??vInit_CPU
        FUNCTION ??vInit_CPU,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBWEAK WDKEY
        PUBLIC clADDA
        PUBLIC clEcran
        PUBLIC clSPI
        PUBLIC main
        FUNCTION main,0a03H
        ARGFRAME XSTACK, 0, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:16, ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        EXTERN ??CLADDA
        FUNCTION ??CLADDA,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??CLEcran
        FUNCTION ??CLEcran,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??CLSPI
        FUNCTION ??CLSPI,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN `?~CLADDA`
        FUNCTION `?~CLADDA`,0602H
        EXTERN `?~CLEcran`
        FUNCTION `?~CLEcran`,0602H
        EXTERN `?~CLSPI`
        FUNCTION `?~CLSPI`,0602H
        EXTERN __record_needed_destruction
        FUNCTION __record_needed_destruction,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Programme\FESTO\Libraire\_Session3Main.cpp
//    1 
//    2 
//    3 // ************************** FICHIER: ProjetSessionCinqMain.CPP  ****
//    4 //  Application realisee avec IAR C++ 8.10
//    5 //  LABORATOIRE PROJET FIN SESSION
//    6 //
//    7 //  VITESSE DE COMMUNICATION 19200
//    8 //
//    9 //  LIMITATION DU COMPILATEUR:
//   10 //    Impossible de faire de l'heritage multiple.
//   11 //
//   12 //  Programme principal.
//   13 //
//   14 //  Note on peut utiliser XAR pour creer des librairies.
//   15 //  On peut mettre les librairies dans le projets et Exclure de la compilation
//   16 //  les modules qui sont contenus dans la librairie.
//   17 //
//   18 //  Pour Windows 7 on utilise la VMware pour programmer le upsd 3254A avec CAPS.
//   19 //
//   20 //  AUTEUR : Gabriel Fortin-B
//   21 //  DATE CREATION :    2012-12-20		 VERSION: 1.0
//   22 //  DATE MODIFICATION: ****-**-**
//   23 //
//   24 // ************************************************************************
//   25 #include "_DeclarationGenerale.h"

        ASEGN SFR_AN:DATA:NOROOT,0aeH
// unsigned char volatile __sfr WDKEY
WDKEY:
        DATA8
        DS 1

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA8
//   26 
//   27 #include "_Session3Main.h"
//   28 #include <stdio.h>
//   29  
//   30 
//   31  
//   32 void vInit_CPU(void); // initialise le microcontroller
//   33  
//   34    CLSPI clSPI;
?_0:
        DS 6
        REQUIRE `?<Initializer for >`
        REQUIRE __INIT_XDATA_I

        RSEG NEAR_CODE:CODE:NOROOT(0)
// static __intrinsic __near_func __xdata_reentrant void __sti__routine()
??__sti__routine:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??__sti__routine
        CODE
        FUNCALL ??__sti__routine, ??CLSPI
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ??__sti__routine, __record_needed_destruction
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ??__sti__routine, ??CLEcran
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ??__sti__routine, __record_needed_destruction
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ??__sti__routine, ??CLADDA
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ??__sti__routine, __record_needed_destruction
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        ; Saved register size: 0
        ; Auto size: 0
        ; Setup parameters for call to function CLSPI::CLSPI()
        MOV     R2,#clSPI & 0xff
        MOV     R3,#(clSPI >> 8) & 0xff
        LCALL   ??CLSPI
        ; Setup parameters for call to function __record_needed_destruction
        MOV     R2,#?_0 & 0xff
        MOV     R3,#(?_0 >> 8) & 0xff
        LCALL   __record_needed_destruction
//   35    CLEcran clEcran;
        ; Setup parameters for call to function CLEcran::CLEcran()
        MOV     R2,#clEcran & 0xff
        MOV     R3,#(clEcran >> 8) & 0xff
        LCALL   ??CLEcran
        ; Setup parameters for call to function __record_needed_destruction
        MOV     R2,#?_2 & 0xff
        MOV     R3,#(?_2 >> 8) & 0xff
        LCALL   __record_needed_destruction
//   36    CLADDA clADDA;
        ; Setup parameters for call to function CLADDA::CLADDA()
        MOV     R2,#clADDA & 0xff
        MOV     R3,#(clADDA >> 8) & 0xff
        LCALL   ??CLADDA
        ; Setup parameters for call to function __record_needed_destruction
        MOV     R2,#?_4 & 0xff
        MOV     R3,#(?_4 >> 8) & 0xff
        LJMP    __record_needed_destruction
          CFI EndBlock cfiBlock0

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
clSPI:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
?_1:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA8
?_2:
        DS 6
        REQUIRE `?<Initializer for >_1`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
clEcran:
        DS 6
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
?_3:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA8
?_4:
        DS 6
        REQUIRE `?<Initializer for >_2`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
clADDA:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
?_5:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   37     //CLDelai clDelai;
//   38    
//   39    
//   40 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   41 void main(void)
main:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function main
        CODE
//   42 {
        ; Auto size: 0
//   43 
//   44     
//   45    while(1)  //faire sans fin
??main_0:
        SJMP    ??main_0
          CFI EndBlock cfiBlock1
//   46     {
//   47 
//   48   
//   49 
//   50     }
//   51 
//   52     }// void main (void)
//   53 
//   54 
//   55 //************************ TITRE : vInit_CPU    ***************************
//   56 //
//   57 //  DESCRIPTION :Initialisation du microcontroleur
//   58 //
//   59 //  NOM: void vInit_CPU (void)
//   60 //
//   61 //  PARAMETRE D'ENTREE:  AUCUN
//   62 //
//   63 //  PARAMETRE DE SORTIE: AUCUN
//   64 //
//   65 //  MEMBRES UTILISES:
//   66 //       Fonctions       : AUCUNE
//   67 //       Donnees         : AUCUNE
//   68 //                      :
//   69 //  AUTEUR : DANIEL BRETON
//   70 //  DATE CREATION :    2012-12-20		 VERSION: 1.0
//   71 //  DATE MODIFICATION: ****-**-**
//   72 //
//   73 // ****************************************************************************
//   74 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   75 void vInit_CPU(void)
??vInit_CPU:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ??vInit_CPU
        CODE
//   76 {
        ; Saved register size: 0
        ; Auto size: 0
//   77   #ifdef UPSD3254A
//   78      WDKEY =0x55;  //desactive le watchdog du upsd
        MOV     0xae,#0x55
//   79   #endif
//   80 } // void vInit_CPU (void)
        RET
          CFI EndBlock cfiBlock2
        REQUIRE WDKEY

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for >`:
        DATA16
        DW ?_1
        DW clSPI
        DW `?~CLSPI`

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for >_1`:
        DATA16
        DW ?_3
        DW clEcran
        DW `?~CLEcran`

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for >_2`:
        DATA16
        DW ?_5
        DW clADDA
        DW `?~CLADDA`

        RSEG DIFUNCT:CODE:ROOT(0)
        REQUIRE ?cstart_call_ctors
        DC16    ??__sti__routine

        END
//   81 
//   82 
//   83 // ****************************************************************************
//   84 
//   85 
//   86 
//   87 
//   88 
//   89 
//   90 
// 
//  2 bytes in segment DIFUNCT
// 48 bytes in segment NEAR_CODE
//  1 byte  in segment SFR_AN
// 18 bytes in segment XDATA_I
// 18 bytes in segment XDATA_ID
// 17 bytes in segment XDATA_Z
// 
// 68 bytes of CODE  memory
//  0 bytes of DATA  memory (+ 1 byte shared)
// 35 bytes of XDATA memory
//
//Errors: none
//Warnings: 1
