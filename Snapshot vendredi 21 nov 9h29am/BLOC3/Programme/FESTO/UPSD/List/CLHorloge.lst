###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             11/Nov/2014  11:41:09 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\CLHorloge.cpp                 #
#    Command line       =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\CLHorloge.cpp -D UPSD3254A    #
#                          --preprocess=cl C:\Users\1230838\Desktop\PROJETSES #
#                          SION5\BLOC3\Programme\FESTO\UPSD\List\ -lC         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -lA                         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -o                          #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\ -e --no_cse --no_unroll      #
#                          --no_inline --no_code_motion --no_tbaa --debug     #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=near --calling_convention=xdata_reent #
#                          rant --place_constants=data --nr_virtual_regs 8    #
#                          --dlib_config "C:\Program Files\IAR                #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++      #
#    List file          =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\CLHorloge.lst                #
#    Object file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\CLHorloge.r51                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Programme\FESTO\Libraire\CLHorloge.cpp
      1          // ***************** FICHIER:CLHorloge.cpp
      2          //
      3          //  Description: Contient les definitions de fonction pour communiquer avec 
      4          //               l horloge du simulateur de maison
      5          //
      6          //  Application realisee avec IAR
      7          //
      8          //  AUTEUR : Gabriel Fortin-Belanger
      9          //  DATE CREATION :    2014-02-07		 VERSION: 1.0
     10          //  DATE MODIFICATION: ****-**-**
     11          //
     12          //******************************************************************************
     13          #include "CLInOutBase.h"
     14          #include "_DeclarationGenerale.h"
     15          #include "CLHorloge.h"
     16          
     17          
     18          
     19          
     20              
     21              
     22          //***********************CLHorloge(void)
     23          //
     24          //Description:Ce constructeur met l addresse de l horlogr a 0xFC00 par defaut
     25          //            lors de la creation d un objet 
     26          //
     27          // Nom:CLPiece :: CLHorloge(void)
     28          //           
     29          // PARAMETRE D'ENTREE: -
     30          //                  
     31          // 
     32          //
     33          // PARAMETRE DE SORTIE: -             
     34          //
     35          //    
     36          // Membre utilise:  usiAdresseHorloge
     37          //
     38          //
     39          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
     40          // DATE DE MODIFICATION:	
     41          //*****************************************************************************    

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     42          CLHorloge :: CLHorloge(void)
   \                     ??CLHorloge:
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
     43          {
   \   000009                ; Setup parameters for call to function CLHorlogeIO::CLHorlogeIO()
   \   000009   EE           MOV     A,R6
   \   00000A   FA           MOV     R2,A
   \   00000B   EF           MOV     A,R7
   \   00000C   FB           MOV     R3,A
   \   00000D   12....       LCALL   ??CLHorlogeIO
     44             usiAdresseHorloge = 0xFC00;
   \   000010   8E82         MOV     DPL,R6
   \   000012   8F83         MOV     DPH,R7
   \   000014   A3           INC     DPTR
   \   000015   A3           INC     DPTR
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   7400         MOV     A,#0x0
   \   00001A   F0           MOVX    @DPTR,A
   \   00001B   A3           INC     DPTR
   \   00001C   74FC         MOV     A,#-0x4
   \   00001E   F0           MOVX    @DPTR,A
     45          
     46          }
   \   00001F   EE           MOV     A,R6
   \   000020   FA           MOV     R2,A
   \   000021   EF           MOV     A,R7
   \   000022   FB           MOV     R3,A
   \   000023   7F01         MOV     R7,#0x1
   \   000025   02....       LJMP    ?FUNC_LEAVE_XDATA
     47          
     48          //***********************CLHorloge(USI usiAdresse)
     49          //
     50          //Description:Ce constructeur met l addresse de l horloge choisit 
     51          //            par utilisateur lors de la creation d un objet 
     52          //
     53          // Nom:CLPiece :: CLHorloge(void)
     54          //           
     55          // PARAMETRE D'ENTREE: usiAdresse
     56          //                  
     57          // 
     58          //
     59          // PARAMETRE DE SORTIE: -             
     60          //
     61          //    
     62          // Membre utilise:  usiAdresseHorloge
     63          //
     64          //
     65          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
     66          // DATE DE MODIFICATION:	
     67          //*****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     68          CLHorloge :: CLHorloge(USI usiAdresse)
   \                     ??CLHorloge_1:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
     69          {
   \   00000D                ; Setup parameters for call to function CLHorlogeIO::CLHorlogeIO()
   \   00000D   EE           MOV     A,R6
   \   00000E   FA           MOV     R2,A
   \   00000F   EF           MOV     A,R7
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   ??CLHorlogeIO
     70          
     71            usiAdresseHorloge = usiAdresse;
   \   000014   8E82         MOV     DPL,R6
   \   000016   8F83         MOV     DPH,R7
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   A3           INC     DPTR
   \   00001B   A3           INC     DPTR
   \   00001C   E5..         MOV     A,?V0 + 0
   \   00001E   F0           MOVX    @DPTR,A
   \   00001F   A3           INC     DPTR
   \   000020   E5..         MOV     A,?V0 + 1
   \   000022   F0           MOVX    @DPTR,A
     72            
     73          }
   \   000023   EE           MOV     A,R6
   \   000024   FA           MOV     R2,A
   \   000025   EF           MOV     A,R7
   \   000026   FB           MOV     R3,A
   \   000027   7F02         MOV     R7,#0x2
   \   000029   02....       LJMP    ?FUNC_LEAVE_XDATA
     74          
     75          
     76          
     77          //***********************vSetHeureHMS
     78          //
     79          //Description:Cette fonction permet de choisir l heure de l horloge 
     80          //            du simulateur de maison
     81          //           
     82          //
     83          // Nom:CLPiece :: vSetHeureHMS(UC ucHeure, UC ucMinute, UC ucSeconde)
     84          //           
     85          // PARAMETRE D'ENTREE: ucHeure
     86          //                     ucMinute
     87          //                     ucSeconde
     88          //
     89          // PARAMETRE DE SORTIE: -             
     90          //
     91          //    
     92          // Membre utilise: stHorlogeHMS.ucHeure
     93          //                 stHorlogeHMS.ucMinute
     94          //                 stHorlogeHMS.ucSeconde
     95          //                 vWriteTime()
     96          //
     97          //
     98          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
     99          // DATE DE MODIFICATION:	
    100          //*****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    101          void CLHorloge :: vSetHeureHMS(UC ucHeure, UC ucMinute, UC ucSeconde)
   \                     ??vSetHeureHMS:
    102          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   EC           MOV     A,R4
   \   000008   FF           MOV     R7,A
   \   000009   8D..         MOV     ?V0 + 0,R5
    103            stHorlogeHMS.ucHeure = ucHeure;
   \   00000B   EE           MOV     A,R6
   \   00000C   8A82         MOV     DPL,R2
   \   00000E   8B83         MOV     DPH,R3
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   A3           INC     DPTR
   \   000013   A3           INC     DPTR
   \   000014   A3           INC     DPTR
   \   000015   A3           INC     DPTR
   \   000016   F0           MOVX    @DPTR,A
    104            stHorlogeHMS.ucMinute = ucMinute;
   \   000017   EF           MOV     A,R7
   \   000018   8A82         MOV     DPL,R2
   \   00001A   8B83         MOV     DPH,R3
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   A3           INC     DPTR
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   A3           INC     DPTR
   \   000023   F0           MOVX    @DPTR,A
    105            stHorlogeHMS.ucSeconde = ucSeconde;
   \   000024   E5..         MOV     A,?V0 + 0
   \   000026   8A82         MOV     DPL,R2
   \   000028   8B83         MOV     DPH,R3
   \   00002A   A3           INC     DPTR
   \   00002B   A3           INC     DPTR
   \   00002C   A3           INC     DPTR
   \   00002D   A3           INC     DPTR
   \   00002E   A3           INC     DPTR
   \   00002F   A3           INC     DPTR
   \   000030   A3           INC     DPTR
   \   000031   A3           INC     DPTR
   \   000032   E5..         MOV     A,?V0 + 0
   \   000034   F0           MOVX    @DPTR,A
    106            
    107            vWriteTime();
   \   000035                ; Setup parameters for call to function CLHorlogeIO::vWriteTime()
   \   000035   12....       LCALL   ??vWriteTime
    108          }
   \   000038   7F01         MOV     R7,#0x1
   \   00003A   02....       LJMP    ?FUNC_LEAVE_XDATA
    109          
    110          
    111          
    112          //*********************** stpGetHeureHMS
    113          //
    114          //Description:Ce constructeur met l addresse de l horloge choisit 
    115          //            par utilisateur lors de la creation d un objet 
    116          //
    117          // Nom:struct  STHorlogeHMS * CLHorloge :: stpGetHeureHMS(void)
    118          //           
    119          // PARAMETRE D'ENTREE: -
    120          //                  
    121          // 
    122          //
    123          // PARAMETRE DE SORTIE: stpHorlogeHMS            
    124          //
    125          //    
    126          // Membre utilise:  stHorlogeHMS
    127          //                  vReadTime()
    128          //
    129          //
    130          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
    131          // DATE DE MODIFICATION:	
    132          //*****************************************************************************
    133          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    134          struct  STHorlogeHMS * CLHorloge :: stpGetHeureHMS(void)
   \                     ??stpGetHeureHMS:
    135          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    136             STHorlogeHMS *stpHorlogeHMS;
    137             stpHorlogeHMS = &stHorlogeHMS;
   \   000004   EA           MOV     A,R2
   \   000005   2406         ADD     A,#0x6
   \   000007   F582         MOV     DPL,A
   \   000009   EB           MOV     A,R3
   \   00000A   3400         ADDC    A,#0x0
   \   00000C   F583         MOV     DPH,A
    138             
    139             vReadTime();
   \   00000E                ; Setup parameters for call to function CLHorlogeIO::vReadTime()
   \   00000E   12....       LCALL   ??vReadTime
    140             
    141             return(stpHorlogeHMS);
   \   000011   AA82         MOV     R2,DPL
   \   000013   AB83         MOV     R3,DPH
   \   000015   D083         POP     DPH
   \   000017   D082         POP     DPL
   \   000019   22           RET
    142          }

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLHorloge &CLHorloge::new CLHorloge()
   \                     `??new CLHorloge`:
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002   C0..         PUSH    ?V0 + 1
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004                ; Setup parameters for call to function operator new(unsigned int)
   \   000004   7A09         MOV     R2,#0x9
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   `??operator new`
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   A8..         MOV     R0,?V0 + 0
   \   000011   A9..         MOV     R1,?V0 + 1
   \   000013   E8           MOV     A,R0
   \   000014   FA           MOV     R2,A
   \   000015   E9           MOV     A,R1
   \   000016   FB           MOV     R3,A
   \   000017   E8           MOV     A,R0
   \   000018   49           ORL     A,R1
   \   000019   600D         JZ      `??new CLHorloge_2`
   \   00001B                ; Setup parameters for call to function CLHorloge::CLHorloge()
   \   00001B   12....       LCALL   ??CLHorloge
   \   00001E   8A..         MOV     ?V0 + 0,R2
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   AA..         MOV     R2,?V0 + 0
   \   000024   AB..         MOV     R3,?V0 + 1
   \   000026   8004         SJMP    `??new CLHorloge_3`
   \                     `??new CLHorloge_2`:
   \   000028   7A00         MOV     R2,#0x0
   \   00002A   7B00         MOV     R3,#0x0
   \                     `??new CLHorloge_3`:
   \   00002C   D0..         POP     ?V0 + 1
   \   00002E   D0..         POP     ?V0 + 0
   \   000030   22           RET

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLHorloge &CLHorloge::new CLHorloge(USI)
   \                     `??new CLHorloge_1`:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009                ; Setup parameters for call to function operator new(unsigned int)
   \   000009   7A09         MOV     R2,#0x9
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   12....       LCALL   `??operator new`
   \   000010   8A..         MOV     ?V0 + 0,R2
   \   000012   8B..         MOV     ?V0 + 1,R3
   \   000014   A8..         MOV     R0,?V0 + 0
   \   000016   A9..         MOV     R1,?V0 + 1
   \   000018   E8           MOV     A,R0
   \   000019   FA           MOV     R2,A
   \   00001A   E9           MOV     A,R1
   \   00001B   FB           MOV     R3,A
   \   00001C   E8           MOV     A,R0
   \   00001D   49           ORL     A,R1
   \   00001E   6011         JZ      `??new CLHorloge_4`
   \   000020                ; Setup parameters for call to function CLHorloge::CLHorloge(USI)
   \   000020   EE           MOV     A,R6
   \   000021   FC           MOV     R4,A
   \   000022   EF           MOV     A,R7
   \   000023   FD           MOV     R5,A
   \   000024   12....       LCALL   ??CLHorloge_1
   \   000027   8A..         MOV     ?V0 + 0,R2
   \   000029   8B..         MOV     ?V0 + 1,R3
   \   00002B   AA..         MOV     R2,?V0 + 0
   \   00002D   AB..         MOV     R3,?V0 + 1
   \   00002F   8004         SJMP    `??new CLHorloge_5`
   \                     `??new CLHorloge_4`:
   \   000031   7A00         MOV     R2,#0x0
   \   000033   7B00         MOV     R3,#0x0
   \                     `??new CLHorloge_5`:
   \   000035   7F02         MOV     R7,#0x2
   \   000037   02....       LJMP    ?FUNC_LEAVE_XDATA
    143          
    144          
    145          
    146          
    147          
    148          
    149          
    150          //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       0      0      8  CLHorloge::CLHorloge()
                          0 0 8 -> CLHorlogeIO::CLHorlogeIO()
       0      0     18  CLHorloge::CLHorloge(USI)
                          0 0 9 -> CLHorlogeIO::CLHorlogeIO()
       2      0      0  CLHorloge::new CLHorloge()
                          2 0 0 -> CLHorloge::CLHorloge()
                          2 0 0 -> operator new(unsigned int)
       0      0      9  CLHorloge::new CLHorloge(USI)
                          0 0 9 -> CLHorloge::CLHorloge(USI)
                          0 0 9 -> operator new(unsigned int)
       2      0      0  CLHorloge::stpGetHeureHMS()
                          2 0 0 -> CLHorlogeIO::vReadTime()
       1      0      8  CLHorloge::vSetHeureHMS(UC, UC, UC)
                          0 0 8 -> CLHorlogeIO::vWriteTime()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      40  CLHorloge::CLHorloge()
      44  CLHorloge::CLHorloge(USI)
      49  CLHorloge::new CLHorloge()
      58  CLHorloge::new CLHorloge(USI)
      26  CLHorloge::stpGetHeureHMS()
      61  CLHorloge::vSetHeureHMS(UC, UC, UC)

 
 278 bytes in segment NEAR_CODE
 
 278 bytes of CODE memory

Errors: none
Warnings: none
