###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             11/Nov/2014  11:41:10 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\_Session3Main.cpp             #
#    Command line       =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\_Session3Main.cpp -D          #
#                          UPSD3254A --preprocess=cl                          #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -lC                         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -lA                         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -o                          #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\ -e --no_cse --no_unroll      #
#                          --no_inline --no_code_motion --no_tbaa --debug     #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=near --calling_convention=xdata_reent #
#                          rant --place_constants=data --nr_virtual_regs 8    #
#                          --dlib_config "C:\Program Files\IAR                #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++      #
#    List file          =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\_Session3Main.lst            #
#    Object file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\_Session3Main.r51             #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Programme\FESTO\Libraire\_Session3Main.cpp
      1          
      2          
      3          // ************************** FICHIER: ProjetSessionCinqMain.CPP  ****
      4          //  Application realisee avec IAR C++ 8.10
      5          //  LABORATOIRE PROJET FIN SESSION
      6          //
      7          //  VITESSE DE COMMUNICATION 19200
      8          //
      9          //  LIMITATION DU COMPILATEUR:
     10          //    Impossible de faire de l'heritage multiple.
     11          //
     12          //  Programme principal.
     13          //
     14          //  Note on peut utiliser XAR pour creer des librairies.
     15          //  On peut mettre les librairies dans le projets et Exclure de la compilation
     16          //  les modules qui sont contenus dans la librairie.
     17          //
     18          //  Pour Windows 7 on utilise la VMware pour programmer le upsd 3254A avec CAPS.
     19          //
     20          //  AUTEUR : Gabriel Fortin-B
     21          //  DATE CREATION :    2012-12-20		 VERSION: 1.0
     22          //  DATE MODIFICATION: ****-**-**
     23          //
     24          // ************************************************************************
     25          #include "_DeclarationGenerale.h"

   \                                 In  segment SFR_AN, at 0xae
   \   unsigned char volatile __sfr WDKEY
   \                     WDKEY:
   \   000000                DS 1
     26          
     27          #include "_Session3Main.h"

  unsigned char CLMCP2515 :: LireDonnesMCP2515(unsigned char NombreDonneesEnvoyer, unsigned char Donnee1, unsigned char Donnee2, unsigned char Donnee3);
                ^
"C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Programme\FESTO\Libraire\CLMCP2515.h",33  Warning[Pe427]: 
          qualified name is not allowed in member declaration
     28          #include <stdio.h>
     29           
     30          
     31           
     32          void vInit_CPU(void); // initialise le microcontroller
     33           

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   static __intrinsic __near_func __xdata_reentrant void __sti__routine()
   \                     ??__sti__routine:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     34             CLSPI clSPI;
   \   000000                ; Setup parameters for call to function CLSPI::CLSPI()
   \   000000   7A..         MOV     R2,#clSPI & 0xff
   \   000002   7B..         MOV     R3,#(clSPI >> 8) & 0xff
   \   000004   12....       LCALL   ??CLSPI
   \   000007                ; Setup parameters for call to function __record_needed_destruction
   \   000007   7A..         MOV     R2,#?_0 & 0xff
   \   000009   7B..         MOV     R3,#(?_0 >> 8) & 0xff
   \   00000B   12....       LCALL   __record_needed_destruction
     35             CLEcran clEcran;
   \   00000E                ; Setup parameters for call to function CLEcran::CLEcran()
   \   00000E   7A..         MOV     R2,#clEcran & 0xff
   \   000010   7B..         MOV     R3,#(clEcran >> 8) & 0xff
   \   000012   12....       LCALL   ??CLEcran
   \   000015                ; Setup parameters for call to function __record_needed_destruction
   \   000015   7A..         MOV     R2,#?_2 & 0xff
   \   000017   7B..         MOV     R3,#(?_2 >> 8) & 0xff
   \   000019   12....       LCALL   __record_needed_destruction
     36             CLADDA clADDA;
   \   00001C                ; Setup parameters for call to function CLADDA::CLADDA()
   \   00001C   7A..         MOV     R2,#clADDA & 0xff
   \   00001E   7B..         MOV     R3,#(clADDA >> 8) & 0xff
   \   000020   12....       LCALL   ??CLADDA
   \   000023                ; Setup parameters for call to function __record_needed_destruction
   \   000023   7A..         MOV     R2,#?_4 & 0xff
   \   000025   7B..         MOV     R3,#(?_4 >> 8) & 0xff
   \   000027   02....       LJMP    __record_needed_destruction

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     clSPI:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     clEcran:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     clADDA:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
     37              //CLDelai clDelai;
     38             
     39             
     40          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     41          void main(void)
   \                     main:
     42          {
   \   000000                ; Auto size: 0
     43          
     44              
     45             while(1)  //faire sans fin
   \                     ??main_0:
   \   000000   80FE         SJMP    ??main_0
     46              {
     47          
     48            
     49          
     50              }
     51          
     52              }// void main (void)
     53          
     54          
     55          //************************ TITRE : vInit_CPU    ***************************
     56          //
     57          //  DESCRIPTION :Initialisation du microcontroleur
     58          //
     59          //  NOM: void vInit_CPU (void)
     60          //
     61          //  PARAMETRE D'ENTREE:  AUCUN
     62          //
     63          //  PARAMETRE DE SORTIE: AUCUN
     64          //
     65          //  MEMBRES UTILISES:
     66          //       Fonctions       : AUCUNE
     67          //       Donnees         : AUCUNE
     68          //                      :
     69          //  AUTEUR : DANIEL BRETON
     70          //  DATE CREATION :    2012-12-20		 VERSION: 1.0
     71          //  DATE MODIFICATION: ****-**-**
     72          //
     73          // ****************************************************************************
     74          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     75          void vInit_CPU(void)
   \                     ??vInit_CPU:
     76          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     77            #ifdef UPSD3254A
     78               WDKEY =0x55;  //desactive le watchdog du upsd
   \   000000   75AE55       MOV     0xae,#0x55
     79            #endif
     80          } // void vInit_CPU (void)
   \   000003   22           RET
   \   000004                REQUIRE WDKEY

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >`:
   \   000000   ....         DW ?_1
   \   000002   ....         DW clSPI
   \   000004   ....         DW `?~CLSPI`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_1`:
   \   000000   ....         DW ?_3
   \   000002   ....         DW clEcran
   \   000004   ....         DW `?~CLEcran`

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for >_2`:
   \   000000   ....         DW ?_5
   \   000002   ....         DW clADDA
   \   000004   ....         DW `?~CLADDA`

   \                                 In  segment DIFUNCT, align 1, keep-with-next, root
   \   000000                REQUIRE ?cstart_call_ctors
   \   000000   ....         DC16    ??__sti__routine
     81          
     82          
     83          // ****************************************************************************
     84          
     85          
     86          
     87          
     88          
     89          
     90          

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       0      0      0  __sti__routine()
                          0 0 0 -> CLADDA::CLADDA()
                          0 0 0 -> CLEcran::CLEcran()
                          0 0 0 -> CLSPI::CLSPI()
                          0 0 0 -> __record_needed_destruction
       0      0      0  main()
       0      0      0  vInit_CPU()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ?<Initializer for >
       6  ?<Initializer for >_1
       6  ?<Initializer for >_2
       1  WDKEY
      42  __sti__routine()
       4  clADDA
       6  clEcran
       1  clSPI
       2  main()
       4  vInit_CPU()
      26  -- Other

 
  2 bytes in segment DIFUNCT
 48 bytes in segment NEAR_CODE
  1 byte  in segment SFR_AN
 18 bytes in segment XDATA_I
 18 bytes in segment XDATA_ID
 17 bytes in segment XDATA_Z
 
 68 bytes of CODE  memory
  0 bytes of DATA  memory (+ 1 byte shared)
 35 bytes of XDATA memory

Errors: none
Warnings: 1
