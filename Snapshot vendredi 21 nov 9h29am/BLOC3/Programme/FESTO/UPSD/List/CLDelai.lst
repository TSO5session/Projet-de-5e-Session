###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             11/Nov/2014  11:41:09 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\CLDelai.cpp                   #
#    Command line       =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\CLDelai.cpp -D UPSD3254A      #
#                          --preprocess=cl C:\Users\1230838\Desktop\PROJETSES #
#                          SION5\BLOC3\Programme\FESTO\UPSD\List\ -lC         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -lA                         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -o                          #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\ -e --no_cse --no_unroll      #
#                          --no_inline --no_code_motion --no_tbaa --debug     #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=near --calling_convention=xdata_reent #
#                          rant --place_constants=data --nr_virtual_regs 8    #
#                          --dlib_config "C:\Program Files\IAR                #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++      #
#    List file          =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\CLDelai.lst                  #
#    Object file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\CLDelai.r51                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Programme\FESTO\Libraire\CLDelai.cpp
      1          // ***************** FICHIER:CLEcran.cpp
      2          //
      3          //  Description: 
      4          //  
      5          //
      6          //  Application realisee avec IAR
      7          //
      8          //  AUTEUR : Gabriel Fortin-Belanger
      9          //  DATE CREATION :    2014-02-07		 VERSION: 1.0
     10          //  DATE MODIFICATION: ****-**-**
     11          //
     12          //******************************************************************************
     13          
     14          #include "CLDelai.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IE
   \                     _A_IE:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x8c
   \   unsigned char volatile __sfr TH0
   \                     TH0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x88
   \   union <unnamed> volatile __sfr _A_TCON
   \                     _A_TCON:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x89
   \   union <unnamed> volatile __sfr _A_TMOD
   \                     _A_TMOD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x8a
   \   unsigned char volatile __sfr TL0
   \                     TL0:
   \   000000                DS 1
     15          #include "_DeclarationGenerale.h"
     16          
     17          
     18          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     19          CLDelai :: CLDelai(void)
   \                     ??CLDelai:
     20          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     21            
     22            
     23            ET0 = 0;
   \   000000   C2A9         CLR     0xa8.1
     24            TH0 = 0xF8;
   \   000002   758CF8       MOV     0x8c,#-0x8
     25            TL0 = 0x30;
   \   000005   758A30       MOV     0x8a,#0x30
     26            TMOD |= 0x01;
   \   000008   438901       ORL     0x89,#0x1
     27            
     28            
     29          
     30            
     31            
     32            
     33            
     34          
     35          }
   \   00000B   22           RET
   \   00000C                REQUIRE _A_IE
   \   00000C                REQUIRE TH0
   \   00000C                REQUIRE TL0
   \   00000C                REQUIRE _A_TMOD
     36          
     37          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     38          CLDelai :: ~CLDelai(void)
   \                     `?~CLDelai`:
     39          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     40          
     41          
     42          }
   \   000000   22           RET
     43          /*
     44          void vDelay_ms (unsigned int uiDelay_ms)
     45           {
     46          
     47          
     48             while (uiDelay_ms != 0)
     49               { 
     50                TL0          = 0x30;         // Valeur pour un ms
     51                TH0          = 0xF8;         //
     52                TR0          = 1;           //Start Timer 1     
     53                while (TF0 != 1); 
     54                TF0 = 0;
     55                uiDelay_ms--;
     56               } 
     57           } 
     58          
     59           */
     60          
     61          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     62          void CLDelai :: vDelaimsTimer0(UC ucTime)
   \                     ??vDelaimsTimer0:
     63          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     64          
     65          UC ucCount = 0;
   \   000000   7A00         MOV     R2,#0x0
     66          TCON_bit.TR0 = 1;
   \   000002   D28C         SETB    0x88.4
     67          for(UC i = 0;i<ucTime;i++)
   \   000004   7800         MOV     R0,#0x0
   \   000006   8012         SJMP    ??vDelaimsTimer0_1
     68          {
     69              
     70            while(TCON_bit.TF0 == 0);
   \                     ??vDelaimsTimer0_2:
   \   000008   A28D         MOV     C,0x88.5
   \   00000A   50FC         JNC     ??vDelaimsTimer0_2
     71            
     72            if(TCON_bit.TF0 == 1 )
   \   00000C   A28D         MOV     C,0x88.5
   \   00000E   5009         JNC     ??vDelaimsTimer0_3
     73            {
     74                 
     75                 TH0 = 0xF8;
   \   000010   758CF8       MOV     0x8c,#-0x8
     76                 TL0 = 0x30;
   \   000013   758A30       MOV     0x8a,#0x30
     77                 TCON_bit.TF0 =0;
   \   000016   C28D         CLR     0x88.5
     78                 ucCount ++;
   \   000018   0A           INC     R2
     79             }
     80            
     81            }
   \                     ??vDelaimsTimer0_3:
   \   000019   08           INC     R0
   \                     ??vDelaimsTimer0_1:
   \   00001A   E8           MOV     A,R0
   \   00001B   C3           CLR     C
   \   00001C   99           SUBB    A,R1
   \   00001D   40E9         JC      ??vDelaimsTimer0_2
     82            TCON_bit.TR0 = 0;
   \   00001F   C28C         CLR     0x88.4
     83            
     84          }
   \   000021   22           RET
   \   000022                REQUIRE _A_TCON
   \   000022                REQUIRE TH0
   \   000022                REQUIRE TL0

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLDelai &CLDelai::new CLDelai()
   \                     `??new CLDelai`:
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002   C0..         PUSH    ?V0 + 1
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004                ; Setup parameters for call to function operator new(unsigned int)
   \   000004   7A01         MOV     R2,#0x1
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   `??operator new`
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   A8..         MOV     R0,?V0 + 0
   \   000011   A9..         MOV     R1,?V0 + 1
   \   000013   E8           MOV     A,R0
   \   000014   FA           MOV     R2,A
   \   000015   E9           MOV     A,R1
   \   000016   FB           MOV     R3,A
   \   000017   E8           MOV     A,R0
   \   000018   49           ORL     A,R1
   \   000019   600D         JZ      `??new CLDelai_1`
   \   00001B                ; Setup parameters for call to function CLDelai::CLDelai()
   \   00001B   12....       LCALL   ??CLDelai
   \   00001E   8A..         MOV     ?V0 + 0,R2
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   AA..         MOV     R2,?V0 + 0
   \   000024   AB..         MOV     R3,?V0 + 1
   \   000026   8004         SJMP    `??new CLDelai_2`
   \                     `??new CLDelai_1`:
   \   000028   7A00         MOV     R2,#0x0
   \   00002A   7B00         MOV     R3,#0x0
   \                     `??new CLDelai_2`:
   \   00002C   D0..         POP     ?V0 + 1
   \   00002E   D0..         POP     ?V0 + 0
   \   000030   22           RET

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant void CLDelai::delete ~CLDelai(CLDelai *)
   \                     `??delete ~CLDelai`:
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EE           MOV     A,R6
   \   00000A   4F           ORL     A,R7
   \   00000B   600E         JZ      `??delete ~CLDelai_1`
   \   00000D                ; Setup parameters for call to function CLDelai::~CLDelai()
   \   00000D   EE           MOV     A,R6
   \   00000E   FA           MOV     R2,A
   \   00000F   EF           MOV     A,R7
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   `?~CLDelai`
   \   000014                ; Setup parameters for call to function operator delete(void *)
   \   000014   EE           MOV     A,R6
   \   000015   FA           MOV     R2,A
   \   000016   EF           MOV     A,R7
   \   000017   FB           MOV     R3,A
   \   000018   12....       LCALL   `??operator delete`
   \                     `??delete ~CLDelai_1`:
   \   00001B   7F01         MOV     R7,#0x1
   \   00001D   02....       LJMP    ?FUNC_LEAVE_XDATA
     85          
     86          
     87          

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       0      0      0  CLDelai::CLDelai()
       0      0      8  CLDelai::delete ~CLDelai(CLDelai *)
                          0 0 8 -> CLDelai::~CLDelai()
                          0 0 8 -> operator delete(void *)
       2      0      0  CLDelai::new CLDelai()
                          2 0 0 -> CLDelai::CLDelai()
                          2 0 0 -> operator new(unsigned int)
       0      0      0  CLDelai::vDelaimsTimer0(UC)
       0      0      8  CLDelai::~CLDelai()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      12  CLDelai::CLDelai()
      32  CLDelai::delete ~CLDelai(CLDelai *)
      49  CLDelai::new CLDelai()
      34  CLDelai::vDelaimsTimer0(UC)
       1  CLDelai::~CLDelai()
       1  TH0
       1  TL0
       1  _A_IE
       1  _A_TCON
       1  _A_TMOD

 
 128 bytes in segment NEAR_CODE
   5 bytes in segment SFR_AN
 
 128 bytes of CODE memory
   0 bytes of DATA memory (+ 5 bytes shared)

Errors: none
Warnings: none
