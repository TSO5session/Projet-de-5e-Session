###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             11/Nov/2014  11:41:07 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\CLDAC7554.cpp                 #
#    Command line       =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\CLDAC7554.cpp -D UPSD3254A    #
#                          --preprocess=cl C:\Users\1230838\Desktop\PROJETSES #
#                          SION5\BLOC3\Programme\FESTO\UPSD\List\ -lC         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -lA                         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -o                          #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\ -e --no_cse --no_unroll      #
#                          --no_inline --no_code_motion --no_tbaa --debug     #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=near --calling_convention=xdata_reent #
#                          rant --place_constants=data --nr_virtual_regs 8    #
#                          --dlib_config "C:\Program Files\IAR                #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++      #
#    List file          =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\CLDAC7554.lst                #
#    Object file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\CLDAC7554.r51                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Programme\FESTO\Libraire\CLDAC7554.cpp
      1          // ***************** FICHIER:CLI2CPort.cpp
      2          //
      3          //  Description:Contient les fonctions haut niveau pour communiquer avec 
      4          //              l I2C.
      5          //             
      6          //
      7          //  Application realisee avec IAR
      8          //
      9          //  AUTEUR : Gabriel Fortin-Belanger
     10          //  DATE CREATION :    2014-02-07		 VERSION: 1.0
     11          //  DATE MODIFICATION: ****-**-**
     12          //
     13          //******************************************************************************
     14          #include "_DeclarationGenerale.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1
     15          #include "CLDAC7554.h"
     16          #include "CLEcran.h"
     17          
     18          
     19          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     20          CLDAC7554 :: CLDAC7554(void)
   \                     ??CLDAC7554:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
     21          {
   \   000008                ; Setup parameters for call to function CLSPI::CLSPI()
   \   000008   AA82         MOV     R2,DPL
   \   00000A   AB83         MOV     R3,DPH
   \   00000C   12....       LCALL   ??CLSPI
   \   00000F                ; Setup parameters for call to function CLEcran::CLEcran()
   \   00000F   AA82         MOV     R2,DPL
   \   000011   AB83         MOV     R3,DPH
   \   000013   12....       LCALL   ??CLEcran
     22          
     23           
     24          }
   \   000016   AA82         MOV     R2,DPL
   \   000018   AB83         MOV     R3,DPH
   \   00001A   D083         POP     DPH
   \   00001C   D082         POP     DPL
   \   00001E   22           RET
     25          
     26          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     27          CLDAC7554 :: ~CLDAC7554(void)
   \                     `?~CLDAC7554`:
     28          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
     29          
     30          
     31          }
   \   000008                ; Setup parameters for call to function CLEcran::~CLEcran()
   \   000008   AA82         MOV     R2,DPL
   \   00000A   AB83         MOV     R3,DPH
   \   00000C   12....       LCALL   `?~CLEcran`
   \   00000F                ; Setup parameters for call to function CLSPI::~CLSPI()
   \   00000F   AA82         MOV     R2,DPL
   \   000011   AB83         MOV     R3,DPH
   \   000013   12....       LCALL   `?~CLSPI`
   \   000016   D083         POP     DPH
   \   000018   D082         POP     DPL
   \   00001A   22           RET
     32          
     33          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     34          void CLDAC7554 :: vConvDA(UC ucChanel , UC ucValH, UC ucValL)
   \                     ??vConvDA:
     35          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   E9           MOV     A,R1
   \   00000A   FF           MOV     R7,A
   \   00000B   8C..         MOV     ?V0 + 0,R4
   \   00000D   ED           MOV     A,R5
   \   00000E   FE           MOV     R6,A
     36           
     37            int iCal;
                       ^
Warning[Pe177]: variable "iCal" was declared but never referenced
     38            P1_6 =1;
   \   00000F   D296         SETB    0x90.6
     39            /*
     40            iCal = ( ucValH << 8) | ucValL;
     41            iCal = iCal >> 4;
     42            ucValH = UC (iCal >> 8 );
     43            ucValL = UC (iCal);
     44            */
     45            switch(ucChanel)
   \   000011   EF           MOV     A,R7
   \   000012   600B         JZ      ??vConvDA_1
   \   000014   14           DEC     A
   \   000015   6027         JZ      ??vConvDA_2
   \   000017   14           DEC     A
   \   000018   6024         JZ      ??vConvDA_2
   \   00001A   14           DEC     A
   \   00001B   6021         JZ      ??vConvDA_2
   \   00001D   801F         SJMP    ??vConvDA_2
     46            {
     47            case 0:
     48              P1_6 =0;
   \                     ??vConvDA_1:
   \   00001F   C296         CLR     0x90.6
     49              ucSPITransfert(0x00,(0x80 | ucValH));
   \   000021                ; Setup parameters for call to function CLSPI::ucSPITransfert(UC, UC)
   \   000021   7480         MOV     A,#-0x80
   \   000023   45..         ORL     A,?V0 + 0
   \   000025   FC           MOV     R4,A
   \   000026   7900         MOV     R1,#0x0
   \   000028   AA82         MOV     R2,DPL
   \   00002A   AB83         MOV     R3,DPH
   \   00002C   12....       LCALL   ??ucSPITransfert
   \   00002F   E9           MOV     A,R1
     50              ucSPITransfert(0x00,ucValL);
   \   000030                ; Setup parameters for call to function CLSPI::ucSPITransfert(UC, UC)
   \   000030   EE           MOV     A,R6
   \   000031   FC           MOV     R4,A
   \   000032   7900         MOV     R1,#0x0
   \   000034   AA82         MOV     R2,DPL
   \   000036   AB83         MOV     R3,DPH
   \   000038   12....       LCALL   ??ucSPITransfert
   \   00003B   E9           MOV     A,R1
     51              P1_6 =1;
   \   00003C   D296         SETB    0x90.6
     52              break;
     53              
     54            case 1:
     55              break;
     56            case 2:
     57           
     58              break;
     59            case 3:
     60          
     61              break;
     62              
     63              
     64            
     65            }
     66           
     67          
     68             
     69          
     70          }
   \                     ??vConvDA_2:
   \   00003E   7F01         MOV     R7,#0x1
   \   000040   02....       LJMP    ?FUNC_LEAVE_XDATA
   \   000043                REQUIRE _A_P1

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLDAC7554 &CLDAC7554::new CLDAC7554()
   \                     `??new CLDAC7554`:
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002   C0..         PUSH    ?V0 + 1
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004                ; Setup parameters for call to function operator new(unsigned int)
   \   000004   7A06         MOV     R2,#0x6
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   `??operator new`
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   A8..         MOV     R0,?V0 + 0
   \   000011   A9..         MOV     R1,?V0 + 1
   \   000013   E8           MOV     A,R0
   \   000014   FA           MOV     R2,A
   \   000015   E9           MOV     A,R1
   \   000016   FB           MOV     R3,A
   \   000017   E8           MOV     A,R0
   \   000018   49           ORL     A,R1
   \   000019   600D         JZ      `??new CLDAC7554_1`
   \   00001B                ; Setup parameters for call to function CLDAC7554::CLDAC7554()
   \   00001B   12....       LCALL   ??CLDAC7554
   \   00001E   8A..         MOV     ?V0 + 0,R2
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   AA..         MOV     R2,?V0 + 0
   \   000024   AB..         MOV     R3,?V0 + 1
   \   000026   8004         SJMP    `??new CLDAC7554_2`
   \                     `??new CLDAC7554_1`:
   \   000028   7A00         MOV     R2,#0x0
   \   00002A   7B00         MOV     R3,#0x0
   \                     `??new CLDAC7554_2`:
   \   00002C   D0..         POP     ?V0 + 1
   \   00002E   D0..         POP     ?V0 + 0
   \   000030   22           RET

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant void CLDAC7554::delete ~CLDAC7554(CLDAC7554 *)
   \                     `??delete ~CLDAC7554`:
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EE           MOV     A,R6
   \   00000A   4F           ORL     A,R7
   \   00000B   600E         JZ      `??delete ~CLDAC7554_1`
   \   00000D                ; Setup parameters for call to function CLDAC7554::~CLDAC7554()
   \   00000D   EE           MOV     A,R6
   \   00000E   FA           MOV     R2,A
   \   00000F   EF           MOV     A,R7
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   `?~CLDAC7554`
   \   000014                ; Setup parameters for call to function operator delete(void *)
   \   000014   EE           MOV     A,R6
   \   000015   FA           MOV     R2,A
   \   000016   EF           MOV     A,R7
   \   000017   FB           MOV     R3,A
   \   000018   12....       LCALL   `??operator delete`
   \                     `??delete ~CLDAC7554_1`:
   \   00001B   7F01         MOV     R7,#0x1
   \   00001D   02....       LJMP    ?FUNC_LEAVE_XDATA
     71          
     72          
     73          
     74          
     75          
     76          
     77          

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      0  CLDAC7554::CLDAC7554()
                          2 0 0 -> CLEcran::CLEcran()
                          2 0 0 -> CLSPI::CLSPI()
       0      0      8  CLDAC7554::delete ~CLDAC7554(CLDAC7554 *)
                          0 0 8 -> CLDAC7554::~CLDAC7554()
                          0 0 8 -> operator delete(void *)
       2      0      0  CLDAC7554::new CLDAC7554()
                          2 0 0 -> CLDAC7554::CLDAC7554()
                          2 0 0 -> operator new(unsigned int)
       0      0      8  CLDAC7554::vConvDA(UC, UC, UC)
                          0 0 8 -> CLSPI::ucSPITransfert(UC, UC)
       2      0      8  CLDAC7554::~CLDAC7554()
                          2 0 0 -> CLEcran::~CLEcran()
                          2 0 0 -> CLSPI::~CLSPI()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      31  CLDAC7554::CLDAC7554()
      32  CLDAC7554::delete ~CLDAC7554(CLDAC7554 *)
      49  CLDAC7554::new CLDAC7554()
      67  CLDAC7554::vConvDA(UC, UC, UC)
      27  CLDAC7554::~CLDAC7554()
       1  _A_P1

 
 206 bytes in segment NEAR_CODE
   1 byte  in segment SFR_AN
 
 206 bytes of CODE memory
   0 bytes of DATA memory (+ 1 byte shared)

Errors: none
Warnings: 1
