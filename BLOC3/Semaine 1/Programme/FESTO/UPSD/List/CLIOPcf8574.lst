###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             11/Nov/2014  11:41:10 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\CLIOPcf8574.cpp               #
#    Command line       =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\Libraire\CLIOPcf8574.cpp -D UPSD3254A  #
#                          --preprocess=cl C:\Users\1230838\Desktop\PROJETSES #
#                          SION5\BLOC3\Programme\FESTO\UPSD\List\ -lC         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -lA                         #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\ -o                          #
#                          C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\ -e --no_cse --no_unroll      #
#                          --no_inline --no_code_motion --no_tbaa --debug     #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=near --calling_convention=xdata_reent #
#                          rant --place_constants=data --nr_virtual_regs 8    #
#                          --dlib_config "C:\Program Files\IAR                #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -Ol --eec++      #
#    List file          =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\List\CLIOPcf8574.lst              #
#    Object file        =  C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Prog #
#                          ramme\FESTO\UPSD\Obj\CLIOPcf8574.r51               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\1230838\Desktop\PROJETSESSION5\BLOC3\Programme\FESTO\Libraire\CLIOPcf8574.cpp
      1          // ********************** FICHIER: CLPcf8574.cpp******************************
      2          // Descrtiption : La classe contient des fonctions pour controler le PCF
      3          //              : 8574 sur le suiveur de ligne et sur le bolide
      4          //
      5          // Composition  : CLI2CPort
      6          //
      7          // Heritage     : Aucun
      8          //
      9          // Fonctions    : void vWritePCF8574 (ucAdresse, ucDonnee)//Ecrit Adr, Donnee
     10          //                UC ucReadPCF8574 (UC ucAdresse)  //Read un canal du ADC
     11          //
     12          //  AUTEUR : Gabriel Fortin-Bélanger
     13          //  DATE CREATION :    12/02/2014		 VERSION: 1.0
     14          //
     15          // ****************************************************************************
     16          
     17          #include "_DeclarationGenerale.h"
     18          #include "CLIOPcf8574.h"
     19          #include "CLI2CPort.h"
     20          
     21          
     22          // ******************************CLPcf8574**************************************
     23          //
     24          //Description: Constructeur defaut du PCF8574            
     25          //
     26          // Nom : CLPcf8574 :: CLPcf8574(void)
     27          //
     28          // Parametre d'entree : AUCUN
     29          //
     30          // Parametre sortie : AUCUN
     31          //
     32          //
     33          // Membres utilisés 
     34          //    Fonctions : vI2CEcrireDonnee -- Ecrire Donnee en I2C
     35          //    DOnnees   : Adresse chip, donnee a ecrire
     36          //
     37          // Auteur : Gabriel Fortin-Bélanger
     38          // Date crée : 27/03/2014
     39          // Date modif :
     40          // ****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     41          CLIOPcf8574 :: CLIOPcf8574(void)
   \                     ??CLIOPcf8574:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
     42           {
   \   000008                ; Setup parameters for call to function CLI2CPort::CLI2CPort()
   \   000008   AA82         MOV     R2,DPL
   \   00000A   AB83         MOV     R3,DPH
   \   00000C   12....       LCALL   ??CLI2CPort
     43             
     44           }
   \   00000F   AA82         MOV     R2,DPL
   \   000011   AB83         MOV     R3,DPH
   \   000013   D083         POP     DPH
   \   000015   D082         POP     DPL
   \   000017   22           RET
     45          // *******************CLPcf8574(UC ucAdresse, UC ucDonnee)**********************
     46          //
     47          //Description: Constructeur initialisateur de la classe PCF8574           
     48          //
     49          // Nom : CLPcf8574 :: CLPcf8574(UC ucAdresse, UC ucDonnee)
     50          //
     51          // Parametre d'entree : ucAdresse -- Adresse du CHIP
     52          //                    : ucDonnee  -- Donnee a ecrire
     53          //
     54          // Parametre sortie : AUCUN
     55          //
     56          //
     57          // Membres utilisés 
     58          //    Fonctions : vI2CEcrireDonnee -- Ecrire Donnee en I2C
     59          //    DOnnees   : Adresse chip, donnee a ecrire
     60          //
     61          // Auteur : Gabriel Fortin-Bélanger
     62          // Date crée : 27/03/2014
     63          // Date modif :
     64          // ****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     65          CLIOPcf8574 :: CLIOPcf8574(UC ucAdresse, UC ucDonnee)
   \                     ??CLIOPcf8574_1:
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   E9           MOV     A,R1
   \   00000A   FE           MOV     R6,A
     66           {
   \   00000B                ; Setup parameters for call to function CLI2CPort::CLI2CPort()
   \   00000B   AA82         MOV     R2,DPL
   \   00000D   AB83         MOV     R3,DPH
   \   00000F   12....       LCALL   ??CLI2CPort
     67             ucAdressePCF8574 = ucAdresse;
   \   000012   EE           MOV     A,R6
   \   000013   F0           MOVX    @DPTR,A
     68             //vI2CEcrireDonnee(ucAdressePCF8574,0 ,ucDonnee);
     69           
     70           }
   \   000014   AA82         MOV     R2,DPL
   \   000016   AB83         MOV     R3,DPH
   \   000018   7F01         MOV     R7,#0x1
   \   00001A   02....       LJMP    ?FUNC_LEAVE_XDATA
     71          
     72          // ***************************~CLPcf85754 (void)*******************************
     73          //
     74          //Description: Destructeur par defaut de la classe PCF8574           
     75          //
     76          // Nom : CLPcf8574 :: ~CLPcf85754 (void)
     77          //
     78          // Parametre d'entree : AUCUN
     79          //                    : AUCUN
     80          //
     81          // Parametre sortie : AUCUN
     82          //
     83          //
     84          // Membres utilisés 
     85          //    Fonctions : 
     86          //    DOnnees   : 
     87          //
     88          // Auteur : Gabriel Fortin-Bélanger
     89          // Date crée : 27/03/2014
     90          // Date modif :
     91          // ****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     92          CLIOPcf8574 :: ~CLIOPcf8574 (void)
   \                     `?~CLIOPcf8574`:
     93           {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     94           }
   \   000000                ; Setup parameters for call to function CLI2CPort::~CLI2CPort()
   \   000000   02....       LJMP    `?~CLI2CPort`
     95          
     96          // ****************vWritePCF8574(UC ucAdresse, UC ucDonnee)*********************
     97          //
     98          //Description: Ecrire des donnees vers le PCF8574         
     99          //
    100          // Nom : CLPcf8574 :: vWritePCF8574(UC ucAdresse, UC ucDonnee)
    101          //
    102          // Parametre d'entree : ucAdresse -- Adresse du CHIP
    103          //                    : ucDonnee  -- Donnee a ecrire
    104          //
    105          // Parametre sortie : AUCUN
    106          //
    107          //
    108          // Membres utilisés 
    109          //    Fonctions : vI2CEcrireDonnee -- Ecrire Donnee en I2C
    110          //    DOnnees   : Adresse chip, donnee a ecrire
    111          //
    112          // Auteur : Gabriel Fortin-Bélanger
    113          // Date crée : 27/03/2014
    114          // Date modif :
    115          // ****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    116          void CLIOPcf8574 :: vWritePCF8574(UC ucAdresse, UC ucDonnee)
   \                     ??vWritePCF8574:
    117           {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
   \   000007   EC           MOV     A,R4
   \   000008   FE           MOV     R6,A
    118              
    119              vI2CEcrireDonnee(ucAdresse,0 , 0 ,ucDonnee);
   \   000009                ; Setup parameters for call to function CLI2CPort::vI2CEcrireDonnee(UC, US, UC, UC)
   \   000009   F5..         MOV     ?V0 + 0,A
   \   00000B   78..         MOV     R0,#?V0 + 0
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000010   75..00       MOV     ?V0 + 0,#0x0
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000018   7C00         MOV     R4,#0x0
   \   00001A   7D00         MOV     R5,#0x0
   \   00001C   EF           MOV     A,R7
   \   00001D   F9           MOV     R1,A
   \   00001E   12....       LCALL   ??vI2CEcrireDonnee
   \   000021   7402         MOV     A,#0x2
   \   000023   12....       LCALL   ?DEALLOC_XSTACK8
    120           }
   \   000026   7F01         MOV     R7,#0x1
   \   000028   02....       LJMP    ?FUNC_LEAVE_XDATA
    121          
    122          // ****************vWritePCF8574(UC ucAdresse, UC ucDonnee)*********************
    123          //
    124          //Description: Lit des donnees du PCF8574 , ACK seconde lecture ou non        
    125          //
    126          // Nom : UC CLPcf8574 :: ucReadPCF8574 (UC ucAdresse, UC ucAck)
    127          //
    128          // Parametre d'entree : ucAdresse -- Adresse du CHIP
    129          //                    : ucAck     -- Plusieurs lectures?
    130          //
    131          // Parametre sortie : ucRetourValeur -- Valeur Lue du PCF
    132          //
    133          //
    134          // Membres utilisés 
    135          //    Fonctions : ucI2CLireDonnee -- Lire Donnee en I2C
    136          //    DOnnees   : Adresse chip, ACK ou NACK
    137          //
    138          // Auteur : Gabriel Fortin-Bélanger
    139          // Date crée : 27/03/2014
    140          // Date modif :
    141          // ****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    142          UC CLIOPcf8574 :: ucReadPCF8574 (UC ucAdrChip, US usiAdrDepart,UC ucTypeAdr)
   \                     ??ucReadPCF8574:
    143           {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    144           
    145             return (  ucI2CLireDonnee(ucAdrChip,0 ,0));
   \   000007                ; Setup parameters for call to function CLI2CPort::ucI2CLireDonnee(UC, US, UC)
   \   000007   75..00       MOV     ?V0 + 0,#0x0
   \   00000A   78..         MOV     R0,#?V0 + 0
   \   00000C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00000F   7C00         MOV     R4,#0x0
   \   000011   7D00         MOV     R5,#0x0
   \   000013   EE           MOV     A,R6
   \   000014   F9           MOV     R1,A
   \   000015   12....       LCALL   ??ucI2CLireDonnee
   \   000018   7401         MOV     A,#0x1
   \   00001A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00001D   7F01         MOV     R7,#0x1
   \   00001F   02....       LJMP    ?FUNC_LEAVE_XDATA
    146           }

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLIOPcf8574 &CLIOPcf8574::new CLIOPcf8574()
   \                     `??new CLIOPcf8574`:
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002   C0..         PUSH    ?V0 + 1
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004                ; Setup parameters for call to function operator new(unsigned int)
   \   000004   7A01         MOV     R2,#0x1
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   `??operator new`
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   A8..         MOV     R0,?V0 + 0
   \   000011   A9..         MOV     R1,?V0 + 1
   \   000013   E8           MOV     A,R0
   \   000014   FA           MOV     R2,A
   \   000015   E9           MOV     A,R1
   \   000016   FB           MOV     R3,A
   \   000017   E8           MOV     A,R0
   \   000018   49           ORL     A,R1
   \   000019   600D         JZ      `??new CLIOPcf8574_2`
   \   00001B                ; Setup parameters for call to function CLIOPcf8574::CLIOPcf8574()
   \   00001B   12....       LCALL   ??CLIOPcf8574
   \   00001E   8A..         MOV     ?V0 + 0,R2
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   AA..         MOV     R2,?V0 + 0
   \   000024   AB..         MOV     R3,?V0 + 1
   \   000026   8004         SJMP    `??new CLIOPcf8574_3`
   \                     `??new CLIOPcf8574_2`:
   \   000028   7A00         MOV     R2,#0x0
   \   00002A   7B00         MOV     R3,#0x0
   \                     `??new CLIOPcf8574_3`:
   \   00002C   D0..         POP     ?V0 + 1
   \   00002E   D0..         POP     ?V0 + 0
   \   000030   22           RET

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant void CLIOPcf8574::delete ~CLIOPcf8574(CLIOPcf8574 *)
   \                     `??delete ~CLIOPcf8574`:
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EE           MOV     A,R6
   \   00000A   4F           ORL     A,R7
   \   00000B   600E         JZ      `??delete ~CLIOPcf8574_1`
   \   00000D                ; Setup parameters for call to function CLIOPcf8574::~CLIOPcf8574()
   \   00000D   EE           MOV     A,R6
   \   00000E   FA           MOV     R2,A
   \   00000F   EF           MOV     A,R7
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   `?~CLIOPcf8574`
   \   000014                ; Setup parameters for call to function operator delete(void *)
   \   000014   EE           MOV     A,R6
   \   000015   FA           MOV     R2,A
   \   000016   EF           MOV     A,R7
   \   000017   FB           MOV     R3,A
   \   000018   12....       LCALL   `??operator delete`
   \                     `??delete ~CLIOPcf8574_1`:
   \   00001B   7F01         MOV     R7,#0x1
   \   00001D   02....       LJMP    ?FUNC_LEAVE_XDATA

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLIOPcf8574 &CLIOPcf8574::new CLIOPcf8574(UC, UC)
   \                     `??new CLIOPcf8574_1`:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
   \   000009                ; Setup parameters for call to function operator new(unsigned int)
   \   000009   7A01         MOV     R2,#0x1
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   12....       LCALL   `??operator new`
   \   000010   8A..         MOV     ?V0 + 0,R2
   \   000012   8B..         MOV     ?V0 + 1,R3
   \   000014   A8..         MOV     R0,?V0 + 0
   \   000016   A9..         MOV     R1,?V0 + 1
   \   000018   E8           MOV     A,R0
   \   000019   FA           MOV     R2,A
   \   00001A   E9           MOV     A,R1
   \   00001B   FB           MOV     R3,A
   \   00001C   E8           MOV     A,R0
   \   00001D   49           ORL     A,R1
   \   00001E   6011         JZ      `??new CLIOPcf8574_4`
   \   000020                ; Setup parameters for call to function CLIOPcf8574::CLIOPcf8574(UC, UC)
   \   000020   EE           MOV     A,R6
   \   000021   FC           MOV     R4,A
   \   000022   EF           MOV     A,R7
   \   000023   F9           MOV     R1,A
   \   000024   12....       LCALL   ??CLIOPcf8574_1
   \   000027   8A..         MOV     ?V0 + 0,R2
   \   000029   8B..         MOV     ?V0 + 1,R3
   \   00002B   AA..         MOV     R2,?V0 + 0
   \   00002D   AB..         MOV     R3,?V0 + 1
   \   00002F   8004         SJMP    `??new CLIOPcf8574_5`
   \                     `??new CLIOPcf8574_4`:
   \   000031   7A00         MOV     R2,#0x0
   \   000033   7B00         MOV     R3,#0x0
   \                     `??new CLIOPcf8574_5`:
   \   000035   7F02         MOV     R7,#0x2
   \   000037   02....       LJMP    ?FUNC_LEAVE_XDATA
    147          

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      0  CLIOPcf8574::CLIOPcf8574()
                          2 0  0 -> CLI2CPort::CLI2CPort()
       1      0     17  CLIOPcf8574::CLIOPcf8574(UC, UC)
                          0 0  8 -> CLI2CPort::CLI2CPort()
       0      0      8  CLIOPcf8574::delete ~CLIOPcf8574(CLIOPcf8574 *)
                          0 0  8 -> CLIOPcf8574::~CLIOPcf8574()
                          0 0  8 -> operator delete(void *)
       2      0      0  CLIOPcf8574::new CLIOPcf8574()
                          2 0  0 -> CLIOPcf8574::CLIOPcf8574()
                          2 0  0 -> operator new(unsigned int)
       0      0      9  CLIOPcf8574::new CLIOPcf8574(UC, UC)
                          0 0  9 -> CLIOPcf8574::CLIOPcf8574(UC, UC)
                          0 0  9 -> operator new(unsigned int)
       0      0     10  CLIOPcf8574::ucReadPCF8574(UC, US, UC)
                          0 0  9 -> CLI2CPort::ucI2CLireDonnee(UC, US, UC)
       0      0     10  CLIOPcf8574::vWritePCF8574(UC, UC)
                          0 0 10 -> CLI2CPort::vI2CEcrireDonnee(UC, US, UC, UC)
       0      0      8  CLIOPcf8574::~CLIOPcf8574()
                          0 0  0 -> CLI2CPort::~CLI2CPort()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      24  CLIOPcf8574::CLIOPcf8574()
      29  CLIOPcf8574::CLIOPcf8574(UC, UC)
      32  CLIOPcf8574::delete ~CLIOPcf8574(CLIOPcf8574 *)
      49  CLIOPcf8574::new CLIOPcf8574()
      58  CLIOPcf8574::new CLIOPcf8574(UC, UC)
      34  CLIOPcf8574::ucReadPCF8574(UC, US, UC)
      43  CLIOPcf8574::vWritePCF8574(UC, UC)
       3  CLIOPcf8574::~CLIOPcf8574()

 
 272 bytes in segment NEAR_CODE
 
 272 bytes of CODE memory

Errors: none
Warnings: none
