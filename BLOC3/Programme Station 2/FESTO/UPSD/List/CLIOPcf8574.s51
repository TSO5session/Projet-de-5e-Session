///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            19/Nov/2014  10:59:17 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  J:\Projet_Session5_LNAH\S2_18Nov2014\Programme    /
//                          Station 2\FESTO\Libraire\CLIOPcf8574.cpp          /
//    Command line       =  "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme   /
//                          Station 2\FESTO\Libraire\CLIOPcf8574.cpp" -D      /
//                          UPSD3254A --preprocess=cl                         /
//                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme   /
//                          Station 2\FESTO\UPSD\List\" -lC                   /
//                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme   /
//                          Station 2\FESTO\UPSD\List\" -lA                   /
//                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme   /
//                          Station 2\FESTO\UPSD\List\" -o                    /
//                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme   /
//                          Station 2\FESTO\UPSD\Obj\" -e --no_cse            /
//                          --no_unroll --no_inline --no_code_motion          /
//                          --no_tbaa --debug --core=plain --dptr=16,1        /
//                          --data_model=large --code_model=near              /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data --nr_virtual_regs 8        /
//                          --dlib_config "C:\Program Files\IAR               /
//                          Systems\Embedded Workbench                        /
//                          6.4\8051\LIB\DLIB\dl8051Normal.h" -I              /
//                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme   /
//                          Station 2\FESTO\Libraire\" -Ol --eec++            /
//    List file          =  J:\Projet_Session5_LNAH\S2_18Nov2014\Programme    /
//                          Station 2\FESTO\UPSD\List\CLIOPcf8574.s51         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME CLIOPcf8574

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "near"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FUNC_ENTER_XDATA
        EXTERN ?FUNC_LEAVE_XDATA
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?V0

        PUBLIC ??CLIOPcf8574
        FUNCTION ??CLIOPcf8574,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ??CLIOPcf8574_1
        FUNCTION ??CLIOPcf8574_1,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 8, STACK
        PUBLIC `??delete ~CLIOPcf8574`
        FUNCTION `??delete ~CLIOPcf8574`,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        PUBLIC `??new CLIOPcf8574`
        FUNCTION `??new CLIOPcf8574`,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC `??new CLIOPcf8574_1`
        FUNCTION `??new CLIOPcf8574_1`,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ??ucReadPCF8574
        FUNCTION ??ucReadPCF8574,021203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ??vWritePCF8574
        FUNCTION ??vWritePCF8574,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC `?~CLIOPcf8574`
        FUNCTION `?~CLIOPcf8574`,021203H
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:16, ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        EXTERN ??CLI2CPort
        FUNCTION ??CLI2CPort,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN `??operator new`
        FUNCTION `??operator new`,010202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??ucI2CLireDonnee
        FUNCTION ??ucI2CLireDonnee,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??vI2CEcrireDonnee
        FUNCTION ??vI2CEcrireDonnee,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN `?~CLI2CPort`
        FUNCTION `?~CLI2CPort`,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC


        RSEG NEAR_CODE:CODE:NOROOT(0)
// __near_func __xdata_reentrant CLIOPcf8574 &CLIOPcf8574::new CLIOPcf8574()
`??new CLIOPcf8574`:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function `??new CLIOPcf8574`
        CODE
        FUNCALL `??new CLIOPcf8574`, `??operator new`
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL `??new CLIOPcf8574`, ??CLIOPcf8574
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    ?V0 + 0
          CFI V0 Frame(CFA_SP, 3)
          CFI CFA_SP SP+-3
        PUSH    ?V0 + 1
          CFI V1 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function operator new(unsigned int)
        MOV     R2,#0x1
        MOV     R3,#0x0
        LCALL   `??operator new`
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,R0
        ORL     A,R1
        JZ      `??new CLIOPcf8574_2`
        ; Setup parameters for call to function CLIOPcf8574::CLIOPcf8574()
        LCALL   ??CLIOPcf8574
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    `??new CLIOPcf8574_3`
`??new CLIOPcf8574_2`:
        MOV     R2,#0x0
        MOV     R3,#0x0
`??new CLIOPcf8574_3`:
        POP     ?V0 + 1
          CFI V1 SameValue
          CFI CFA_SP SP+-3
        POP     ?V0 + 0
          CFI V0 SameValue
          CFI CFA_SP SP+-2
        RET
          CFI EndBlock cfiBlock0

        RSEG NEAR_CODE:CODE:NOROOT(0)
// __near_func __xdata_reentrant void CLIOPcf8574::delete ~CLIOPcf8574(CLIOPcf8574 *)
`??delete ~CLIOPcf8574`:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function `??delete ~CLIOPcf8574`
        CODE
        FUNCALL `??delete ~CLIOPcf8574`, `?~CLIOPcf8574`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL `??delete ~CLIOPcf8574`, `??operator delete`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 8)
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JZ      `??delete ~CLIOPcf8574_1`
        ; Setup parameters for call to function CLIOPcf8574::~CLIOPcf8574()
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `?~CLIOPcf8574`
        ; Setup parameters for call to function operator delete(void *)
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??operator delete`
`??delete ~CLIOPcf8574_1`:
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA
          CFI EndBlock cfiBlock1

        RSEG NEAR_CODE:CODE:NOROOT(0)
// __near_func __xdata_reentrant CLIOPcf8574 &CLIOPcf8574::new CLIOPcf8574(UC, UC)
`??new CLIOPcf8574_1`:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function `??new CLIOPcf8574_1`
        CODE
        FUNCALL `??new CLIOPcf8574_1`, `??operator new`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL `??new CLIOPcf8574_1`, ??CLIOPcf8574_1
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?FUNC_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        MOV     R6,A
        ; Setup parameters for call to function operator new(unsigned int)
        MOV     R2,#0x1
        MOV     R3,#0x0
        LCALL   `??operator new`
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,R0
        ORL     A,R1
        JZ      `??new CLIOPcf8574_4`
        ; Setup parameters for call to function CLIOPcf8574::CLIOPcf8574(UC, UC)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R1,A
        LCALL   ??CLIOPcf8574_1
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    `??new CLIOPcf8574_5`
`??new CLIOPcf8574_4`:
        MOV     R2,#0x0
        MOV     R3,#0x0
`??new CLIOPcf8574_5`:
        MOV     R7,#0x2
        LJMP    ?FUNC_LEAVE_XDATA
          CFI EndBlock cfiBlock2
// J:\Projet_Session5_LNAH\S2_18Nov2014\Programme Station 2\FESTO\Libraire\CLIOPcf8574.cpp
//    1 // ********************** FICHIER: CLPcf8574.cpp******************************
//    2 // Descrtiption : La classe contient des fonctions pour controler le PCF
//    3 //              : 8574 sur le suiveur de ligne et sur le bolide
//    4 //
//    5 // Composition  : CLI2CPort
//    6 //
//    7 // Heritage     : Aucun
//    8 //
//    9 // Fonctions    : void vWritePCF8574 (ucAdresse, ucDonnee)//Ecrit Adr, Donnee
//   10 //                UC ucReadPCF8574 (UC ucAdresse)  //Read un canal du ADC
//   11 //
//   12 //  AUTEUR : Gabriel Fortin-Bélanger
//   13 //  DATE CREATION :    12/02/2014		 VERSION: 1.0
//   14 //
//   15 // ****************************************************************************
//   16 
//   17 #include "_DeclarationGenerale.h"
//   18 #include "CLIOPcf8574.h"
//   19 #include "CLI2CPort.h"
//   20 
//   21 
//   22 // ******************************CLPcf8574**************************************
//   23 //
//   24 //Description: Constructeur defaut du PCF8574            
//   25 //
//   26 // Nom : CLPcf8574 :: CLPcf8574(void)
//   27 //
//   28 // Parametre d'entree : AUCUN
//   29 //
//   30 // Parametre sortie : AUCUN
//   31 //
//   32 //
//   33 // Membres utilisés 
//   34 //    Fonctions : vI2CEcrireDonnee -- Ecrire Donnee en I2C
//   35 //    DOnnees   : Adresse chip, donnee a ecrire
//   36 //
//   37 // Auteur : Gabriel Fortin-Bélanger
//   38 // Date crée : 27/03/2014
//   39 // Date modif :
//   40 // ****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   41 CLIOPcf8574 :: CLIOPcf8574(void)
??CLIOPcf8574:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ??CLIOPcf8574
        CODE
        FUNCALL ??CLIOPcf8574, ??CLI2CPort
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 3)
          CFI CFA_SP SP+-3
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        ; Saved register size: 2
        ; Auto size: 0
        MOV     DPL,R2
        MOV     DPH,R3
//   42  {
        ; Setup parameters for call to function CLI2CPort::CLI2CPort()
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??CLI2CPort
//   43    
//   44  }
        MOV     R2,DPL
        MOV     R3,DPH
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-3
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-2
        RET
          CFI EndBlock cfiBlock3
//   45 // *******************CLPcf8574(UC ucAdresse, UC ucDonnee)**********************
//   46 //
//   47 //Description: Constructeur initialisateur de la classe PCF8574           
//   48 //
//   49 // Nom : CLPcf8574 :: CLPcf8574(UC ucAdresse, UC ucDonnee)
//   50 //
//   51 // Parametre d'entree : ucAdresse -- Adresse du CHIP
//   52 //                    : ucDonnee  -- Donnee a ecrire
//   53 //
//   54 // Parametre sortie : AUCUN
//   55 //
//   56 //
//   57 // Membres utilisés 
//   58 //    Fonctions : vI2CEcrireDonnee -- Ecrire Donnee en I2C
//   59 //    DOnnees   : Adresse chip, donnee a ecrire
//   60 //
//   61 // Auteur : Gabriel Fortin-Bélanger
//   62 // Date crée : 27/03/2014
//   63 // Date modif :
//   64 // ****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   65 CLIOPcf8574 :: CLIOPcf8574(UC ucAdresse, UC ucDonnee)
??CLIOPcf8574_1:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function ??CLIOPcf8574_1
        CODE
        FUNCALL ??CLIOPcf8574_1, ??CLI2CPort
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 8, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 8, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 8)
        ; Saved register size: 8
        ; Auto size: 0
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R1
        MOV     R6,A
//   66  {
        ; Setup parameters for call to function CLI2CPort::CLI2CPort()
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??CLI2CPort
//   67    ucAdressePCF8574 = ucAdresse;
        MOV     A,R6
        MOVX    @DPTR,A
//   68    //vI2CEcrireDonnee(ucAdressePCF8574,0 ,ucDonnee);
//   69  
//   70  }
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA
          CFI EndBlock cfiBlock4
//   71 
//   72 // ***************************~CLPcf85754 (void)*******************************
//   73 //
//   74 //Description: Destructeur par defaut de la classe PCF8574           
//   75 //
//   76 // Nom : CLPcf8574 :: ~CLPcf85754 (void)
//   77 //
//   78 // Parametre d'entree : AUCUN
//   79 //                    : AUCUN
//   80 //
//   81 // Parametre sortie : AUCUN
//   82 //
//   83 //
//   84 // Membres utilisés 
//   85 //    Fonctions : 
//   86 //    DOnnees   : 
//   87 //
//   88 // Auteur : Gabriel Fortin-Bélanger
//   89 // Date crée : 27/03/2014
//   90 // Date modif :
//   91 // ****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   92 CLIOPcf8574 :: ~CLIOPcf8574 (void)
`?~CLIOPcf8574`:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function `?~CLIOPcf8574`
        CODE
//   93  {
        FUNCALL `?~CLIOPcf8574`, `?~CLI2CPort`
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        ; Saved register size: 0
        ; Auto size: 0
//   94  }
        ; Setup parameters for call to function CLI2CPort::~CLI2CPort()
        LJMP    `?~CLI2CPort`
          CFI EndBlock cfiBlock5
//   95 
//   96 // ****************vWritePCF8574(UC ucAdresse, UC ucDonnee)*********************
//   97 //
//   98 //Description: Ecrire des donnees vers le PCF8574         
//   99 //
//  100 // Nom : CLPcf8574 :: vWritePCF8574(UC ucAdresse, UC ucDonnee)
//  101 //
//  102 // Parametre d'entree : ucAdresse -- Adresse du CHIP
//  103 //                    : ucDonnee  -- Donnee a ecrire
//  104 //
//  105 // Parametre sortie : AUCUN
//  106 //
//  107 //
//  108 // Membres utilisés 
//  109 //    Fonctions : vI2CEcrireDonnee -- Ecrire Donnee en I2C
//  110 //    DOnnees   : Adresse chip, donnee a ecrire
//  111 //
//  112 // Auteur : Gabriel Fortin-Bélanger
//  113 // Date crée : 27/03/2014
//  114 // Date modif :
//  115 // ****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//  116 void CLIOPcf8574 :: vWritePCF8574(UC ucAdresse, UC ucDonnee)
??vWritePCF8574:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function ??vWritePCF8574
        CODE
//  117  {
        FUNCALL ??vWritePCF8574, ??vI2CEcrireDonnee
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 8)
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     A,R4
        MOV     R6,A
//  118     
//  119     vI2CEcrireDonnee(ucAdresse,0 , 0 ,ucDonnee);
        ; Setup parameters for call to function CLI2CPort::vI2CEcrireDonnee(UC, US, UC, UC)
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 9)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 10)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     A,R7
        MOV     R1,A
        LCALL   ??vI2CEcrireDonnee
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 8)
//  120  }
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA
          CFI EndBlock cfiBlock6
//  121 
//  122 // ****************vWritePCF8574(UC ucAdresse, UC ucDonnee)*********************
//  123 //
//  124 //Description: Lit des donnees du PCF8574 , ACK seconde lecture ou non        
//  125 //
//  126 // Nom : UC CLPcf8574 :: ucReadPCF8574 (UC ucAdresse, UC ucAck)
//  127 //
//  128 // Parametre d'entree : ucAdresse -- Adresse du CHIP
//  129 //                    : ucAck     -- Plusieurs lectures?
//  130 //
//  131 // Parametre sortie : ucRetourValeur -- Valeur Lue du PCF
//  132 //
//  133 //
//  134 // Membres utilisés 
//  135 //    Fonctions : ucI2CLireDonnee -- Lire Donnee en I2C
//  136 //    DOnnees   : Adresse chip, ACK ou NACK
//  137 //
//  138 // Auteur : Gabriel Fortin-Bélanger
//  139 // Date crée : 27/03/2014
//  140 // Date modif :
//  141 // ****************************************************************************

        RSEG NEAR_CODE:CODE:NOROOT(0)
//  142 UC CLIOPcf8574 :: ucReadPCF8574 (UC ucAdrChip, US usiAdrDepart,UC ucTypeAdr)
??ucReadPCF8574:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function ??ucReadPCF8574
        CODE
//  143  {
        FUNCALL ??ucReadPCF8574, ??ucI2CLireDonnee
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 8)
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  144  
//  145    return (  ucI2CLireDonnee(ucAdrChip,0 ,0));
        ; Setup parameters for call to function CLI2CPort::ucI2CLireDonnee(UC, US, UC)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 9)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??ucI2CLireDonnee
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 8)
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA
          CFI EndBlock cfiBlock7
//  146  }

        END
//  147 
// 
// 272 bytes in segment NEAR_CODE
// 
// 272 bytes of CODE memory
//
//Errors: none
//Warnings: none
