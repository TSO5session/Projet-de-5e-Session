###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             19/Nov/2014  10:59:14 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  near                                               #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data                                               #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  J:\Projet_Session5_LNAH\S2_18Nov2014\Programme     #
#                          Station 2\FESTO\Libraire\CLHorlogeIO.cpp           #
#    Command line       =  "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme    #
#                          Station 2\FESTO\Libraire\CLHorlogeIO.cpp" -D       #
#                          UPSD3254A --preprocess=cl                          #
#                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme    #
#                          Station 2\FESTO\UPSD\List\" -lC                    #
#                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme    #
#                          Station 2\FESTO\UPSD\List\" -lA                    #
#                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme    #
#                          Station 2\FESTO\UPSD\List\" -o                     #
#                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme    #
#                          Station 2\FESTO\UPSD\Obj\" -e --no_cse             #
#                          --no_unroll --no_inline --no_code_motion           #
#                          --no_tbaa --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=near               #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data --nr_virtual_regs 8         #
#                          --dlib_config "C:\Program Files\IAR                #
#                          Systems\Embedded Workbench                         #
#                          6.4\8051\LIB\DLIB\dl8051Normal.h" -I               #
#                          "J:\Projet_Session5_LNAH\S2_18Nov2014\Programme    #
#                          Station 2\FESTO\Libraire\" -Ol --eec++             #
#    List file          =  J:\Projet_Session5_LNAH\S2_18Nov2014\Programme     #
#                          Station 2\FESTO\UPSD\List\CLHorlogeIO.lst          #
#    Object file        =  J:\Projet_Session5_LNAH\S2_18Nov2014\Programme     #
#                          Station 2\FESTO\UPSD\Obj\CLHorlogeIO.r51           #
#                                                                             #
#                                                                             #
###############################################################################

J:\Projet_Session5_LNAH\S2_18Nov2014\Programme Station 2\FESTO\Libraire\CLHorlogeIO.cpp
      1          // ***************** FICHIER:CLHorlogeIO.cpp
      2          //
      3          //  Description: Contient les definitions de fonction pour communiquer avec 
      4          //               le materiel d une horloge
      5          //
      6          //  Application realisee avec IAR
      7          //
      8          //  AUTEUR : Gabriel Fortin-Belanger
      9          //  DATE CREATION :    2014-02-07		 VERSION: 1.0
     10          //  DATE MODIFICATION: ****-**-**
     11          //
     12          //******************************************************************************
     13          #include "CLInOutBase.h"
     14          #include "_DeclarationGenerale.h"
     15          #include "CLHorlogeIO.h"
     16          
     17          
     18          
     19          //***********************CLHorlogeIO(void)
     20          //
     21          //Description:Ce constructeur met l addresse de l horlogr a 0xFC00 par defaut
     22          //            lors de la creation d un objet 
     23          //
     24          // Nom:CLPiece :: CLHorlogeIO(void)
     25          //           
     26          // PARAMETRE D'ENTREE: -
     27          //                  
     28          // 
     29          //
     30          // PARAMETRE DE SORTIE: -             
     31          //
     32          //    
     33          // Membre utilise:  usiAdresseHorloge
     34          //
     35          //
     36          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
     37          // DATE DE MODIFICATION:	
     38          //*****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     39          CLHorlogeIO :: CLHorlogeIO(void)
   \                     ??CLHorlogeIO:
     40          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     41            usiAdresseHorloge = 0xFC00;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   7400         MOV     A,#0x0
   \   00000E   F0           MOVX    @DPTR,A
   \   00000F   A3           INC     DPTR
   \   000010   74FC         MOV     A,#-0x4
   \   000012   F0           MOVX    @DPTR,A
     42          }
   \   000013   D083         POP     DPH
   \   000015   D082         POP     DPL
   \   000017   22           RET
     43          
     44          //***********************CLHorlogeIO(USI usiAdresse)
     45          //
     46          //Description:Ce constructeur met l addresse de l horlogr addresse choisit 
     47          //            lors de la creation d un objet 
     48          //
     49          // Nom:CLPiece :: CLHorlogeIO(USI usiAdresse)
     50          //           
     51          // PARAMETRE D'ENTREE: usiAdresse
     52          //                  
     53          // 
     54          //
     55          // PARAMETRE DE SORTIE: -             
     56          //
     57          //    
     58          // Membre utilise:  usiAdresseHorloge
     59          //
     60          //
     61          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
     62          // DATE DE MODIFICATION:	
     63          //*****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     64          CLHorlogeIO :: CLHorlogeIO(USI usiAdresse)
   \                     ??CLHorlogeIO_1:
     65          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     66            
     67            usiAdresseHorloge = usiAdresse;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   EC           MOV     A,R4
   \   00000D   F0           MOVX    @DPTR,A
   \   00000E   A3           INC     DPTR
   \   00000F   ED           MOV     A,R5
   \   000010   F0           MOVX    @DPTR,A
     68          
     69          }
   \   000011   D083         POP     DPH
   \   000013   D082         POP     DPL
   \   000015   22           RET
     70          
     71          //***********************~CLHorlogeIO(void)
     72          //
     73          //Description:Destructeur ne fait rien
     74          //           
     75          //
     76          // Nom:CLPiece :: ~CLHorlogeIO(void)
     77          //           
     78          // PARAMETRE D'ENTREE: -
     79          //                  
     80          // 
     81          //
     82          // PARAMETRE DE SORTIE: -             
     83          //
     84          //    
     85          // Membre utilise:  -
     86          //
     87          //
     88          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
     89          // DATE DE MODIFICATION:	
     90          //*****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     91          CLHorlogeIO :: ~CLHorlogeIO(void)
   \                     `?~CLHorlogeIO`:
     92          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     93          
     94          
     95          }
   \   000000   22           RET
     96          
     97          //***********************vReadTime(void)
     98          //
     99          //Description:Cette fonction permet de lire Heure HMS d une horloge
    100          //            
    101          //
    102          // Nom:CLPiece :: vReadTime(void)
    103          //           
    104          // PARAMETRE D'ENTREE:-
    105          //                  
    106          // 
    107          //
    108          // PARAMETRE DE SORTIE: -             
    109          //
    110          //    
    111          // Membre utilise: ucIn()
    112          //                 stHorlogeHMS.ucHeure
    113          //                 stHorlogeHMS.ucMinute
    114          //                 stHorlogeHMS.ucSeconde
    115          //                 usiAdresseHorloge
    116          //
    117          //
    118          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
    119          // DATE DE MODIFICATION:	
    120          //*****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    121          void CLHorlogeIO :: vReadTime(void)
   \                     ??vReadTime:
    122          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    123            stHorlogeHMS.ucHeure = ucIn(usiAdresseHorloge);
   \   000009                ; Setup parameters for call to function CLInOutBase::ucIn(unsigned short)
   \   000009   8E82         MOV     DPL,R6
   \   00000B   8F83         MOV     DPH,R7
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   FC           MOV     R4,A
   \   000013   A3           INC     DPTR
   \   000014   E0           MOVX    A,@DPTR
   \   000015   FD           MOV     R5,A
   \   000016   EE           MOV     A,R6
   \   000017   FA           MOV     R2,A
   \   000018   EF           MOV     A,R7
   \   000019   FB           MOV     R3,A
   \   00001A   12....       LCALL   ??ucIn
   \   00001D   E9           MOV     A,R1
   \   00001E   8E82         MOV     DPL,R6
   \   000020   8F83         MOV     DPH,R7
   \   000022   A3           INC     DPTR
   \   000023   A3           INC     DPTR
   \   000024   A3           INC     DPTR
   \   000025   A3           INC     DPTR
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \   000028   F0           MOVX    @DPTR,A
    124            stHorlogeHMS.ucMinute = ucIn(usiAdresseHorloge + 1);
   \   000029                ; Setup parameters for call to function CLInOutBase::ucIn(unsigned short)
   \   000029   8E82         MOV     DPL,R6
   \   00002B   8F83         MOV     DPH,R7
   \   00002D   A3           INC     DPTR
   \   00002E   A3           INC     DPTR
   \   00002F   A3           INC     DPTR
   \   000030   A3           INC     DPTR
   \   000031   E0           MOVX    A,@DPTR
   \   000032   2401         ADD     A,#0x1
   \   000034   FC           MOV     R4,A
   \   000035   A3           INC     DPTR
   \   000036   E0           MOVX    A,@DPTR
   \   000037   3400         ADDC    A,#0x0
   \   000039   FD           MOV     R5,A
   \   00003A   EE           MOV     A,R6
   \   00003B   FA           MOV     R2,A
   \   00003C   EF           MOV     A,R7
   \   00003D   FB           MOV     R3,A
   \   00003E   12....       LCALL   ??ucIn
   \   000041   E9           MOV     A,R1
   \   000042   8E82         MOV     DPL,R6
   \   000044   8F83         MOV     DPH,R7
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   A3           INC     DPTR
   \   000049   A3           INC     DPTR
   \   00004A   A3           INC     DPTR
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   F0           MOVX    @DPTR,A
    125            stHorlogeHMS.ucSeconde = ucIn(usiAdresseHorloge + 0x0100);
   \   00004E                ; Setup parameters for call to function CLInOutBase::ucIn(unsigned short)
   \   00004E   8E82         MOV     DPL,R6
   \   000050   8F83         MOV     DPH,R7
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   A3           INC     DPTR
   \   000055   A3           INC     DPTR
   \   000056   E0           MOVX    A,@DPTR
   \   000057   2400         ADD     A,#0x0
   \   000059   FC           MOV     R4,A
   \   00005A   A3           INC     DPTR
   \   00005B   E0           MOVX    A,@DPTR
   \   00005C   3401         ADDC    A,#0x1
   \   00005E   FD           MOV     R5,A
   \   00005F   EE           MOV     A,R6
   \   000060   FA           MOV     R2,A
   \   000061   EF           MOV     A,R7
   \   000062   FB           MOV     R3,A
   \   000063   12....       LCALL   ??ucIn
   \   000066   E9           MOV     A,R1
   \   000067   8E82         MOV     DPL,R6
   \   000069   8F83         MOV     DPH,R7
   \   00006B   A3           INC     DPTR
   \   00006C   A3           INC     DPTR
   \   00006D   A3           INC     DPTR
   \   00006E   A3           INC     DPTR
   \   00006F   A3           INC     DPTR
   \   000070   A3           INC     DPTR
   \   000071   A3           INC     DPTR
   \   000072   A3           INC     DPTR
   \   000073   F0           MOVX    @DPTR,A
    126          
    127          }
   \   000074   7F01         MOV     R7,#0x1
   \   000076   02....       LJMP    ?FUNC_LEAVE_XDATA
    128          
    129          //***********************vWriteTime(void)
    130          //
    131          //Description:Cette fonction permet d ecrire l Heure HMS d une horloge
    132          //            
    133          //
    134          // Nom:CLPiece :: vWriteTime(void)
    135          //           
    136          // PARAMETRE D'ENTREE:-
    137          //                  
    138          // 
    139          //
    140          // PARAMETRE DE SORTIE: -             
    141          //
    142          //    
    143          // Membre utilise: ucOut()
    144          //                 stHorlogeHMS.ucHeure
    145          //                 stHorlogeHMS.ucMinute
    146          //                 stHorlogeHMS.ucSeconde
    147          //                 usiAdresseHorloge
    148          //                 
    149          //
    150          //
    151          // DATE DE CREATION: 10 octobre 2013    AUTEUR: Gabriel Fortin-B
    152          // DATE DE MODIFICATION:	
    153          //*****************************************************************************

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    154          void CLHorlogeIO :: vWriteTime(void)
   \                     ??vWriteTime:
    155          {
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    156            vOut(usiAdresseHorloge ,stHorlogeHMS.ucHeure);
   \   000009                ; Setup parameters for call to function CLInOutBase::vOut(unsigned short, unsigned char)
   \   000009   8E82         MOV     DPL,R6
   \   00000B   8F83         MOV     DPH,R7
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F9           MOV     R1,A
   \   000015   8E82         MOV     DPL,R6
   \   000017   8F83         MOV     DPH,R7
   \   000019   A3           INC     DPTR
   \   00001A   A3           INC     DPTR
   \   00001B   A3           INC     DPTR
   \   00001C   A3           INC     DPTR
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   FC           MOV     R4,A
   \   00001F   A3           INC     DPTR
   \   000020   E0           MOVX    A,@DPTR
   \   000021   FD           MOV     R5,A
   \   000022   EE           MOV     A,R6
   \   000023   FA           MOV     R2,A
   \   000024   EF           MOV     A,R7
   \   000025   FB           MOV     R3,A
   \   000026   12....       LCALL   ??vOut
    157            vOut(usiAdresseHorloge + 1 ,stHorlogeHMS.ucMinute);
   \   000029                ; Setup parameters for call to function CLInOutBase::vOut(unsigned short, unsigned char)
   \   000029   8E82         MOV     DPL,R6
   \   00002B   8F83         MOV     DPH,R7
   \   00002D   A3           INC     DPTR
   \   00002E   A3           INC     DPTR
   \   00002F   A3           INC     DPTR
   \   000030   A3           INC     DPTR
   \   000031   A3           INC     DPTR
   \   000032   A3           INC     DPTR
   \   000033   A3           INC     DPTR
   \   000034   E0           MOVX    A,@DPTR
   \   000035   F9           MOV     R1,A
   \   000036   8E82         MOV     DPL,R6
   \   000038   8F83         MOV     DPH,R7
   \   00003A   A3           INC     DPTR
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   A3           INC     DPTR
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   2401         ADD     A,#0x1
   \   000041   FC           MOV     R4,A
   \   000042   A3           INC     DPTR
   \   000043   E0           MOVX    A,@DPTR
   \   000044   3400         ADDC    A,#0x0
   \   000046   FD           MOV     R5,A
   \   000047   EE           MOV     A,R6
   \   000048   FA           MOV     R2,A
   \   000049   EF           MOV     A,R7
   \   00004A   FB           MOV     R3,A
   \   00004B   12....       LCALL   ??vOut
    158            vOut(usiAdresseHorloge + 0x0100 ,stHorlogeHMS.ucSeconde);
   \   00004E                ; Setup parameters for call to function CLInOutBase::vOut(unsigned short, unsigned char)
   \   00004E   8E82         MOV     DPL,R6
   \   000050   8F83         MOV     DPH,R7
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   A3           INC     DPTR
   \   000055   A3           INC     DPTR
   \   000056   A3           INC     DPTR
   \   000057   A3           INC     DPTR
   \   000058   A3           INC     DPTR
   \   000059   A3           INC     DPTR
   \   00005A   E0           MOVX    A,@DPTR
   \   00005B   F9           MOV     R1,A
   \   00005C   8E82         MOV     DPL,R6
   \   00005E   8F83         MOV     DPH,R7
   \   000060   A3           INC     DPTR
   \   000061   A3           INC     DPTR
   \   000062   A3           INC     DPTR
   \   000063   A3           INC     DPTR
   \   000064   E0           MOVX    A,@DPTR
   \   000065   2400         ADD     A,#0x0
   \   000067   FC           MOV     R4,A
   \   000068   A3           INC     DPTR
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   3401         ADDC    A,#0x1
   \   00006C   FD           MOV     R5,A
   \   00006D   EE           MOV     A,R6
   \   00006E   FA           MOV     R2,A
   \   00006F   EF           MOV     A,R7
   \   000070   FB           MOV     R3,A
   \   000071   12....       LCALL   ??vOut
    159            
    160          }
   \   000074   7F01         MOV     R7,#0x1
   \   000076   02....       LJMP    ?FUNC_LEAVE_XDATA

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLHorlogeIO &CLHorlogeIO::new CLHorlogeIO()
   \                     `??new CLHorlogeIO`:
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002   C0..         PUSH    ?V0 + 1
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004                ; Setup parameters for call to function operator new(unsigned int)
   \   000004   7A09         MOV     R2,#0x9
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   `??operator new`
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   A8..         MOV     R0,?V0 + 0
   \   000011   A9..         MOV     R1,?V0 + 1
   \   000013   E8           MOV     A,R0
   \   000014   FA           MOV     R2,A
   \   000015   E9           MOV     A,R1
   \   000016   FB           MOV     R3,A
   \   000017   E8           MOV     A,R0
   \   000018   49           ORL     A,R1
   \   000019   600D         JZ      `??new CLHorlogeIO_2`
   \   00001B                ; Setup parameters for call to function CLHorlogeIO::CLHorlogeIO()
   \   00001B   12....       LCALL   ??CLHorlogeIO
   \   00001E   8A..         MOV     ?V0 + 0,R2
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   AA..         MOV     R2,?V0 + 0
   \   000024   AB..         MOV     R3,?V0 + 1
   \   000026   8004         SJMP    `??new CLHorlogeIO_3`
   \                     `??new CLHorlogeIO_2`:
   \   000028   7A00         MOV     R2,#0x0
   \   00002A   7B00         MOV     R3,#0x0
   \                     `??new CLHorlogeIO_3`:
   \   00002C   D0..         POP     ?V0 + 1
   \   00002E   D0..         POP     ?V0 + 0
   \   000030   22           RET

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant CLHorlogeIO &CLHorlogeIO::new CLHorlogeIO(USI)
   \                     `??new CLHorlogeIO_1`:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009                ; Setup parameters for call to function operator new(unsigned int)
   \   000009   7A09         MOV     R2,#0x9
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   12....       LCALL   `??operator new`
   \   000010   8A..         MOV     ?V0 + 0,R2
   \   000012   8B..         MOV     ?V0 + 1,R3
   \   000014   A8..         MOV     R0,?V0 + 0
   \   000016   A9..         MOV     R1,?V0 + 1
   \   000018   E8           MOV     A,R0
   \   000019   FA           MOV     R2,A
   \   00001A   E9           MOV     A,R1
   \   00001B   FB           MOV     R3,A
   \   00001C   E8           MOV     A,R0
   \   00001D   49           ORL     A,R1
   \   00001E   6011         JZ      `??new CLHorlogeIO_4`
   \   000020                ; Setup parameters for call to function CLHorlogeIO::CLHorlogeIO(USI)
   \   000020   EE           MOV     A,R6
   \   000021   FC           MOV     R4,A
   \   000022   EF           MOV     A,R7
   \   000023   FD           MOV     R5,A
   \   000024   12....       LCALL   ??CLHorlogeIO_1
   \   000027   8A..         MOV     ?V0 + 0,R2
   \   000029   8B..         MOV     ?V0 + 1,R3
   \   00002B   AA..         MOV     R2,?V0 + 0
   \   00002D   AB..         MOV     R3,?V0 + 1
   \   00002F   8004         SJMP    `??new CLHorlogeIO_5`
   \                     `??new CLHorlogeIO_4`:
   \   000031   7A00         MOV     R2,#0x0
   \   000033   7B00         MOV     R3,#0x0
   \                     `??new CLHorlogeIO_5`:
   \   000035   7F02         MOV     R7,#0x2
   \   000037   02....       LJMP    ?FUNC_LEAVE_XDATA

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \   __near_func __xdata_reentrant void CLHorlogeIO::delete ~CLHorlogeIO(CLHorlogeIO *)
   \                     `??delete ~CLHorlogeIO`:
   \   000000   74F8         MOV     A,#-0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 8
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EE           MOV     A,R6
   \   00000A   4F           ORL     A,R7
   \   00000B   600E         JZ      `??delete ~CLHorlogeIO_1`
   \   00000D                ; Setup parameters for call to function CLHorlogeIO::~CLHorlogeIO()
   \   00000D   EE           MOV     A,R6
   \   00000E   FA           MOV     R2,A
   \   00000F   EF           MOV     A,R7
   \   000010   FB           MOV     R3,A
   \   000011   12....       LCALL   `?~CLHorlogeIO`
   \   000014                ; Setup parameters for call to function operator delete(void *)
   \   000014   EE           MOV     A,R6
   \   000015   FA           MOV     R2,A
   \   000016   EF           MOV     A,R7
   \   000017   FB           MOV     R3,A
   \   000018   12....       LCALL   `??operator delete`
   \                     `??delete ~CLHorlogeIO_1`:
   \   00001B   7F01         MOV     R7,#0x1
   \   00001D   02....       LJMP    ?FUNC_LEAVE_XDATA
    161          
    162          //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      0  CLHorlogeIO::CLHorlogeIO()
       2      0      9  CLHorlogeIO::CLHorlogeIO(USI)
       0      0      8  CLHorlogeIO::delete ~CLHorlogeIO(CLHorlogeIO *)
                          0 0 8 -> CLHorlogeIO::~CLHorlogeIO()
                          0 0 8 -> operator delete(void *)
       2      0      0  CLHorlogeIO::new CLHorlogeIO()
                          2 0 0 -> CLHorlogeIO::CLHorlogeIO()
                          2 0 0 -> operator new(unsigned int)
       0      0      9  CLHorlogeIO::new CLHorlogeIO(USI)
                          0 0 9 -> CLHorlogeIO::CLHorlogeIO(USI)
                          0 0 9 -> operator new(unsigned int)
       1      0      8  CLHorlogeIO::vReadTime()
                          0 0 8 -> CLInOutBase::ucIn(unsigned short)
       0      0      8  CLHorlogeIO::vWriteTime()
                          0 0 8 -> CLInOutBase::vOut(unsigned short, unsigned char)
       0      0      8  CLHorlogeIO::~CLHorlogeIO()


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      24  CLHorlogeIO::CLHorlogeIO()
      22  CLHorlogeIO::CLHorlogeIO(USI)
      32  CLHorlogeIO::delete ~CLHorlogeIO(CLHorlogeIO *)
      49  CLHorlogeIO::new CLHorlogeIO()
      58  CLHorlogeIO::new CLHorlogeIO(USI)
     121  CLHorlogeIO::vReadTime()
     121  CLHorlogeIO::vWriteTime()
       1  CLHorlogeIO::~CLHorlogeIO()

 
 428 bytes in segment NEAR_CODE
 
 428 bytes of CODE memory

Errors: none
Warnings: none
